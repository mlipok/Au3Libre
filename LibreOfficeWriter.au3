;~ #AutoIt3Wrapper_Au3Check_Parameters=-d -w 1 -w 2 -w 3 -w 4 -w 5 -w 6 -w 7

#include-once
#include "LibreOfficeWriterConstants.au3"
#include "LibreOfficeWriter_Helper.au3"
#include "LibreOfficeWriter_Internal.au3"

; #INDEX# =======================================================================================================================
; Title .........: Libre Office Writer (LOWriter)
; AutoIt Version : v3.3.16.1
; UDF Version    : 0.0.0.3
; Description ...: Provides basic functionality through Autoit for interacting with Libre Office Writer.
; Author(s) .....: donnyh13
; Sources . . . .:  jguinch -- Printmgr.au3, used (_PrintMgr_EnumPrinter);
;					mLipok -- OOoCalc.au3, used (__OOoCalc_ComErrorHandler_UserFunction,_InternalComErrorHandler,
;						-- WriterDemo.au3, used _CreateStruct;
;					Andrew Pitonyak & Laurent Godard (VersionGet);
;					Leagnus & GMK -- OOoCalc.au3, used (SetPropertyValue)
; Dll ...........:
; Note...........: Tips/templates taken from OOoCalc UDF written by user GMK; also from Word UDF by user water.
;					I found the book by Andrew Pitonyak very helpful also, titled, "OpenOffice.org Macros Explained;
;						OOME Third Edition".
;					Of course, this UDF is written using the English version of LibreOffice, and may only work for the English
;						version of LibreOffice installations. Many functions in this UDF may or may not work with OpenOffice
;						Writer, however some settings are definitely for LibreOffice only.
; ===============================================================================================================================

; #CURRENT# =====================================================================================================================
;_LOWriter_CellBackColor
;_LOWriter_CellBorderColor
;_LOWriter_CellBorderPadding
;_LOWriter_CellBorderStyle
;_LOWriter_CellBorderWidth
;_LOWriter_CellCreateTextCursor
;_LOWriter_CellFormula
;_LOWriter_CellGetDataType
;_LOWriter_CellGetError
;_LOWriter_CellGetName
;_LOWriter_CellProtect
;_LOWriter_CellString
;_LOWriter_CellValue
;_LOWriter_CellVertOrient
;_LOWriter_CharStyleBorderColor
;_LOWriter_CharStyleBorderPadding
;_LOWriter_CharStyleBorderStyle
;_LOWriter_CharStyleBorderWidth
;_LOWriter_CharStyleCreate
;_LOWriter_CharStyleDelete
;_LOWriter_CharStyleEffect
;_LOWriter_CharStyleExists
;_LOWriter_CharStyleFont
;_LOWriter_CharStyleFontColor
;_LOWriter_CharStyleGetObj
;_LOWriter_CharStyleOrganizer
;_LOWriter_CharStyleOverLine
;_LOWriter_CharStylePosition
;_LOWriter_CharStyleRotateScale
;_LOWriter_CharStyleSet
;_LOWriter_CharStylesGetNames
;_LOWriter_CharStyleShadow
;_LOWriter_CharStyleSpacing
;_LOWriter_CharStyleStrikeOut
;_LOWriter_CharStyleUnderLine
;_LOWriter_CursorGetDataType
;_LOWriter_CursorGetStatus
;_LOWriter_CursorGetType
;_LOWriter_CursorGoToRange
;_LOWriter_CursorMove
;_LOWriter_DateFormatKeyCreate
;_LOWriter_DateFormatKeyDelete
;_LOWriter_DateFormatKeyExists
;_LOWriter_DateFormatKeyGetString
;_LOWriter_DateFormatKeyList
;_LOWriter_DateStructCreate
;_LOWriter_DateStructModify
;_LOWriter_DirFrmtCharBorderColor
;_LOWriter_DirFrmtCharBorderPadding
;_LOWriter_DirFrmtCharBorderStyle
;_LOWriter_DirFrmtCharBorderWidth
;_LOWriter_DirFrmtCharEffect
;_LOWriter_DirFrmtCharPosition
;_LOWriter_DirFrmtCharRotateScale
;_LOWriter_DirFrmtCharShadow
;_LOWriter_DirFrmtCharSpacing
;_LOWriter_DirFrmtClear
;_LOWriter_DirFrmtFont
;_LOWriter_DirFrmtFontColor
;_LOWriter_DirFrmtGetCurStyles
;_LOWriter_DirFrmtOverLine
;_LOWriter_DirFrmtParAlignment
;_LOWriter_DirFrmtParBackColor
;_LOWriter_DirFrmtParBorderColor
;_LOWriter_DirFrmtParBorderPadding
;_LOWriter_DirFrmtParBorderStyle
;_LOWriter_DirFrmtParBorderWidth
;_LOWriter_DirFrmtParDropCaps
;_LOWriter_DirFrmtParHyphenation
;_LOWriter_DirFrmtParIndent
;_LOWriter_DirFrmtParOutLineAndList
;_LOWriter_DirFrmtParPageBreak
;_LOWriter_DirFrmtParShadow
;_LOWriter_DirFrmtParSpace
;_LOWriter_DirFrmtParTabStopCreate
;_LOWriter_DirFrmtParTabStopDelete
;_LOWriter_DirFrmtParTabStopList
;_LOWriter_DirFrmtParTabStopMod
;_LOWriter_DirFrmtParTxtFlowOpt
;_LOWriter_DirFrmtStrikeOut
;_LOWriter_DirFrmtUnderLine
;_LOWriter_DocBookmarkDelete
;_LOWriter_DocBookmarkGetAnchor
;_LOWriter_DocBookmarkGetObj
;_LOWriter_DocBookmarkInsert
;_LOWriter_DocBookmarkModify
;_LOWriter_DocBookmarksHasName
;_LOWriter_DocBookmarksList
;_LOWriter_DocClose
;_LOWriter_DocConnect
;_LOWriter_DocConvertTableToText
;_LOWriter_DocConvertTextToTable
;_LOWriter_DocCreate
;_LOWriter_DocCreateTextCursor
;_LOWriter_DocDescription
;_LOWriter_DocEnumPrinters
;_LOWriter_DocEnumPrintersAlt
;_LOWriter_DocExecuteDispatch
;_LOWriter_DocExport
;_LOWriter_DocFindAll
;_LOWriter_DocFindAllInRange
;_LOWriter_DocFindNext
;_LOWriter_DocFooterGetTextCursor
;_LOWriter_DocGenProp
;_LOWriter_DocGenPropCreation
;_LOWriter_DocGenPropModification
;_LOWriter_DocGenPropPrint
;_LOWriter_DocGenPropTemplate
;_LOWriter_DocGetCounts
;_LOWriter_DocGetName
;_LOWriter_DocGetPath
;_LOWriter_DocGetString
;_LOWriter_DocGetViewCursor
;_LOWriter_DocHasFrameName
;_LOWriter_DocHasPath
;_LOWriter_DocHasTableName
;_LOWriter_DocHeaderGetTextCursor
;_LOWriter_DocHyperlinkInsert
;_LOWriter_DocInsertControlChar
;_LOWriter_DocInsertString
;_LOWriter_DocIsActive
;_LOWriter_DocIsModified
;_LOWriter_DocIsReadOnly
;_LOWriter_DocMaximize
;_LOWriter_DocMinimize
;_LOWriter_DocOpen
;_LOWriter_DocPosAndSize
;_LOWriter_DocPrint
;_LOWriter_DocPrintIncludedSettings
;_LOWriter_DocPrintMiscSettings
;_LOWriter_DocPrintPageSettings
;_LOWriter_DocPrintSizeSettings
;_LOWriter_DocRedo
;_LOWriter_DocRedoCurActionTitle
;_LOWriter_DocRedoGetAllActionTitles
;_LOWriter_DocRedoIsPossible
;_LOWriter_DocReplaceAll
;_LOWriter_DocReplaceAllInRange
;_LOWriter_DocSave
;_LOWriter_DocSaveAs
;_LOWriter_DocToFront
;_LOWriter_DocUndo
;_LOWriter_DocUndoCurActionTitle
;_LOWriter_DocUndoGetAllActionTitles
;_LOWriter_DocUndoIsPossible
;_LOWriter_DocViewCursorGetPosition
;_LOWriter_DocVisible
;_LOWriter_DocZoom
;_LOWriter_EndnoteDelete
;_LOWriter_EndnoteGetAnchor
;_LOWriter_EndnoteGetTextCursor
;_LOWriter_EndnoteInsert
;_LOWriter_EndnoteModifyAnchor
;_LOWriter_EndnoteSettingsAutoNumber
;_LOWriter_EndnoteSettingsStyles
;_LOWriter_EndnotesGetList
;_LOWriter_FieldAuthorInsert
;_LOWriter_FieldAuthorModify
;_LOWriter_FieldChapterInsert
;_LOWriter_FieldChapterModify
;_LOWriter_FieldCombCharInsert
;_LOWriter_FieldCombCharModify
;_LOWriter_FieldCommentInsert
;_LOWriter_FieldCommentModify
;_LOWriter_FieldCondTextInsert
;_LOWriter_FieldCondTextModify
;_LOWriter_FieldCurrentDisplayGet
;_LOWriter_FieldDateTimeInsert
;_LOWriter_FieldDateTimeModify
;_LOWriter_FieldDelete
;_LOWriter_FieldDocInfoCommentsInsert
;_LOWriter_FieldDocInfoCommentsModify
;_LOWriter_FieldDocInfoCreateAuthInsert
;_LOWriter_FieldDocInfoCreateAuthModify
;_LOWriter_FieldDocInfoCreateDateTimeInsert
;_LOWriter_FieldDocInfoCreateDateTimeModify
;_LOWriter_FieldDocInfoEditTimeInsert
;_LOWriter_FieldDocInfoEditTimeModify
;_LOWriter_FieldDocInfoKeywordsInsert
;_LOWriter_FieldDocInfoKeywordsModify
;_LOWriter_FieldDocInfoModAuthInsert
;_LOWriter_FieldDocInfoModAuthModify
;_LOWriter_FieldDocInfoModDateTimeInsert
;_LOWriter_FieldDocInfoModDateTimeModify
;_LOWriter_FieldDocInfoPrintAuthInsert
;_LOWriter_FieldDocInfoPrintAuthModify
;_LOWriter_FieldDocInfoPrintDateTimeInsert
;_LOWriter_FieldDocInfoPrintDateTimeModify
;_LOWriter_FieldDocInfoRevNumInsert
;_LOWriter_FieldDocInfoRevNumModify
;_LOWriter_FieldDocInfoSubjectInsert
;_LOWriter_FieldDocInfoSubjectModify
;_LOWriter_FieldDocInfoTitleInsert
;_LOWriter_FieldDocInfoTitleModify
;_LOWriter_FieldFileNameInsert
;_LOWriter_FieldFileNameModify
;_LOWriter_FieldFuncHiddenParInsert
;_LOWriter_FieldFuncHiddenParModify
;_LOWriter_FieldFuncHiddenTextInsert
;_LOWriter_FieldFuncHiddenTextModify
;_LOWriter_FieldFuncInputInsert
;_LOWriter_FieldFuncInputModify
;_LOWriter_FieldFuncPlaceholderInsert
;_LOWriter_FieldFuncPlaceholderModify
;_LOWriter_FieldGetAnchor
;_LOWriter_FieldInputListInsert
;_LOWriter_FieldInputListModify
;_LOWriter_FieldPageNumberInsert
;_LOWriter_FieldPageNumberModify
;_LOWriter_FieldRefBookMarkInsert
;_LOWriter_FieldRefBookMarkModify
;_LOWriter_FieldRefEndnoteInsert
;_LOWriter_FieldRefEndnoteModify
;_LOWriter_FieldRefFootnoteInsert
;_LOWriter_FieldRefFootnoteModify
;_LOWriter_FieldRefGetType
;_LOWriter_FieldRefInsert
;_LOWriter_FieldRefMarkDelete
;_LOWriter_FieldRefMarkGetAnchor
;_LOWriter_FieldRefMarkList
;_LOWriter_FieldRefMarkSet
;_LOWriter_FieldRefModify
;_LOWriter_FieldsAdvGetList
;_LOWriter_FieldsDocInfoGetList
;_LOWriter_FieldSenderInsert
;_LOWriter_FieldSenderModify
;_LOWriter_FieldSetVarInsert
;_LOWriter_FieldSetVarMasterCreate
;_LOWriter_FieldSetVarMasterDelete
;_LOWriter_FieldSetVarMasterExists
;_LOWriter_FieldSetVarMasterGetObj
;_LOWriter_FieldSetVarMasterList
;_LOWriter_FieldSetVarMasterListFields
;_LOWriter_FieldSetVarModify
;_LOWriter_FieldsGetList
;_LOWriter_FieldShowVarInsert
;_LOWriter_FieldShowVarModify
;_LOWriter_FieldStatCountInsert
;_LOWriter_FieldStatCountModify
;_LOWriter_FieldStatTemplateInsert
;_LOWriter_FieldStatTemplateModify
;_LOWriter_FieldUpdate
;_LOWriter_FieldVarSetPageInsert
;_LOWriter_FieldVarSetPageModify
;_LOWriter_FieldVarShowPageInsert
;_LOWriter_FieldVarShowPageModify
;_LOWriter_FindFormatModifyAlignment
;_LOWriter_FindFormatModifyEffects
;_LOWriter_FindFormatModifyFont
;_LOWriter_FindFormatModifyHyphenation
;_LOWriter_FindFormatModifyIndent
;_LOWriter_FindFormatModifyOverline
;_LOWriter_FindFormatModifyPageBreak
;_LOWriter_FindFormatModifyPosition
;_LOWriter_FindFormatModifyRotateScaleSpace
;_LOWriter_FindFormatModifySpacing
;_LOWriter_FindFormatModifyStrikeout
;_LOWriter_FindFormatModifyTxtFlowOpt
;_LOWriter_FindFormatModifyUnderline
;_LOWriter_FontExists
;_LOWriter_FontsList
;_LOWriter_FootnoteDelete
;_LOWriter_FootnoteGetAnchor
;_LOWriter_FootnoteGetTextCursor
;_LOWriter_FootnoteInsert
;_LOWriter_FootnoteModifyAnchor
;_LOWriter_FootnoteSettingsAutoNumber
;_LOWriter_FootnoteSettingsContinuation
;_LOWriter_FootnoteSettingsStyles
;_LOWriter_FootnotesGetList
;_LOWriter_FormatKeyCreate
;_LOWriter_FormatKeyDelete
;_LOWriter_FormatKeyExists
;_LOWriter_FormatKeyGetString
;_LOWriter_FormatKeyList
;_LOWriter_FrameAreaColor
;_LOWriter_FrameAreaGradient
;_LOWriter_FrameBorderColor
;_LOWriter_FrameBorderPadding
;_LOWriter_FrameBorderStyle
;_LOWriter_FrameBorderWidth
;_LOWriter_FrameColumnSeparator
;_LOWriter_FrameColumnSettings
;_LOWriter_FrameColumnSize
;_LOWriter_FrameCreate
;_LOWriter_FrameCreateTextCursor
;_LOWriter_FrameDelete
;_LOWriter_FrameGetAnchor
;_LOWriter_FrameGetObjByCursor
;_LOWriter_FrameGetObjByName
;_LOWriter_FrameHyperlink
;_LOWriter_FrameOptions
;_LOWriter_FrameOptionsName
;_LOWriter_FramesGetNames
;_LOWriter_FrameShadow
;_LOWriter_FrameStyleAreaColor
;_LOWriter_FrameStyleAreaGradient
;_LOWriter_FrameStyleBorderColor
;_LOWriter_FrameStyleBorderPadding
;_LOWriter_FrameStyleBorderStyle
;_LOWriter_FrameStyleBorderWidth
;_LOWriter_FrameStyleColumnSeparator
;_LOWriter_FrameStyleColumnSettings
;_LOWriter_FrameStyleColumnSize
;_LOWriter_FrameStyleCreate
;_LOWriter_FrameStyleDelete
;_LOWriter_FrameStyleExists
;_LOWriter_FrameStyleGetObj
;_LOWriter_FrameStyleOptions
;_LOWriter_FrameStyleOrganizer
;_LOWriter_FrameStyleSet
;_LOWriter_FrameStylesGetNames
;_LOWriter_FrameStyleShadow
;_LOWriter_FrameStyleTransparency
;_LOWriter_FrameStyleTransparencyGradient
;_LOWriter_FrameStyleTypePosition
;_LOWriter_FrameStyleTypeSize
;_LOWriter_FrameStyleWrap
;_LOWriter_FrameStyleWrapOptions
;_LOWriter_FrameTransparency
;_LOWriter_FrameTransparencyGradient
;_LOWriter_FrameTypePosition
;_LOWriter_FrameTypeSize
;_LOWriter_FrameWrap
;_LOWriter_FrameWrapOptions
;_LOWriter_NumStyleCreate
;_LOWriter_NumStyleCustomize
;_LOWriter_NumStyleDelete
;_LOWriter_NumStyleExists
;_LOWriter_NumStyleGetObj
;_LOWriter_NumStyleOrganizer
;_LOWriter_NumStylePosition
;_LOWriter_NumStyleSet
;_LOWriter_NumStyleSetLevel
;_LOWriter_NumStylesGetNames
;_LOWriter_PageStyleAreaColor
;_LOWriter_PageStyleAreaGradient
;_LOWriter_PageStyleBorderColor
;_LOWriter_PageStyleBorderPadding
;_LOWriter_PageStyleBorderStyle
;_LOWriter_PageStyleBorderWidth
;_LOWriter_PageStyleColumnSeparator
;_LOWriter_PageStyleColumnSettings
;_LOWriter_PageStyleColumnSize
;_LOWriter_PageStyleCreate
;_LOWriter_PageStyleDelete
;_LOWriter_PageStyleExists
;_LOWriter_PageStyleFooter
;_LOWriter_PageStyleFooterAreaColor
;_LOWriter_PageStyleFooterAreaGradient
;_LOWriter_PageStyleFooterBorderColor
;_LOWriter_PageStyleFooterBorderPadding
;_LOWriter_PageStyleFooterBorderStyle
;_LOWriter_PageStyleFooterBorderWidth
;_LOWriter_PageStyleFooterShadow
;_LOWriter_PageStyleFooterTransparency
;_LOWriter_PageStyleFooterTransparencyGradient
;_LOWriter_PageStyleFootnoteArea
;_LOWriter_PageStyleFootnoteLine
;_LOWriter_PageStyleGetObj
;_LOWriter_PageStyleHeader
;_LOWriter_PageStyleHeaderAreaColor
;_LOWriter_PageStyleHeaderAreaGradient
;_LOWriter_PageStyleHeaderBorderColor
;_LOWriter_PageStyleHeaderBorderPadding
;_LOWriter_PageStyleHeaderBorderStyle
;_LOWriter_PageStyleHeaderBorderWidth
;_LOWriter_PageStyleHeaderShadow
;_LOWriter_PageStyleHeaderTransparency
;_LOWriter_PageStyleHeaderTransparencyGradient
;_LOWriter_PageStyleLayout
;_LOWriter_PageStyleMargins
;_LOWriter_PageStyleOrganizer
;_LOWriter_PageStylePaperFormat
;_LOWriter_PageStyleSet
;_LOWriter_PageStylesGetNames
;_LOWriter_PageStyleShadow
;_LOWriter_PageStyleTransparency
;_LOWriter_PageStyleTransparencyGradient
;_LOWriter_ParObjCopy
;_LOWriter_ParObjCreateList
;_LOWriter_ParObjDelete
;_LOWriter_ParObjPaste
;_LOWriter_ParObjSectionsGet
;_LOWriter_ParObjSelect
;_LOWriter_ParStyleAlignment
;_LOWriter_ParStyleBackColor
;_LOWriter_ParStyleBorderColor
;_LOWriter_ParStyleBorderPadding
;_LOWriter_ParStyleBorderStyle
;_LOWriter_ParStyleBorderWidth
;_LOWriter_ParStyleCreate
;_LOWriter_ParStyleDelete
;_LOWriter_ParStyleDropCaps
;_LOWriter_ParStyleEffect
;_LOWriter_ParStyleExists
;_LOWriter_ParStyleFont
;_LOWriter_ParStyleFontColor
;_LOWriter_ParStyleGetObj
;_LOWriter_ParStyleHyphenation
;_LOWriter_ParStyleIndent
;_LOWriter_ParStyleOrganizer
;_LOWriter_ParStyleOutLineAndList
;_LOWriter_ParStyleOverLine
;_LOWriter_ParStylePageBreak
;_LOWriter_ParStylePosition
;_LOWriter_ParStyleRotateScale
;_LOWriter_ParStyleSet
;_LOWriter_ParStylesGetNames
;_LOWriter_ParStyleShadow
;_LOWriter_ParStyleSpace
;_LOWriter_ParStyleSpacing
;_LOWriter_ParStyleStrikeOut
;_LOWriter_ParStyleTabStopCreate
;_LOWriter_ParStyleTabStopDelete
;_LOWriter_ParStyleTabStopList
;_LOWriter_ParStyleTabStopMod
;_LOWriter_ParStyleTxtFlowOpt
;_LOWriter_ParStyleUnderLine
;_LOWriter_PathConvert
;_LOWriter_SearchDescriptorCreate
;_LOWriter_SearchDescriptorModify
;_LOWriter_SearchDescriptorSimilarityModify
;_LOWriter_ShapesGetNames
;_LOWriter_TableBorderColor
;_LOWriter_TableBorderPadding
;_LOWriter_TableBorderStyle
;_LOWriter_TableBorderWidth
;_LOWriter_TableBreak
;_LOWriter_TableColor
;_LOWriter_TableColumnDelete
;_LOWriter_TableColumnGetCount
;_LOWriter_TableColumnInsert
;_LOWriter_TableCreate
;_LOWriter_TableCreateCursor
;_LOWriter_TableCursor
;_LOWriter_TableDelete
;_LOWriter_TableGetCellNames
;_LOWriter_TableGetCellObjByCursor
;_LOWriter_TableGetCellObjByName
;_LOWriter_TableGetCellObjByPosition
;_LOWriter_TableGetData
;_LOWriter_TableGetObjByCursor
;_LOWriter_TableGetObjByName
;_LOWriter_TableInsert
;_LOWriter_TableMargin
;_LOWriter_TableProperties
;_LOWriter_TableRowColor
;_LOWriter_TableRowDelete
;_LOWriter_TableRowGetCount
;_LOWriter_TableRowInsert
;_LOWriter_TableRowProperty
;_LOWriter_TableSetData
;_LOWriter_TablesGetNames
;_LOWriter_TableShadow
;_LOWriter_TableWidth
; ===============================================================================================================================

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellBackColor
; Description ...: Set and Retrieve the Background color of a Cell or Cell Range.
; Syntax ........: _LOWriter_CellBackColor(Byref $oCell[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iBackColor          - [optional] an integer value. Default is Null. Specify the Cell background color as
;				   +						a Long Integer. See Remarks. Set to $LOW_COLOR_OFF(-1) to disable Background color.
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. If True, the background color is
;				   +						transparent.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iBackColor not an Integer, set less than -1 or greater than 16777215.
;				   @Error 1 @Extended 3 Return 0 = $bBackTransparent not a Boolean and not set to Null.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$iBackColor is set using Long integer. See _LOWriter_ConvertColorToLong,
;						_LOWriter_ConvertColorFromLong. There are also preset colors, listed below.
; Color Constants: $LOW_COLOR_OFF(-1)
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellBackColor(ByRef $oCell, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oCell.BackColor(), $oCell.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 0, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oCell.BackColor = $iBackColor
		If ($iBackColor = $LOW_COLOR_OFF) Then $oCell.BackTransparent = True
		$iError = ($oCell.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1) ;Error setting color.
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oCell.BackTransparent = $bBackTransparent
		$iError = ($oCell.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2) ;Error setting BackTransparent.
	EndIf

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0)
EndFunc   ;==>_LOWriter_CellBackColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellBorderColor
; Description ...: Set the Cell or Cell Range Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_CellBorderColor(Byref $oCell[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Cell in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Cell in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Cell in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Cell in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
; Internal Remark: Error values for Initialization and Processing are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_CellBorderWidth,
;					_LOWriter_CellBorderStyle, _LOWriter_CellBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellBorderColor(ByRef $oCell, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $vReturn

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oCell, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)

EndFunc   ;==>_LOWriter_CellBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellBorderPadding
; Description ...: Set or retrieve the Border Padding (spacing between the Cell text and border) settings.
; Syntax ........: _LOWriter_CellBorderPadding(Byref $oCell[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Cell text in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Cell text in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Cell text in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Cell text in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iTop border distance
;				   |								2 = Error setting $iBottom border distance
;				   |								4 = Error setting $iLeft border distance
;				   |								8 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_CellBorderColor,
;					_LOWriter_CellBorderStyle, _LOWriter_CellBorderWidth
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellBorderPadding(ByRef $oCell, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[4]

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oCell.TopBorderDistance(), $oCell.BottomBorderDistance(), $oCell.LeftBorderDistance(), $oCell.RightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oCell.TopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oCell.TopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oCell.BottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oCell.BottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oCell.LeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oCell.LeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oCell.RightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oCell.RightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CellBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellBorderStyle
; Description ...: Set or Retrieve the Cell or Cell Range Border Line style. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_CellBorderStyle(Byref $oCell[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Cell using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Cell using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Cell using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Cell using one of the line style constants, See below for list.
; Internal Remark: Error values for Initialization and Processing are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_CellBorderWidth, _LOWriter_CellBorderColor, _LOWriter_CellBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellBorderStyle(ByRef $oCell, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $vReturn

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oCell, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CellBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellBorderWidth
; Description ...: Set or Retrieve the Cell or Cell Range Border Line Width. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_CellBorderWidth(Byref $oCell[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +						Cell in MicroMeters. One of the predefined constants listed below can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Cell in MicroMeters. One of the predefined constants listed below can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Cell in MicroMeters. One of the predefined constants listed below can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Cell in MicroMeters. One of the predefined constants listed below can be used.
; Internal Remark: Error values for Initialization and Processing are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set them to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_CellBorderStyle,
;					_LOWriter_CellBorderColor, _LOWriter_CellBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellBorderWidth(ByRef $oCell, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $vReturn

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oCell, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CellBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellCreateTextCursor
; Description ...: Create a Text Cursor in a particular cell for inserting text etc.
; Syntax ........: _LOWriter_CellCreateTextCursor(Byref $oCell)
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
; Return values .: Success: An Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. A Text Cursor Object located in the specified Cell.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
;					_LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellCreateTextCursor(ByRef $oCell)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;Can only create a Text Cursor for individual cells.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.Text.createTextCursor())
EndFunc   ;==>_LOWriter_CellCreateTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellFormula
; Description ...: Set or retrieve a formula for a cell.
; Syntax ........: _LOWriter_CellFormula(Byref $oCell[, $sFormula = Null])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
;                  $sFormula            - [optional] a string value. Default is Null. The Formula to set the Cell to.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFormula not a String and not set to Null keyword.
;				   @Error 1 @Extended 3 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Formula was successfully set.
;				   @Error 0 @Extended 1 Return String = Success. Current formula is returned in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Formula can only be set for an individual cell, not a range.
;					Setting the formula will overwrite any existing data in the cell.
; 					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					To retrieve the total of a formula, use _LOWriter_CellValue.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellFormula(ByRef $oCell, $sFormula = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFormula) And Not ($sFormula = Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Can only set/get formula value for individual cells.
	If ($sFormula = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oCell.getFormula())

	$oCell.setFormula($sFormula)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CellFormula

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellGetDataType
; Description ...: Get the Data type of a specific cell, see remarks.
; Syntax ........: _LOWriter_CellGetDataType(Byref $oCell)
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
; Return values .: Success: A Number.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return Number = Success. The Data Type in Number format, see constants below.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Returns the data type as one of the below constants, Note: If the data was entered by the keyboard, it is
;					generally recognized as a string regardless of the data contained.
; Data Type Constants: $LOW_CELL_TYPE_EMPTY(0), cell is empty.
;						$LOW_CELL_TYPE_VALUE(1), cell contains a value.
;						$LOW_CELL_TYPE_TEXT(2), cell contains text.
;						$LOW_CELL_TYPE_FORMULA(3), cell contains a formula.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellGetDataType(ByRef $oCell)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;Can only get Data Type for individual cells

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.getType())
EndFunc   ;==>_LOWriter_CellGetDataType

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellGetError
; Description ...: Get the formula error Value.
; Syntax ........: _LOWriter_CellGetError(Byref $oCell)
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
; Return values .: Success: A Number.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return Number = Success. The Cell formula error code in Number format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Integer error value. If the cell is not a formula, the error value is zero.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellGetError(ByRef $oCell)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;Can only get Error for individual cells.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.getError())

EndFunc   ;==>_LOWriter_CellGetError

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellGetName
; Description ...: Retrieve the current Cell's name.
; Syntax ........: _LOWriter_CellGetName(Byref $oCell)
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
; Return values .: Success: A String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. The Cell name in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellGetName(ByRef $oCell)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;Can only get Cell Name for individual cells.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.CellName())
EndFunc   ;==>_LOWriter_CellGetName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellProtect
; Description ...: Write-Protect a Cell
; Syntax ........: _LOWriter_CellProtect(Byref $oCell[, $bProtect = Null])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
;                  $bProtect            - [optional] a boolean value. Default is Null. True = Protected from Writing, False =
;				   +						Unprotected. See remarks.
; Return values .: Success: 1 Or Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCell is a Cell Range. Can only set Write-Protect on individual cells.
;				   @Error 1 @Extended 3 Return 0 = $bProtect not a Boolean or not Null keyword.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Failed to set Write-Protect property.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully set Cell Protect setting.
;				   @Error 0 @Extended 0 Return Boolean = Success. $bProtect is set to Null, return will be the current setting
;				   +										of write-protection for the cell, a Boolean value.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Calling $bProtect with Null keyword returns the current WriteProtection setting of the cell. (True or
;					False)
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellProtect(ByRef $oCell, $bProtect = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;Can only set individual cell protect property.
	If ($bProtect = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.IsProtected())
	If Not IsBool($bProtect) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oCell.IsProtected = $bProtect
	Return ($oCell.IsProtected() = $bProtect) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

EndFunc   ;==>_LOWriter_CellProtect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellString
; Description ...: Set or retrieve the current string for a cell.
; Syntax ........: _LOWriter_CellString(Byref $oCell[, $sString = Null])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
;                  $sString             - [optional] a string value. Default is Null. The String of text to set the cell to.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sString not a String and not set to Null keyword.
;				   @Error 1 @Extended 3 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. String was successfully set.
;				   @Error 0 @Extended 1 Return String = Success. Current String is returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: String can only be set for an individual cell, not a range.
;					Setting the String will overwrite any existing data in the cell.
; 					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellString(ByRef $oCell, $sString = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sString) And Not ($sString = Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Can only set/get a String for individual cells.

	If ($sString = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oCell.getString())

	$oCell.setString($sString)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CellString

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellValue
; Description ...: Set or retrieve a Numerical value to a Cell
; Syntax ........: _LOWriter_CellValue(Byref $oCell[, $nValue = Null])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell Object returned from any Table Cell Object
;				   +						creation or retrieval functions.
;                  $nValue              - [optional] a general number value. Default is Null. The value to set the cell to.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $nValue not a Number and not set to Null keyword.
;				   @Error 1 @Extended 3 Return 0 = $oCell is a CellRange not an individual cell.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Value was successfully set.
;				   @Error 0 @Extended 1 Return String = Success. Current Value is returned in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Value can only be set for an individual cell, not a range.
;					Setting the Value will overwrite any existing data in the cell.
;					For a value cell the value is returned, for a string cell zero is returned and for a formula cell the result
;						value of a formula is returned.
; 					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellValue(ByRef $oCell, $nValue = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsNumber($nValue) And Not ($nValue = Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If __LOWriter_IsCellRange($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Can only set/get individual cell values.

	If ($nValue = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oCell.getValue())

	$oCell.setValue($nValue)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CellValue

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CellVertOrient
; Description ...: Set the Vertical Orientation of the Cell or Cell Range contents.
; Syntax ........: _LOWriter_CellVertOrient(Byref $oCell[, $iVertOrient = Null])
; Parameters ....: $oCell               - [in/out] an object. A Table Cell or Cell Range Object returned from any Table Cell
;				   +						Object creation or retrieval functions.
;                  $iVertOrient         - [optional]  an integer value. Default is Null. A Vertical Orientation constant. See
;				   +						Constants Below.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCell not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iVertOrient not an integer, or less than 0 or greater than 3.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Failed to set Cell Vertical Orientation property.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Succesfully set Vertical Orientation.
;				   @Error 0 @Extended 0 Return Integer = Success. $iVertOrient is set to Null, returning current Cell Vertical
;				   +										orientation, see constants below.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Only the Vertical Orientation Constants listed below are accepted. If $iVertOrient is set to Null the
;					current setting is returned.
; Vertical Orientation Constants: $LOW_ORIENT_VERT_NONE(0),
;									$LOW_ORIENT_VERT_TOP(1),
;									$LOW_ORIENT_VERT_CENTER(2),
;									$LOW_ORIENT_VERT_BOTTOM(3)
; Related .......:_LOWriter_TableGetCellObjByCursor, _LOWriter_TableGetCellObjByName, _LOWriter_TableGetCellObjByPosition,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CellVertOrient(ByRef $oCell, $iVertOrient = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	;3 = Vert Orient Bottom, 1 = Vert orient Top

	If ($iVertOrient = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 0, $oCell.VertOrient())
	If Not __LOWriter_IntIsBetween($iVertOrient, $LOW_ORIENT_VERT_NONE, $LOW_ORIENT_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oCell.VertOrient = $iVertOrient

	Return ($oCell.VertOrient() = $iVertOrient) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_CellVertOrient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleBorderColor
; Description ...: Set and Retrieve the Character Style Border Line Color. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_CharStyleBorderColor(Byref $oCharStyle[, $iTop = Null[, $iBottom = Null[,$iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
; Internal Remark: Certain Error values are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_CharStyleBorderWidth, _LOWriter_CharStyleBorderStyle,
;					_LOWriter_CharStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleBorderColor(ByRef $oCharStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oCharStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleBorderPadding
; Description ...: Set and retrieve the distance between the border and the characters. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_CharStyleBorderPadding(Byref $oCharStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four values to the same value.
;				   +											When used, all other parameters are ignored.  In MicroMeters.
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top border distance in
;				   +							MicroMeters.
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom border distance in
;				   +							MicroMeters.
;                  $iLeft               - [optional] an integer value. Default is Null. Set the left border distance in
;				   +							MicroMeters.
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right border distance in
;				   +							MicroMeters.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					All distance values are set in MicroMeters. Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_CharStyleBorderWidth, _LOWriter_CharStyleBorderStyle,
;					_LOWriter_CharStyleBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleBorderPadding(ByRef $oCharStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharBorderPadding($oCharStyle, $iAll, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleBorderStyle
; Description ...: Set or Retrieve the Character Style Border Line style. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_CharStyleBorderStyle(Byref $oCharStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
; Internal Remark: Error values for Initialization and Processing, except for Processing @Extended 1, are passed from the
;					internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					 Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;						$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_CharStyleBorderWidth,
;					_LOWriter_CharStyleBorderColor, _LOWriter_CharStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleBorderStyle(ByRef $oCharStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oCharStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleBorderWidth
; Description ...: Set and Retrieve the Character Style Border Line Width. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_CharStyleBorderWidth(Byref $oCharStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
; Internal Remark: Certain Error values are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;													settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set them to 0
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_CharStyleBorderColor, _LOWriter_CharStyleBorderStyle,
;					_LOWriter_CharStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleBorderWidth(ByRef $oCharStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oCharStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleCreate
; Description ...: Create a new Character Style in a Document.
; Syntax ........: _LOWriter_CharStyleCreate(Byref $oDoc, $sCharStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sCharStyle          - a string value. The Name of the New Character Style to Create.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCharStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sCharStyle name already exists in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Retrieving "CharacterStyle" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Creating "com.sun.star.style.CharacterStyle" Object.
;				   @Error 2 @Extended 3 Return 0 = Error Retrieving Created Character Style Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating new Character Style by Name.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. New Character Style successfully created. Returning Character
;				   +												Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_CharStyleDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleCreate(ByRef $oDoc, $sCharStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCharStyles, $oStyle, $oCharStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oCharStyles = $oDoc.StyleFamilies().getByName("CharacterStyles")
	If Not IsObj($oCharStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyle = $oDoc.createInstance("com.sun.star.style.CharacterStyle")
	If Not IsObj($oStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oCharStyles.insertByName($sCharStyle, $oStyle)

	If Not $oCharStyles.hasByName($sCharStyle) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oCharStyle = $oCharStyles.getByName($sCharStyle)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCharStyle)
EndFunc   ;==>_LOWriter_CharStyleCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleDelete
; Description ...: Delete a User-Created Character Style from a Document.
; Syntax ........: _LOWriter_CharStyleDelete(Byref $oDoc, $oCharStyle[, $bForceDelete = False[, $sReplacementStyle = ""]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function. Must be a User-Created Style, not a built-in Style native
;				   +						to Libre-Office.
;                  $bForceDelete        - [optional] a boolean value. Default is False. If True Character style will be deleted
;				   +						regardless of whether it is in use or not.
;                  $sReplacementStyle   - [optional] a string value. Default is "". The Character style to use instead of the
;				   +						one being deleted if the Character style being deleted was already applied to text
;				   +						in the document. "" = No Character Style
; Return values .:  Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 4 Return 0 = $bForceDelete not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sReplacementStyle not a String.
;				   @Error 1 @Extended 6 Return 0 = $sReplacementStyle doesn't exist in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "CharacterStyles" Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Character Style Name.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $sCharStyle is not a User-Created Character Style and cannot be deleted.
;				   @Error 3 @Extended 2 Return 0 = $sCharStyle is in use and $bForceDelete is false.
;				   @Error 3 @Extended 3 Return 0 = $sCharStyle still exists after deletion attempt.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Character Style called in $oCharStyle was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleDelete(ByRef $oDoc, ByRef $oCharStyle, $bForceDelete = False, $sReplacementStyle = "")
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCharStyles
	Local $sCharStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bForceDelete) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsString($sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($sReplacementStyle <> "") And Not _LOWriter_CharStyleExists($oDoc, $sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oCharStyles = $oDoc.StyleFamilies().getByName("CharacterStyles")
	If Not IsObj($oCharStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$sCharStyle = $oCharStyle.Name()
	If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not $oCharStyle.isUserDefined() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If $oCharStyle.isInUse() And Not ($bForceDelete) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; If Style is in use return an error unless force delete is true.

	If ($sReplacementStyle <> "") Then $oCharStyle.setParentStyle($sReplacementStyle)
	;If User has called a specific style to replace this style, set it to that.

	$oCharStyles.removeByName($sCharStyle)
	Return ($oCharStyles.hasByName($sCharStyle)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CharStyleDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleEffect
; Description ...: Set or Retrieve the Font Effect settings for a Character Style.
; Syntax ........: _LOWriter_CharStyleEffect(Byref $oCharStyle[, $iRelief = Null[, $iCase = Null[, $bHidden = Null[, $bOutline = Null[, $bShadow = Null]]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iRelief             - [optional] an integer value. Default is Null. The Character Relief style. See Constants
;				   +									below.
;                  $iCase               - [optional] an integer value. Default is Null. The Character Case Style. See Constants
;				   +									below.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether the Characters are hidden or not.
;                  $bOutline            - [optional] a boolean value. Default is Null. Whether the characters have an outline
;				   +									around the outside.
;                  $bShadow             - [optional] a boolean value. Default is Null. Whether the characters have a shadow.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRelief not an integer or less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $iCase not an integer or less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $bHidden not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bOutline not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bShadow not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8, 16
;				   |								1 = Error setting $iRelief
;				   |								2 = Error setting $iCase
;				   |								4 = Error setting $bHidden
;				   |								8 = Error setting $bOutline
;				   |								16 = Error setting $bShadow
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Relief Constants: $LOW_RELIEF_NONE(0); no relief is used.
;						$LOW_RELIEF_EMBOSSED(1); the font relief is embossed.
;						$LOW_RELIEF_ENGRAVED(2); the font relief is engraved.
; Case Constants : 	$LOW_CASEMAP_NONE(0); The case of the characters is unchanged.
;						$LOW_CASEMAP_UPPER(1); All characters are put in upper case.
;						$LOW_CASEMAP_LOWER(2); All characters are put in lower case.
;						$LOW_CASEMAP_TITLE(3); The first character of each word is put in upper case.
;						$LOW_CASEMAP_SM_CAPS(4); All characters are put in upper case, but with a smaller font height.
; Related .......: _LOWriter_CharStyleGetObj,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleEffect(ByRef $oCharStyle, $iRelief = Null, $iCase = Null, $bHidden = Null, $bOutline = Null, $bShadow = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharEffect($oCharStyle, $iRelief, $iCase, $bHidden, $bOutline, $bShadow)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleEffect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleExists
; Description ...: Check whether a document contains a Character Style by Name.
; Syntax ........: _LOWriter_CharStyleExists(Byref $oDoc, $sCharStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sCharStyle          - a string value. The Character Style to check.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object,
;				   @Error 1 @Extended 2 Return 0 = $sPageStyle not a String
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean  = Success. If Character Style exists then True is returned, if not,
;				   +									False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleExists(ByRef $oDoc, $sCharStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $oDoc.StyleFamilies.getByName("CharacterStyles").hasByName($sCharStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_CharStyleExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleFont
; Description ...: Set and Retrieve the Font Settings for a Character Style.
; Syntax ........: _LOWriter_CharStyleFont(Byref $oDoc, $oCharStyle[, $sFontName = Null[, $nFontSize = Null[, $iPosture = Null[, $iWeight = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $sFontName           - [optional] a string value. Default is Null. The Font Name to change to.
;                  $nFontSize           - [optional] a general number value. Default is Null. The new Font size.
;                  $iPosture            - [optional] an integer value. Default is Null. Italic setting. See Constants below. Also
;				   +								see remarks.
;                  $iWeight             - [optional] an integer value. Default is Null. Bold settings see Constants below.
;				   +								Also see remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sFontName not available in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $sFontName not a String.
;				   @Error 1 @Extended 7 Return 0 = $nFontSize not a Number.
;				   @Error 1 @Extended 8 Return 0 = $iPosture not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $iWeight less than 50 and not 0, or more than 200. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $sFontName
;				   |								2 = Error setting $nFontSize
;				   |								4 = Error setting $iPosture
;				   |								8 = Error setting $iWeight
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Not every font accepts Bold and Italic settings, and not all settings for bold and Italic are accepted,
;					such as oblique, ultra Bold etc. Libre Writer accepts only the predefined weight values, any other values
;					are changed automatically to an acceptable value, which could trigger a settings error.
; Weight Constants : $LOW_WEIGHT_DONT_KNOW(0); The font weight is not specified/known.
;						$LOW_WEIGHT_THIN(50); specifies a 50% font weight.
;						$LOW_WEIGHT_ULTRA_LIGHT(60); specifies a 60% font weight.
;						$LOW_WEIGHT_LIGHT(75); specifies a 75% font weight.
;						$LOW_WEIGHT_SEMI_LIGHT(90); specifies a 90% font weight.
;						$LOW_WEIGHT_NORMAL(100); specifies a normal font weight.
;						$LOW_WEIGHT_SEMI_BOLD(110); specifies a 110% font weight.
;						$LOW_WEIGHT_BOLD(150); specifies a 150% font weight.
;						$LOW_WEIGHT_ULTRA_BOLD(175); specifies a 175% font weight.
;						$LOW_WEIGHT_BLACK(200); specifies a 200% font weight.
; Slant/Posture Constants : $LOW_POSTURE_NONE(0); specifies a font without slant.
;							$LOW_POSTURE_OBLIQUE(1); specifies an oblique font (slant not designed into the font).
;							$LOW_POSTURE_ITALIC(2); specifies an italic font (slant designed into the font).
;							$LOW_POSTURE_DontKnow(3); specifies a font with an unknown slant.
;							$LOW_POSTURE_REV_OBLIQUE(4); specifies a reverse oblique font (slant not designed into the font).
;							$LOW_POSTURE_REV_ITALIC(5); specifies a reverse italic font (slant designed into the font).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_FontsList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleFont(ByRef $oDoc, ByRef $oCharStyle, $sFontName = Null, $nFontSize = Null, $iPosture = Null, $iWeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($sFontName <> Null) And Not _LOWriter_FontExists($oDoc, $sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_CharFont($oCharStyle, $sFontName, $nFontSize, $iPosture, $iWeight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleFont

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleFontColor
; Description ...: Set or retrieve the font color, transparency and highlighting of a Character style.
; Syntax ........: _LOWriter_CharStyleFontColor(Byref $oCharStyle[, $iFontColor = Null[, $iTransparency = Null[, $iHighlight = Null]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iFontColor          - [optional] an integer value. Default is Null. the desired Color value in Long Integer
;				   +								format, to make the font, can be one of the constants listed below or a
;				   +								custom value. Set to $LOW_COLOR_OFF(-1) for Auto color.
;                  $iTransparency       - [optional] an integer value. Default is Null. Transparency percentage. 0 is not
;				   +								visible, 100 is fully visible. Available for Libre Office 7.0 and up.
;                  $iHighlight          - [optional] an integer value. Default is Null. A Color value in Long Integer format,
;				   +								to highlight the text in, can be one of the constants listed below or a
;				   +								custom value. Set to $LOW_COLOR_OFF(-1) for No color.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iFontColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $iTransparency not an Integer, or less than 0 or greater than 100%.
;				   @Error 1 @Extended 6 Return 0 = $iHighlight not an integer, less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $FontColor
;				   |								2 = Error setting $iTransparency.
;				   |								4 = Error setting $iHighlight
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 or 3 Element Array with values in order of function
;				   +								parameters. If The current Libre Office version is below 7.0 the returned
;				   +								array will contain 2 elements, because $iTransparency is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: When setting transparency, the value of font color value is changed.
; Color Constants: $LOW_COLOR_OFF(-1)
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleFontColor(ByRef $oCharStyle, $iFontColor = Null, $iTransparency = Null, $iHighlight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharFontColor($oCharStyle, $iFontColor, $iTransparency, $iHighlight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleFontColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleGetObj
; Description ...: Retrieve a Character Style Object for use with other CharStyle functions.
; Syntax ........: _LOWriter_CharStyleGetObj(Byref $oDoc, $sCharStyle)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sCharStyle           - a string value. The Character Style name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCharStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = Character Style defined in $sCharStyle not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Character Style Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully retrieved and returned requested Character Style
;				   +										Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_CharStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleGetObj(ByRef $oDoc, $sCharStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCharStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oCharStyle = $oDoc.StyleFamilies().getByName("CharacterStyles").getByName($sCharStyle)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCharStyle)
EndFunc   ;==>_LOWriter_CharStyleGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleOrganizer
; Description ...: Set or retrieve the Organizer settings of a Character Style.
; Syntax ........: _LOWriter_CharStyleOrganizer(Byref $oDoc, $oCharStyle[, $sNewCharStyleName = Null[, $sParentStyle = Null[, $bHidden = Null]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $sNewCharStyleName   - [optional] a string value. Default is Null. The new name to set $sChrStyle Character
;				   +						style to.
;                  $sParentStyle        - [optional] a string value. Default is Null. Set an existing  Character style
;				   +						(or an Empty String ("") = - None -) to apply its settings to the current style.
;				   +						Use the other settings to modify the inherited style settings.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether to hide the style in the UI.
;				   +						Libre Office version 4.0 and up only.
; Return values .:   Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sNewCharStyleName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sNewCharStyleName already exists in document.
;				   @Error 1 @Extended 6 Return 0 = $sParentStyle not a String.
;				   @Error 1 @Extended 7 Return 0 = $sParentStyle Doesn't exist in this Document.
;				   @Error 1 @Extended 8 Return 0 = $bHidden not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sNewParStyleName
;				   |								2 = Error setting $sParentStyle
;				   |								4 = Error setting $bHidden
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 or 3 Element Array with values in order of function
;				   +								parameters. If the Libre Office version is below 4.0, the Array will contain
;				   +								2 elements because $bHidden is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set
;					to Null keyword), to get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleOrganizer(ByRef $oDoc, ByRef $oCharStyle, $sNewCharStyleName = Null, $sParentStyle = Null, $bHidden = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOrganizer[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($sNewCharStyleName, $sParentStyle, $bHidden) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avOrganizer, $oCharStyle.Name(), __LOWriter_CharStyleNameToggle($oCharStyle.ParentStyle(), True), _
					$oCharStyle.Hidden())
		Else
			__LOWriter_ArrayFill($avOrganizer, $oCharStyle.Name(), __LOWriter_CharStyleNameToggle($oCharStyle.ParentStyle(), True))
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOrganizer)
	EndIf

	If ($sNewCharStyleName <> Null) Then
		If Not IsString($sNewCharStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If _LOWriter_CharStyleExists($oDoc, $sNewCharStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oCharStyle.Name = $sNewCharStyleName
		$iError = ($oCharStyle.Name() = $sNewCharStyleName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sParentStyle <> Null) Then
		If Not IsString($sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If ($sParentStyle <> "") Then
			If Not _LOWriter_CharStyleExists($oDoc, $sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			$sParentStyle = __LOWriter_CharStyleNameToggle($sParentStyle)
		EndIf
		$oCharStyle.ParentStyle = $sParentStyle
		$iError = ($oCharStyle.ParentStyle() = $sParentStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bHidden <> Null) Then
		If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oCharStyle.Hidden = $bHidden
		$iError = ($oCharStyle.Hidden() = $bHidden) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CharStyleOrganizer

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleOverLine
; Description ...: Set and retrieve the OverLine settings for a Character style.
; Syntax ........: _LOWriter_CharStyleOverLine(Byref $oCharStyle[, $bWordOnly = Null[, $iOverLineStyle = Null[, $bOLHasColor = Null[, $iOLColor = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not Overlined.
;                  $iOverLineStyle      - [optional] an integer value. Default is Null. The style of the Overline line, see
;				   +									constants listed below. See Remarks.
;                  $bOLHasColor         - [optional] a boolean value. Default is Null. Whether the Overline is colored, must
;				   +						be set to true in order to set the Overline color.
;                  $iOLColor            - [optional] an integer value. Default is Null. The color of the Overline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iOverLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bOLHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iOLColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iOverLineStyle
;				   |								4 = Error setting $OLHasColor
;				   |								8 = Error setting $iOLColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Note: OverLine line style uses the same constants as underline style.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: $bOLHasColor must be set to true in order to set the Overline color.
; OverLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleOverLine(ByRef $oCharStyle, $bWordOnly = Null, $iOverLineStyle = Null, $bOLHasColor = Null, $iOLColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharOverLine($oCharStyle, $bWordOnly, $iOverLineStyle, $bOLHasColor, $iOLColor)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleOverLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStylePosition
; Description ...: Set and retrieve settings related to Sub/Super Script and relative size.
; Syntax ........: _LOWriter_CharStylePosition(Byref $oCharStyle[, $bAutoSuper = Null[, $iSuperScript = Null[, $bAutoSub = Null[, $iSubScript = Null[, $iRelativeSize = Null]]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $bAutoSuper          - [optional] a boolean value. Default is Null. Whether to active automatically sizing
;				   +									for SuperScript.
;                  $iSuperScript        - [optional] an integer value. Default is Null. SuperScript percentage value. See
;				   +									Remarks.
;                  $bAutoSub            - [optional] a boolean value. Default is Null. Whether to active automatically sizing
;				   +									for SubScript.
;                  $iSubScript          - [optional] an integer value. Default is Null. SubScript percentage value. See Remarks.
;                  $iRelativeSize       - [optional] an integer value. Default is Null. 1-100 percentage relative to current
;				   +									font size.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoSuper not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bAutoSub not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iSuperScript not an integer, or less than 0, higher than 100 and Not 14000.
;				   @Error 1 @Extended 7 Return 0 = $iSubScript not an integer, or less than -100, higher than 100 and Not 14000.
;				   @Error 1 @Extended 8 Return 0 = $iRelativeSize not an integer, or less than 1, higher than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iSuperScript
;				   |								2 = Error setting $iSubScript
;				   |								4 = Error setting $iRelativeSize.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Set either $iSubScript or $iSuperScript to 0 to return it to Normal setting.
;					The way LibreOffice is set up Super/SubScript are set in the same setting, Super is a positive number from
;						1 to 100 (percentage), SubScript is a negative number set to 1 to 100 percentage. For the user's
;						convenience this function accepts both positive and negative numbers for SubScript, if a positive number
;						is called for SubScript, it is automatically set to a negative. Automatic Superscript has a integer
;						value of 14000, Auto SubScript has a integer value of -14000. There is no settable setting of Automatic
;						Super/Sub Script, though one exists, it is read-only in LibreOffice, consequently I have made two
;						separate parameters to be able to determine if the user wants to automatically set SuperScript or
;						SubScript. If you set both Auto SuperScript to True and Auto SubScript to True, or $iSuperScript
;						to an integer and $iSubScript to an integer, Subscript will be set as it is the last in the
;						line to be set in this function, and thus will over-write any SuperScript settings.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStylePosition(ByRef $oCharStyle, $bAutoSuper = Null, $iSuperScript = Null, $bAutoSub = Null, $iSubScript = Null, $iRelativeSize = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharPosition($oCharStyle, $bAutoSuper, $iSuperScript, $bAutoSub, $iSubScript, $iRelativeSize)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStylePosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleRotateScale
; Description ...: Set or retrieve the character rotational and Scale settings for a Character Style.
; Syntax ........: _LOWriter_CharStyleRotateScale(Byref $oCharStyle[, $iRotation = Null[, $iScaleWidth = Null]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iRotation           - [optional] an integer value. Default is Null. Degrees to rotate the text. Accepts
;				   +								only 0, 90, and 270 degrees.
;                  $iScaleWidth         - [optional] an integer value. Default is Null. The percentage to  horizontally
;				   +					stretch or compress the text. Must be above 1. Max 100. 100 is normal sizing.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRotation not an Integer or not equal to 0, 90 or 270 degrees.
;				   @Error 1 @Extended 5 Return 0 = $iScaleWidth not an Integer or less than 1% or greater than 100%.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iRotation
;				   |								2 = Error setting $iScaleWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleRotateScale(ByRef $oCharStyle, $iRotation = Null, $iScaleWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharRotateScale($oCharStyle, $iRotation, $iScaleWidth)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleRotateScale

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleSet
; Description ...: Set a Character style for a section of text by Cursor or paragraph Object.
; Syntax ........: _LOWriter_CharStyleSet(Byref $oDoc, Byref $oObj, $sCharStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oObj                - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
;                  $sCharStyle          - a string value. The Character Style name.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oObj does not support Character Properties Service.
;				   @Error 1 @Extended 4 Return 0 = $sCharStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = Character Style defined in $sCharStyle doesn't exist in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Character Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Character Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_CharStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleSet(ByRef $oDoc, ByRef $oObj, $sCharStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oObj.supportsService("com.sun.star.style.CharacterProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	$sCharStyle = __LOWriter_CharStyleNameToggle($sCharStyle)
	$oObj.CharStyleName = $sCharStyle
	Return ($oObj.CharStyleName() = $sCharStyle) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_CharStyleSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStylesGetNames
; Description ...: Retrieve a list of all Character Style names available for a document.
; Syntax ........: _LOWriter_CharStylesGetNames(Byref $oDoc[, $bUserOnly = False[, $bAppliedOnly = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True only User-Created Character
;				   +						Styles are returned.
;                  $bAppliedOnly        - [optional] a boolean value. Default is False. If True only Applied Character Styles
;				   +						are returned.
; Return values .:  Success: Integer or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAppliedOnly not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Character Styles Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. No Character Styles found according to parameters.
;				   @Error 0 @Extended ? Return Array = Success. An Array containing all Character Styles matching the
;				   +		input parameters. @Extended contains the count of results returned. If Only a Document object is
;				   +		input, all available Character styles will be returned. Else if $bUserOnly is set to True, only
;				   +		User-Created Character Styles are returned. Else if $bAppliedOnly, only Applied Character Styles
;				   +		are returned. If Both are true then only User-Created Character styles that are applied are
;				   +		returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Five Character styles have two separate names, Footnote Characters is also internally called
;					"Footnote Symbol"; Bullets, is internally called "Bullet Symbol"; Endnote Characters is internally called
;					"Endnote Symbol"; Quotation is internally called "Citation"; and "No Character Style is internally called
;					"Standard". Either name works when setting a Character Style, but on certain functions that return a
;					Character Style Name, you may see one of these alternative names.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStylesGetNames(ByRef $oDoc, $bUserOnly = False, $bAppliedOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oStyles
	Local $aStyles[0]
	Local $iCount = 0
	Local $sExecute = ""

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bAppliedOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyles = $oDoc.StyleFamilies.getByName("CharacterStyles")
	If Not IsObj($oStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $aStyles[$oStyles.getCount()]

	If Not $bUserOnly And Not $bAppliedOnly Then
		For $i = 0 To $oStyles.getCount() - 1
			$aStyles[$i] = $oStyles.getByIndex($i).DisplayName
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		Return SetError($__LOW_STATUS_SUCCESS, $i, $aStyles)
	EndIf

	$sExecute = ($bUserOnly) ? "($oStyles.getByIndex($i).isUserDefined())" : $sExecute
	$sExecute = ($bUserOnly And $bAppliedOnly) ? ($sExecute & " And ") : $sExecute
	$sExecute = ($bAppliedOnly) ? ($sExecute & "($oStyles.getByIndex($i).isInUse())") : $sExecute

	For $i = 0 To $oStyles.getCount() - 1
		If Execute($sExecute) Then
			$aStyles[$iCount] = $oStyles.getByIndex($i).DisplayName()
			$iCount += 1
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	ReDim $aStyles[$iCount]

	Return ($iCount = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_SUCCESS, $iCount, $aStyles)
EndFunc   ;==>_LOWriter_CharStylesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleShadow
; Description ...: Set and retrieve the Shadow for a Character Style. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_CharStyleShadow(Byref $oCharStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. Width of the shadow, set in Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. Color of the shadow. See Remarks and
;				   +							Constants below.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the shadow is transparent or not.
;                  $iLocation           - [optional] an integer value. Default is Null. Location of the shadow compared to the
;				   +									characters. See Constants listed below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iColor not an Integer, or less than 0 or greater than 16777215 micrometers.
;				   @Error 1 @Extended 6 Return 0 = $bTransparent not a boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLocation not an Integer, or less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Shadow format Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shadow format Object for Error Checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may adjust the set width +/- 1 Micrometer after setting.
;					Color is set in Long Integer format. You can use one of the below listed constants or a custom one.
;Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertColorFromLong,
;					 _LOWriter_ConvertColorToLong, _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleShadow(ByRef $oCharStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharShadow($oCharStyle, $iWidth, $iColor, $bTransparent, $iLocation)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleSpacing
; Description ...: Set and retrieve the spacing between characters (Kerning) for a Character style.
; Syntax ........: _LOWriter_CharStyleSpacing(Byref $oDoc, $sCharStyle[, $bAutoKerning = Null[, $nKerning = Null]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $bAutoKerning        - [optional] a boolean value. Default is Null. True applies a spacing in between
;				   +						certain pairs of characters. False = disabled.
;                  $nKerning            - [optional] a general number value. Default is Null. The kerning value of the
;				   +								characters. Min is -2 Pt. Max is 928.8 Pt. See Remarks. Values are in
;				   +								Printer's Points as set in the Libre Office UI.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoKerning not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $nKerning not a number, or less than -2 or greater than 928.8 Points.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bAutoKerning
;				   |								2 = Error setting $nKerning.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					When setting Kerning values in LibreOffice, the measurement is listed in Pt (Printer's Points) in the User
;						Display, however the internal setting is measured in MicroMeters. They will be automatically converted
;						from Points to MicroMeters and back for retrieval of settings.
;						The acceptable values are from -2 Pt to  928.8 Pt. the figures can be directly converted easily,
;						however, for an unknown reason to myself, LibreOffice begins counting backwards and in negative
;						MicroMeters internally from 928.9 up to 1000 Pt (Max setting). For example, 928.8Pt is the last
;						correct value, which equals 32766 uM (MicroMeters), after this LibreOffice reports the following:
;						;928.9 Pt = -32766 uM; 929 Pt = -32763 uM; 929.1 = -32759; 1000 pt = -30258. Attempting to set Libre's
;						kerning value to anything over 32768 uM causes a COM exception, and attempting to set the kerning to
;						any of these negative numbers sets the User viewable kerning value to -2.0 Pt. For these reasons the
;						max settable kerning is -2.0 Pt  to 928.8 Pt.
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleSpacing(ByRef $oCharStyle, $bAutoKerning = Null, $nKerning = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharSpacing($oCharStyle, $bAutoKerning, $nKerning)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleSpacing

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleStrikeOut
; Description ...: Set or Retrieve the StrikeOut settings for a Character style.
; Syntax ........: _LOWriter_CharStyleStrikeOut(Byref $oCharStyle[, $bWordOnly = Null[, $bStrikeOut = Null[, $iStrikeLineStyle = Null]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. Whether to strike out words only and skip
;				   +							whitespaces. True = skip whitespaces.
;                  $bStrikeOut          - [optional] a boolean value. Default is Null. True = strikeout, False = no strikeout.
;                  $iStrikeLineStyle    - [optional] an integer value. Default is Null. The Strikeout Line Style, see constants
;				   +								below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bStrikeOut not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iStrikeLineStyle not an Integer, or less than 0 or greater than 8. Check
;				   +									the Constants list.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $bStrikeOut
;				   |								4 = Error setting $iStrikeLineStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note Strikeout converted to single line in Ms word document format.
; Strikeout Line Style Constants : $LOW_STRIKEOUT_NONE(0); specifies not to strike out the characters.
;					$LOW_STRIKEOUT_SINGLE(1); specifies to strike out the characters with a single line
;					$LOW_STRIKEOUT_DOUBLE(2); specifies to strike out the characters with a double line.
;					$LOW_STRIKEOUT_DONT_KNOW(3); The strikeout mode is not specified.
;					$LOW_STRIKEOUT_BOLD(4); specifies to strike out the characters with a bold line.
;					$LOW_STRIKEOUT_SLASH(5); specifies to strike out the characters with slashes.
;					$LOW_STRIKEOUT_X(6); specifies to strike out the characters with X's.
; Related .......: _LOWriter_CharStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleStrikeOut(ByRef $oCharStyle, $bWordOnly = Null, $bStrikeOut = Null, $iStrikeLineStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharStrikeOut($oCharStyle, $bWordOnly, $bStrikeOut, $iStrikeLineStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleStrikeOut

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CharStyleUnderLine
; Description ...: Set and retrieve the UnderLine settings for a Character style.
; Syntax ........: _LOWriter_CharStyleUnderLine(Byref $oCharStyle[, $bWordOnly = Null[, $iUnderLineStyle = Null[, $bULHasColor = Null[, $iULColor = Null]]]])
; Parameters ....: $oCharStyle           - [in/out] an object. A Character Style object returned by previous CharStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not underlined.
;                  $iUnderLineStyle     - [optional] an integer value. Default is Null. The style of the Underline line, see
;				   +									constants listed below.
;                  $bULHasColor         - [optional] a boolean value. Default is Null. Whether the underline is colored, must
;				   +						be set to true in order to set the underline color.
;                  $iULColor            - [optional] an integer value. Default is Null. The color of the underline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCharStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCharStyle not a Character Style Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iUnderLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bULHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iULColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   +								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iUnderLineStyle
;				   |								4 = Error setting $ULHasColor
;				   |								8 = Error setting $iULColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: $bULHasColor must be set to true in order to set the underline color.
; UnderLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_CharStyleGetObj, _LOWriter_CharStyleCreate, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CharStyleUnderLine(ByRef $oCharStyle, $bWordOnly = Null, $iUnderLineStyle = Null, $bULHasColor = Null, $iULColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oCharStyle.supportsService("com.sun.star.style.CharacterStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharUnderLine($oCharStyle, $bWordOnly, $iUnderLineStyle, $bULHasColor, $iULColor)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_CharStyleUnderLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CursorGetDataType
; Description ...: Determines what type of Text data a Cursor is currently in.
; Syntax ........: _LOWriter_CursorGetType(Byref $oDoc, Byref $oCursor)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Cursor Data Type.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer  = Success, Return value will be one of the below constants.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Returns what type of data a cursor is currently located in, such as a TextTable, Footnote etc.
;Cursor Data Type Constants: $LOW_CURDATA_BODY_TEXT(1),
;								$LOW_CURDATA_FRAME(2),
;								$LOW_CURDATA_CELL(3),
;								$LOW_CURDATA_FOOTNOTE(4),
;								$LOW_CURDATA_ENDNOTE(5),
;								$LOW_CURDATA_HEADER_FOOTER(6)
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CursorGetDataType(ByRef $oDoc, ByRef $oCursor)
	Local $iCursorDataType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$iCursorDataType = __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $iCursorDataType)
EndFunc   ;==>_LOWriter_CursorGetDataType

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CursorGetStatus
; Description ...: Retrieve the current status of a cursor.
; Syntax ........: _LOWriter_CursorGetStatus(Byref $oCursor, $iFlag)
; Parameters ....: $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions.
;                  $iFlag               - an integer value. The Requested status to return, see constants below. Only some work
;				   +						for each type of cursor.
; Return values .: Success: Variable.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFlag not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iFlag set to flag not available for "Text" cursor.
;				   @Error 1 @Extended 4 Return 0 = $iFlag set to flag not available for "Table" cursor.
;				   @Error 1 @Extended 5 Return 0 = $iFlag  set to flag not available for "View" cursor.
;				   @Error 1 @Extended 6 Return 0 = $oCursor unknown cursor type.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Status for Text Cursor.
;				   @Error 3 @Extended 2 Return 0 = Error retrieving Status for Table Cursor.
;				   @Error 3 @Extended 3 Return 0 = Error retrieving Status for View Cursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return Variable. = Success. The requested status was successfully returned. See
;				   +								corresponding flag for return type
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Text And View Cursor Status Flag Constants:
;				$LOW_CURSOR_STAT_IS_COLLAPSED, Returns True if the start and end positions are the same, meaning the cursor has
;					nothing selected.
;Text Cursor Status Flag Constants:
;				$LOW_CURSOR_STAT_IS_START_OF_WORD, Returns True if at the start of a word.
;				$LOW_CURSOR_STAT_IS_END_OF_WORD, Return True if at the end of a word.
;				$LOW_CURSOR_STAT_IS_START_OF_SENTENCE, Returns True if at the start of a sentence.
;				$LOW_CURSOR_STAT_IS_END_OF_SENTENCE, Return True if at the end of a sentence.
;				$LOW_CURSOR_STAT_IS_START_OF_PAR, True if at the start of a paragraph.
;				$LOW_CURSOR_STAT_IS_END_OF_PAR, True if at the End of a paragraph.
;View Cursor Status Flag Constants:
;				$LOW_CURSOR_STAT_IS_START_OF_LINE, Returns True if the cursor is at the start of the line.
;				$LOW_CURSOR_STAT_IS_END_OF_LINE, Returns True if the cursor is at the end of the line.
;				$LOW_CURSOR_STAT_GET_PAGE, Returns the current page as a Integer.
;Table Cursor Status Flag Constants:
;				$LOW_CURSOR_STAT_GET_RANGE_NAME, Returns the cell range selected by this cursor as a string. For example,
;					“B3:D5”.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor, _LOWriter_CursorGetType
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CursorGetStatus(ByRef $oCursor, $iFlag)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType
	Local $vReturn
	Local $aiCommands[11]
	$aiCommands[$LOW_CURSOR_STAT_IS_COLLAPSED] = ".isCollapsed()"
	$aiCommands[$LOW_CURSOR_STAT_IS_START_OF_WORD] = ".isStartOfWord()"
	$aiCommands[$LOW_CURSOR_STAT_IS_END_OF_WORD] = ".isEndOfWord()"
	$aiCommands[$LOW_CURSOR_STAT_IS_START_OF_SENTENCE] = ".isStartOfSentence()"
	$aiCommands[$LOW_CURSOR_STAT_IS_END_OF_SENTENCE] = ".isEndOfSentence()"
	$aiCommands[$LOW_CURSOR_STAT_IS_START_OF_PAR] = ".isStartOfParagraph()"
	$aiCommands[$LOW_CURSOR_STAT_IS_END_OF_PAR] = ".isEndOfParagraph()"
	$aiCommands[$LOW_CURSOR_STAT_IS_START_OF_LINE] = ".isAtStartOfLine()"
	$aiCommands[$LOW_CURSOR_STAT_IS_END_OF_LINE] = ".isAtEndOfLine()"
	$aiCommands[$LOW_CURSOR_STAT_GET_PAGE] = ".getPage()"
	$aiCommands[$LOW_CURSOR_STAT_GET_RANGE_NAME] = ".getRangeName()"

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFlag) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	Switch $iCursorType
		Case $LOW_CURTYPE_TEXT_CURSOR
			If Not __LOWriter_IntIsBetween($iFlag, $LOW_CURSOR_STAT_IS_COLLAPSED, $LOW_CURSOR_STAT_IS_END_OF_PAR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			$vReturn = Execute("$oCursor" & $aiCommands[$iFlag])
			Return (@error > 0) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) : SetError($__LOW_STATUS_SUCCESS, 0, $vReturn)

		Case $LOW_CURTYPE_TABLE_CURSOR
			If Not ($iFlag = $LOW_CURSOR_STAT_GET_RANGE_NAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			$vReturn = Execute("$oCursor" & $aiCommands[$iFlag])
			Return (@error > 0) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) : SetError($__LOW_STATUS_SUCCESS, 0, $vReturn)

		Case $LOW_CURTYPE_VIEW_CURSOR
			If Not __LOWriter_IntIsBetween($iFlag, $LOW_CURSOR_STAT_IS_START_OF_LINE, $LOW_CURSOR_STAT_GET_PAGE, "", $LOW_CURSOR_STAT_IS_COLLAPSED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			$vReturn = Execute("$oCursor" & $aiCommands[$iFlag])
			Return (@error > 0) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, $vReturn)
		Case Else
			Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;unknown cursor data type.
	EndSwitch

EndFunc   ;==>_LOWriter_CursorGetStatus

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CursorGetType
; Description ...: Determine what type a Cursor Object is, such as a TableCursor, Text Cursor or a ViewCursor.
; Syntax ........: _LOWriter_CursorGetType(Byref $oCursor)
; Parameters ....: $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor variable not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Cursor Type.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer  = Success, Return value will be one of the Constants below.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Will also work for Paragraph object and paragraph section objects.
;Cursor Type Constants: $LOW_CURTYPE_TEXT_CURSOR(1),
;						$LOW_CURTYPE_TABLE_CURSOR(2),
;						$LOW_CURTYPE_VIEW_CURSOR(3),
;						$LOW_CURTYPE_PARAGRAPH(4), such as from _LOWriter_ParObjCreateList
;						$LOW_CURTYPE_TEXT_PORTION(5) such as from _LOWriter_ParObjSectionsGet
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CursorGetType(ByRef $oCursor)
	Local $iCursorType

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $iCursorType)
EndFunc   ;==>_LOWriter_CursorGetType

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CursorGoToRange
; Description ...: Moves a Text or View cursor to another View or Text Cursor Position or Range.
; Syntax ........: _LOWriter_CursorGoToRange(Byref $oCursor, Byref $oRange[, $bSelect = False])
; Parameters ....: $oCursor             - [in/out] an object. an object. A Text or View Cursor Object returned from any Cursor
;				   +						Object creation or retrieval functions.
;                  $oRange              - [in/out] an object. an object. A Text or View Cursor Object returned from any Cursor
;				   +						Object creation or retrieval functions to move $oCursor to.
;                  $bSelect             - [optional] a boolean value. Default is False. If True, the selection is expanded or
;				   +								created from original cursor location to Range location.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oRange not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bSelect not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $oCursor not a Text or View Cursor.
;				   @Error 1 @Extended 5 Return 0 = $oRange not a Text or View Cursor.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error determining $oCursor cursor type.
;				   @Error 3 @Extended 2 Return 0 = Error determining $oRange cursor type.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Cursor successfully moved to $oRange position.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If the Cursor being used as a range has anything selected, the selection will be selected in the Text Cursor
;					also.
; Related .......:  _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor,	_LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CursorGoToRange(ByRef $oCursor, ByRef $oRange, $bSelect = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType, $iRangeType

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oRange) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bSelect) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$iRangeType = __LOWriter_Internal_CursorGetType($oRange)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	If ($iCursorType <> $LOW_CURTYPE_TEXT_CURSOR) And ($iCursorType <> $LOW_CURTYPE_VIEW_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRangeType <> $LOW_CURTYPE_TEXT_CURSOR) And ($iRangeType <> $LOW_CURTYPE_VIEW_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$oCursor.gotoRange($oRange, $bSelect)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_CursorGoToRange

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_CursorMove
; Description ...: Move a Cursor object in a document. Also for creating/Expanding selections.
; Syntax ........: _LOWriter_CursorMove(Byref $oCursor, $iMove[, $iCount = 1[, $bSelect = False]])
; Parameters ....: $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions.
;                  $iMove               - an integer value. The movement command. See remarks and Constants.
;                  $iCount              - [optional] an integer value. Default is 1. Number of movements to make. See remarks.
;                  $bSelect             - [optional] a boolean value. Default is False. Whether to select data during this
;				   +						cursor movement. See remarks.
; Return values .: Success: Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iMove not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iMove mismatch with Cursor type. See Cursor Type/Move Type Constants.
;				   @Error 1 @Extended 4 Return 0 = $iCount not an integer or is a negative.
;				   @Error 1 @Extended 5 Return 0 = $bSelect not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error determining cursor type.
;				   @Error 3 @Extended 2 Return 0 = Error processing cursor move.
;				   @Error 3 @Extended 3 Return 0 = $oCursor Object unknown cursor type.
;				   --Success--
;				   @Error 0 @Extended ? Return Boolean = Success, Cursor object movement was processed successfully. Returns
;				   +				True if the full count of movements were successful, else false if none or only partially
;				   +				successful. @Extended set to number of successful movements. Or Page Number for "gotoPage"
;				   +				command. See Remarks
; Author ........: donnyh13
; Modified ......:
; Remarks .......: $iMove may be set to any of the following constants depending on the Cursor type you are intending to move.
;					 Only some movements accept movement amounts (such as "goRight" 2) etc. Also only some accept creating/
;					extending a selection of text/ data. They will be specified below. To Clear /Unselect a current selection,
;					you can input a move such as "goRight", 0, False.
;Cursor Movement Constants:
;					#Cursor Movement Constants which accept number of Moves and Selecting:
;					-ViewCursor
;						$LOW_VIEWCUR_GO_DOWN, Move the cursor Down by n lines.
;						$LOW_VIEWCUR_GO_UP, Move the cursor Up by n lines.
;						$LOW_VIEWCUR_GO_LEFT, Move the cursor left by n characters.
;						$LOW_VIEWCUR_GO_RIGHT, Move the cursor right by n characters.
;					-TextCursor
;						$LOW_TEXTCUR_GO_LEFT,Move the cursor left by n characters.
;						$LOW_TEXTCUR_GO_RIGHT, Move the cursor right by n characters.
;						$LOW_TEXTCUR_GOTO_NEXT_WORD, Move to the start of the next word.
;						$LOW_TEXTCUR_GOTO_PREV_WORD, Move to the end of the previous word.
;						$LOW_TEXTCUR_GOTO_NEXT_SENTENCE,Move to the start of the next sentence.
;						$LOW_TEXTCUR_GOTO_PREV_SENTENCE, Move to the end of the previous sentence.
;						$LOW_TEXTCUR_GOTO_NEXT_PARAGRAPH, Move to the start of the next paragraph.
;						$LOW_TEXTCUR_GOTO_PREV_PARAGRAPH, Move to the End of the previous paragraph.
;					-TableCursor
;						$LOW_TABLECUR_GO_LEFT, Move the cursor left/right n cells.
;						$LOW_TABLECUR_GO_RIGHT, Move the cursor left/right n cells.
;						$LOW_TABLECUR_GO_UP,  Move the cursor up/down n cells.
;						$LOW_TABLECUR_GO_DOWN, Move the cursor up/down n cells.
;					#Cursor Movements which accept number of Moves Only:
;					-ViewCursor
;						$LOW_VIEWCUR_JUMP_TO_NEXT_PAGE, Move the cursor to the Next page.
;						$LOW_VIEWCUR_JUMP_TO_PREV_PAGE, Move the cursor to the previous page.
;						$LOW_VIEWCUR_SCREEN_DOWN, Scroll the view forward by one visible page.
;						$LOW_VIEWCUR_SCREEN_UP, Scroll the view back by one visible page.
;					#Cursor Movements which accept Selecting Only:
;					-ViewCursor
;						$LOW_VIEWCUR_GOTO_END_OF_LINE, Move the cursor to the end of the current line.
;						$LOW_VIEWCUR_GOTO_START_OF_LINE, Move the cursor to the start of the current line.
;						$LOW_VIEWCUR_GOTO_START, Move the cursor to the start of the document or Table.
;						$LOW_VIEWCUR_GOTO_END, Move the cursor to the end of the document or Table.
;					-TextCursor
;						$LOW_TEXTCUR_GOTO_START, Move the cursor to the start of the text.
;						$LOW_TEXTCUR_GOTO_END, Move the cursor to the end of the text.
;						$LOW_TEXTCUR_GOTO_END_OF_WORD, Move to the end of the current
;						$LOW_TEXTCUR_GOTO_START_OF_WORD, Move to the start of the current word.
;						$LOW_TEXTCUR_GOTO_END_OF_SENTENCE, Move to the end of the current sentence.
;						$LOW_TEXTCUR_GOTO_START_OF_SENTENCE, Move to the start of the current sentence.
;						$LOW_TEXTCUR_GOTO_END_OF_PARAGRAPH, Move to the end of the current paragraph.
;						$LOW_TEXTCUR_GOTO_START_OF_PARAGRAPH, Move to the start of the current paragraph.
;					-TableCursor
;						$LOW_TABLECUR_GOTO_START, Move the cursor to the top left cell.
;						$LOW_TABLECUR_GOTO_END,  Move the cursor to the bottom right cell.
;					#Cursor Movements which accept nothing and are done once per call:
;					-ViewCursor
;						$LOW_VIEWCUR_JUMP_TO_FIRST_PAGE, Move the cursor to the first page.
;						$LOW_VIEWCUR_JUMP_TO_LAST_PAGE, Move the cursor to the Last page.
;						$LOW_VIEWCUR_JUMP_TO_END_OF_PAGE, Move the cursor to the end of the current page.
;						$LOW_VIEWCUR_JUMP_TO_START_OF_PAGE, Move the cursor to the start of the current page.
;					-TextCursor
;						$LOW_TEXTCUR_COLLAPSE_TO_START,(Collapses the current selection and moves the cursor to start of
;						 the selection.
;						$LOW_TEXTCUR_COLLAPSE_TO_END (Collapses the current selection and moves the cursor  to End of
;						the selection.
;					#Misc. Cursor Movements:
;					-ViewCursor
;						$LOW_VIEWCUR_JUMP_TO_PAGE (accepts page number to jump to in $iCount, Returns what page was successfully
;						jumped to.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor, _LOWriter_TableCreateCursor, _LOWriter_CursorGoToRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_CursorMove(ByRef $oCursor, $iMove, $iCount = 1, $bSelect = False)
	Local $iCursorType
	Local $bMoved = False

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	Switch $iCursorType
		Case $LOW_CURTYPE_TEXT_CURSOR
			$bMoved = __LOWriter_TextCursorMove($oCursor, $iMove, $iCount, $bSelect)
			Return SetError(@error, @extended, $bMoved)
		Case $LOW_CURTYPE_TABLE_CURSOR
			$bMoved = __LOWriter_TableCursorMove($oCursor, $iMove, $iCount, $bSelect)
			Return SetError(@error, @extended, $bMoved)
		Case $LOW_CURTYPE_VIEW_CURSOR
			$bMoved = __LOWriter_ViewCursorMove($oCursor, $iMove, $iCount, $bSelect)
			Return SetError(@error, @extended, $bMoved)
		Case Else
			Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) ;unknown cursor data type.
	EndSwitch
EndFunc   ;==>_LOWriter_CursorMove

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateFormatKeyCreate
; Description ...: Create a Date/Time Format Key.
; Syntax ........: _LOWriter_DateFormatKeyCreate(Byref $oDoc, $sFormat)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFormat             - a string value. The Date/Time format String to create.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFormat not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to Create or Retrieve the Format key, but failed.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer = Success. Format Key was successfully created, returning Format Key
;				   +												integer.
;				   @Error 0 @Extended 1 Return Integer = Success. Format Key already existed, returning Format Key integer.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:_LOWriter_DateFormatKeyDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateFormatKeyCreate(ByRef $oDoc, $sFormat)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iFormatKey
	Local $tLocale
	Local $oFormats

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$iFormatKey = $oFormats.queryKey($sFormat, $tLocale, False)
	If ($iFormatKey > -1) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $iFormatKey) ;Format already existed
	$iFormatKey = $oFormats.addNew($sFormat, $tLocale)
	If ($iFormatKey > -1) Then Return SetError($__LOW_STATUS_SUCCESS, 0, $iFormatKey) ;Format created

	Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Failed to create or retrieve Format
EndFunc   ;==>_LOWriter_DateFormatKeyCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateFormatKeyDelete
; Description ...: Delete a User-Created Date/Time Format Key from a Document.
; Syntax ........: _LOWriter_DateFormatKeyDelete(Byref $oDoc, $iFormatKey)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The User-Created Date/Time format Key to delete.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = Format Key called in $iFormatKey not found in Document.
;				   @Error 1 @Extended 4 Return 0 = Format Key called in $iFormatKey not User-Created.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to delete key, but Key is still found in Document.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Format Key was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DateFormatKeyCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateFormatKeyDelete(ByRef $oDoc, $iFormatKey)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tLocale
	Local $oFormats

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_DateFormatKeyExists($oDoc, $iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Key not found.
	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	If ($oFormats.getbykey($iFormatKey).UserDefined() = False) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;Key not User Created.

	$oFormats.removeByKey($iFormatKey)

	Return (_LOWriter_DateFormatKeyExists($oDoc, $iFormatKey) = False) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_DateFormatKeyDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateFormatKeyExists
; Description ...: Check if a Document contains a Date/Time Format Key Already or not.
; Syntax ........: _LOWriter_DateFormatKeyExists(Byref $oDoc, $iFormatKey)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The Date Format Key to check for.
; Return values .:  Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iFormatType Parameter for internal Function not an Integer. UDF needs fixed.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to obtain Array of Date/Time Formats.
;				   --Success--
;				   @Error 0 @Extended 0 Return True = Success. Date/Time Format already exists in document.
;				   @Error 0 @Extended 0 Return False = Success. Date/Time Format does not exist in document.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateFormatKeyExists(ByRef $oDoc, $iFormatKey)
	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = _LOWriter_FormatKeyExists($oDoc, $iFormatKey, $LOW_FORMAT_KEYS_DATE_TIME)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DateFormatKeyExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateFormatKeyGetString
; Description ...: Retrieve a Date/Time Format Key String.
; Syntax ........: _LOWriter_DateFormatKeyGetString(Byref $oDoc, $iFormatKey)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The Date/Time Format Key to retrieve the string for.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iFormatKey not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve requested Format Key Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returning Format Key's Format String.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:_LOWriter_DateFormatKeyList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateFormatKeyGetString(ByRef $oDoc, $iFormatKey)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFormatKey

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_DateFormatKeyExists($oDoc, $iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oFormatKey = $oDoc.getNumberFormats().getByKey($iFormatKey)
	If Not IsObj($oFormatKey) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;Failed to retrieve Key

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFormatKey.FormatString())
EndFunc   ;==>_LOWriter_DateFormatKeyGetString

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateFormatKeyList
; Description ...: Retrieve an Array of Date/Time Format Keys.
; Syntax ........: _LOWriter_DateFormatKeyList(Byref $oDoc[, $bIsUser = False[, $bUserOnly = False[, $bDateOnly = False[, $bTimeOnly = False]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bIsUser             - [optional] a boolean value. Default is False. If True, Adds a third column to the
;				   +						return Array with a boolean, whether each Key is user-created or not.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True, only user-created Date/Time
;				   +						Format Keys are returned.
;                  $bDateOnly           - [optional] a boolean value. Default is False. If True, Only Date  FormatKeys are
;				   +						returned.
;                  $bTimeOnly           - [optional] a boolean value. Default is False. If True, Only Time Format Keys are
;				   +						returned.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsUser not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bDateOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bTimeOnly not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = Both $bDateOnly and $bTimeOnly set to True. Set one or both to false.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to obtain Array of Date/Time Formats.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning a 2 or three column Array, depending on current
;				   +										$bIsUser setting. Column One (Array[0][0]) will contain the Format
;				   +										Key integer, Column two (Array[0][1]) will contain the Format String
;				   +										And if $bIsUser is set to True, Column Three (Array[0][2]) will
;				   +										contain a Boolean, True if the Format Key is User creater, else
;				   +										false. @Extended is set to the number of Keys returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyDelete, _LOWriter_DateFormatKeyGetString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateFormatKeyList(ByRef $oDoc, $bIsUser = False, $bUserOnly = False, $bDateOnly = False, $bTimeOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFormats
	Local $aiFormatKeys
	Local $avDTFormats[0][3]
	Local $tLocale
	Local $iColumns = 3, $iCount = 0, $iQueryType = $LOW_FORMAT_KEYS_DATE_TIME

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bIsUser) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bDateOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bTimeOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($bDateOnly = True) And ($bTimeOnly = True) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$iColumns = ($bIsUser = True) ? $iColumns : 2

	$iQueryType = ($bDateOnly = True) ? $LOW_FORMAT_KEYS_DATE : $iQueryType
	$iQueryType = ($bTimeOnly = True) ? $LOW_FORMAT_KEYS_TIME : $iQueryType

	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$aiFormatKeys = $oFormats.queryKeys($iQueryType, $tLocale, False)
	If Not IsArray($aiFormatKeys) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	ReDim $avDTFormats[UBound($aiFormatKeys)][$iColumns]

	For $i = 0 To UBound($aiFormatKeys) - 1

		If ($bUserOnly = True) Then
			If ($oFormats.getbykey($aiFormatKeys[$i]).UserDefined() = True) Then
				$avDTFormats[$iCount][0] = $aiFormatKeys[$i]
				$avDTFormats[$iCount][1] = $oFormats.getbykey($aiFormatKeys[$i]).FormatString()
				If ($bIsUser = True) Then $avDTFormats[$iCount][2] = $oFormats.getbykey($aiFormatKeys[$i]).UserDefined()
				$iCount += 1
			EndIf
		Else
			$avDTFormats[$i][0] = $aiFormatKeys[$i]
			$avDTFormats[$i][1] = $oFormats.getbykey($aiFormatKeys[$i]).FormatString()
			If ($bIsUser = True) Then $avDTFormats[$i][2] = $oFormats.getbykey($aiFormatKeys[$i]).UserDefined()
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
	Next

	If ($bUserOnly = True) Then ReDim $avDTFormats[$iCount][$iColumns]

	Return SetError($__LOW_STATUS_SUCCESS, UBound($avDTFormats), $avDTFormats)
EndFunc   ;==>_LOWriter_DateFormatKeyList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateStructCreate
; Description ...: Create a Date Structure for inserting a Date into certain other functions.
; Syntax ........: _LOWriter_DateStructCreate([$iYear = Null[, $iMonth = Null[, $iDay = Null[, $iHours = Null[, $iMinutes = Null[, $iSeconds = Null[, $iNanoSeconds = Null[, $bIsUTC = Null]]]]]]]])
; Parameters ....: $iYear               - [optional] an integer value. Default is Null. The Year, in 4 digit integer format.
;                  $iMonth              - [optional] an integer value. Default is Null. The Month, in 2 digit integer format. Set
;				   +						to 0 for Void date. Min 0, Max 12.
;                  $iDay                - [optional] an integer value. Default is Null. The Day, in 2 digit integer format. Set
;				   +						 to 0 for Void date. Min 0, Max 31.
;                  $iHours              - [optional] an integer value. Default is Null. The Hour, in 2 digit integer format. Min
;				   +						0, Max 23.
;                  $iMinutes            - [optional] an integer value. Default is Null. Minutes, in 2 digit integer format. Min
;				   +						0, Max 59.
;                  $iSeconds            - [optional] an integer value. Default is Null. Seconds, in 2 digit integer format. Min
;				   +						0, Max 59.
;                  $iNanoSeconds        - [optional] an integer value. Default is Null. Nano-Second, in integer format. Min 0,
;				   +						Max 999,999,999.
;                  $bIsUTC              - [optional] a boolean value. Default is Null. If true: time zone is UTC Else false:
;				   +						unknown time zone. Libre Office version 4.1 and up.
; Return values .: Success: Structure.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $iYear not an Integer.
;				   @Error 1 @Extended 2 Return 0 = $iYear not 4 digits long.
;				   @Error 1 @Extended 3 Return 0 = $iMonth not an Integer, less than 0 or greater than 12.
;				   @Error 1 @Extended 4 Return 0 = $iDay not an Integer, less than 0 or greater than 31.
;				   @Error 1 @Extended 5 Return 0 = $iHours not an Integer, less than 0 or greater than 23.
;				   @Error 1 @Extended 6 Return 0 = $iMinutes not an Integer, less than 0 or greater than 59.
;				   @Error 1 @Extended 7 Return 0 = $iSeconds not an Integer, less than 0 or greater than 59.
;				   @Error 1 @Extended 8 Return 0 = $iNanoSeconds not an Integer, less than 0 or greater than 999999999.
;				   @Error 1 @Extended 9 Return 0 = $bIsUTC not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.util.DateTime" Object.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.1.
;				   --Success--
;				   @Error 0 @Extended 0 Return Structure = Success. Successfully created the Date/Time Structure,
;				   +												Returning the Date/Time Structure Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateStructCreate($iYear = Null, $iMonth = Null, $iDay = Null, $iHours = Null, $iMinutes = Null, $iSeconds = Null, $iNanoSeconds = Null, $bIsUTC = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tDateStruct

	$tDateStruct = __LOWriter_CreateStruct("com.sun.star.util.DateTime")
	If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iYear <> Null) Then
		If Not IsInt($iYear) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
		If Not (StringLen($iYear) = 4) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$tDateStruct.Year = $iYear
	Else
		$tDateStruct.Year = @YEAR
	EndIf

	If ($iMonth <> Null) Then
		If Not __LOWriter_IntIsBetween($iMonth, 0, 12) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tDateStruct.Month = $iMonth
	Else
		$tDateStruct.Month = @MON
	EndIf

	If ($iDay <> Null) Then
		If Not __LOWriter_IntIsBetween($iDay, 0, 31) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tDateStruct.Day = $iDay
	Else
		$tDateStruct.Day = @MDAY
	EndIf

	If ($iHours <> Null) Then
		If Not __LOWriter_IntIsBetween($iHours, 0, 23) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tDateStruct.Hours = $iHours
	Else
		$tDateStruct.Hours = @HOUR
	EndIf

	If ($iMinutes <> Null) Then
		If Not __LOWriter_IntIsBetween($iMinutes, 0, 59) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tDateStruct.Minutes = $iMinutes
	Else
		$tDateStruct.Minutes = @MIN
	EndIf

	If ($iSeconds <> Null) Then
		If Not __LOWriter_IntIsBetween($iSeconds, 0, 59) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tDateStruct.Seconds = $iSeconds
	Else
		$tDateStruct.Seconds = @SEC
	EndIf

	If ($iNanoSeconds <> Null) Then
		If Not __LOWriter_IntIsBetween($iNanoSeconds, 0, 999999999) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tDateStruct.NanoSeconds = $iNanoSeconds
	Else
		$tDateStruct.NanoSeconds = 0
	EndIf

	If ($bIsUTC <> Null) Then
		If Not IsBool($bIsUTC) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not __LOWriter_VersionCheck(4.1) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$tDateStruct.IsUTC = $bIsUTC
	Else
		If __LOWriter_VersionCheck(4.1) Then $tDateStruct.IsUTC = False
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, $tDateStruct)
EndFunc   ;==>_LOWriter_DateStructCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DateStructModify
; Description ...: Set or retrieve Date Structure settings.
; Syntax ........: _LOWriter_DateStructModify(Byref $tDateStruct[, $iYear = Null[, $iMonth = Null[, $iDay = Null[, $iHours = Null[, $iMinutes = Null[, $iSeconds = Null[, $iNanoSeconds = Null[, $bIsUTC = Null]]]]]]]])
; Parameters ....: $tDateStruct         - [in/out] a dll struct value. The Date Structure to modify, returned from a Create or
;				   +						setting retrieval function. Structure will be directly modified.
;                  $iYear               - [optional] an integer value. Default is Null. The Year, in 4 digit integer format.
;                  $iMonth              - [optional] an integer value. Default is Null. The Month, in 2 digit integer format. Set
;				   +						to 0 for Void date. Min 0, Max 12.
;                  $iDay                - [optional] an integer value. Default is Null. The Day, in 2 digit integer format. Set
;				   +						 to 0 for Void date. Min 0, Max 31.
;                  $iHours              - [optional] an integer value. Default is Null. The Hour, in 2 digit integer format. Min
;				   +						0, Max 23.
;                  $iMinutes            - [optional] an integer value. Default is Null. Minutes, in 2 digit integer format. Min
;				   +						0, Max 59.
;                  $iSeconds            - [optional] an integer value. Default is Null. Seconds, in 2 digit integer format. Min
;				   +						0, Max 59.
;                  $iNanoSeconds        - [optional] an integer value. Default is Null. Nano-Second, in integer format. Min 0,
;				   +						Max 999,999,999.
;                  $bIsUTC              - [optional] a boolean value. Default is Null. If true: time zone is UTC Else false:
;				   +						unknown time zone. Libre Office version 4.1 and up.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $tDateStruct not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iYear not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iYear not 4 digits long.
;				   @Error 1 @Extended 4 Return 0 = $iMonth not an Integer, less than 0 or greater than 12.
;				   @Error 1 @Extended 5 Return 0 = $iDay not an Integer, less than 0 or greater than 31.
;				   @Error 1 @Extended 6 Return 0 = $iHours not an Integer, less than 0 or greater than 23.
;				   @Error 1 @Extended 7 Return 0 = $iMinutes not an Integer, less than 0 or greater than 59.
;				   @Error 1 @Extended 8 Return 0 = $iSeconds not an Integer, less than 0 or greater than 59.
;				   @Error 1 @Extended 9 Return 0 = $iNanoSeconds not an Integer, less than 0 or greater than 999999999.
;				   @Error 1 @Extended 10 Return 0 = $bIsUTC not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128
;				   |								1 = Error setting $iYear
;				   |								2 = Error setting $iMonth
;				   |								4 = Error setting $iDay
;				   |								8 = Error setting $iHours
;				   |								16 = Error setting $iMinutes
;				   |								32 = Error setting $iSeconds
;				   |								64 = Error setting $iNanoSeconds
;				   |								128 = Error setting $bIsUTC
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.1.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 or 8 Element Array with values in order of function
;				   +								parameters. If current Libre Office version is less than 4.1, the Array
;				   +								will contain 7 elements, as $bIsUTC will be eliminated.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DateStructModify(ByRef $tDateStruct, $iYear = Null, $iMonth = Null, $iDay = Null, $iHours = Null, $iMinutes = Null, $iSeconds = Null, $iNanoSeconds = Null, $bIsUTC = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avMod[7]

	If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iYear, $iMonth, $iDay, $iHours, $iMinutes, $iSeconds, $iNanoSeconds, $bIsUTC) Then
		If __LOWriter_VersionCheck(4.1) Then
			__LOWriter_ArrayFill($avMod, $tDateStruct.Year(), $tDateStruct.Month(), $tDateStruct.Day(), $tDateStruct.Hours(), _
					$tDateStruct.Minutes(), $tDateStruct.Seconds(), $tDateStruct.NanoSeconds(), $tDateStruct.IsUTC())
		Else
			__LOWriter_ArrayFill($avMod, $tDateStruct.Year(), $tDateStruct.Month(), $tDateStruct.Day(), $tDateStruct.Hours(), _
					$tDateStruct.Minutes(), $tDateStruct.Seconds(), $tDateStruct.NanoSeconds())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avMod)
	EndIf

	If ($iYear <> Null) Then
		If Not IsInt($iYear) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If Not (StringLen($iYear) = 4) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tDateStruct.Year = $iYear
		$iError = ($tDateStruct.Year() = $iYear) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iMonth <> Null) Then
		If Not __LOWriter_IntIsBetween($iMonth, 0, 12) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tDateStruct.Month = $iMonth
		$iError = ($tDateStruct.Month() = $iMonth) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iDay <> Null) Then
		If Not __LOWriter_IntIsBetween($iDay, 0, 31) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tDateStruct.Day = $iDay
		$iError = ($tDateStruct.Day() = $iDay) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iHours <> Null) Then
		If Not __LOWriter_IntIsBetween($iHours, 0, 23) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tDateStruct.Hours = $iHours
		$iError = ($tDateStruct.Hours() = $iHours) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iMinutes <> Null) Then
		If Not __LOWriter_IntIsBetween($iMinutes, 0, 59) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tDateStruct.Minutes = $iMinutes
		$iError = ($tDateStruct.Minutes() = $iMinutes) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iSeconds <> Null) Then
		If Not __LOWriter_IntIsBetween($iSeconds, 0, 59) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tDateStruct.Seconds = $iSeconds
		$iError = ($tDateStruct.Seconds() = $iSeconds) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iNanoSeconds <> Null) Then
		If Not __LOWriter_IntIsBetween($iNanoSeconds, 0, 999999999) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tDateStruct.NanoSeconds = $iNanoSeconds
		$iError = ($tDateStruct.NanoSeconds() = $iNanoSeconds) ? $iError : BitOR($iError, 64)
	EndIf

	If ($bIsUTC <> Null) Then
		If Not IsBool($bIsUTC) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		If Not __LOWriter_VersionCheck(4.1) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$tDateStruct.IsUTC = $bIsUTC
		$iError = ($tDateStruct.IsUTC() = $bIsUTC) ? $iError : BitOR($iError, 128)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DateStructModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharBorderColor
; Description ...: Set and Retrieve the Character Style Border Line Color by Direct Formatting. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_DirFrmtCharBorderColor(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value may be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value may be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value may be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Character Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value may be used.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						border, Width, Style and Color.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Border Width must be set first to be able to set Border Style and Color.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				  Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtCharBorderWidth, _LOWriter_DirFrmtCharBorderStyle,
;					_LOWriter_DirFrmtCharBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharBorderColor(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("CharTopBorder")
		$oSelection.setPropertyToDefault("CharBottomBorder") ;Resetting one truly resets all, but just to be sure, reset all.
		$oSelection.setPropertyToDefault("CharLeftBorder")
		$oSelection.setPropertyToDefault("CharRightBorder")
		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oSelection, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharBorderPadding
; Description ...: Set and retrieve the distance between the border and the characters by Direct Format. LibreOffice 4.2 and Up.
; Syntax ........: _LOWriter_DirFrmtCharBorderPadding(Byref $oSelection[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four values to the same value.
;				   +											When used, all other parameters are ignored.  In MicroMeters.
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top border distance in
;				   +							MicroMeters.
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom border distance in
;				   +							MicroMeters.
;                  $iLeft               - [optional] an integer value. Default is Null. Set the left border distance in
;				   +							MicroMeters.
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right border distance in
;				   +							MicroMeters.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						border padding, on all sides.
; Return values .:  Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtCharBorderWidth, _LOWriter_DirFrmtCharBorderStyle,
;					_LOWriter_DirFrmtCharBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharBorderPadding(ByRef $oSelection, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		;Resetting any one of these settings causes all to reset; reset the "All" setting for quickness.
		$oSelection.setPropertyToDefault("CharBorderDistance")
		If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharBorderPadding($oSelection, $iAll, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharBorderStyle
; Description ...: Set or Retrieve the Character Style Border Line style by Direct Format. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_DirFrmtCharBorderStyle(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Character Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						border, Width, Style and Color.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Border Width must be set first to be able to set Border Style and Color.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;						$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtCharBorderWidth,
;					_LOWriter_DirFrmtCharBorderColor, _LOWriter_DirFrmtCharBorderPadding
;
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharBorderStyle(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("CharTopBorder")
		$oSelection.setPropertyToDefault("CharBottomBorder") ;Resetting one truly resets all, but just to be sure, reset all.
		$oSelection.setPropertyToDefault("CharLeftBorder")
		$oSelection.setPropertyToDefault("CharRightBorder")
		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oSelection, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharBorderWidth
; Description ...: Set and Retrieve the Character Style Border Line Width by Direct Formatting. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_DirFrmtCharBorderWidth(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Character Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						border, Width, Style and Color.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   To "Turn Off" Borders, set them to 0
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtCharBorderStyle, _LOWriter_DirFrmtCharBorderColor,
;					_LOWriter_DirFrmtCharBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharBorderWidth(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("CharTopBorder")
		$oSelection.setPropertyToDefault("CharBottomBorder") ;Resetting one truly resets all, but just to be sure, reset all.
		$oSelection.setPropertyToDefault("CharLeftBorder")
		$oSelection.setPropertyToDefault("CharRightBorder")
		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_CharBorder($oSelection, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharEffect
; Description ...: Set or Retrieve the Font Effect settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtCharEffect(Byref $oSelection[, $iRelief = Null[, $iCase = Null[, $bHidden = Null[, $bOutline = Null[, $bShadow = Null]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iRelief             - [optional] an integer value. Default is Null. The Character Relief style. See Constants
;				   +									below.
;                  $iCase               - [optional] an integer value. Default is Null. The Character Case Style. See Constants
;				   +									below.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether the Characters are hidden or not.
;                  $bOutline            - [optional] a boolean value. Default is Null. Whether the characters have an outline
;				   +									around the outside.
;                  $bShadow             - [optional] a boolean value. Default is Null. Whether the characters have a shadow.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRelief not an integer or less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $iCase not an integer or less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $bHidden not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bOutline not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bShadow not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8, 16
;				   |								1 = Error setting $iRelief
;				   |								2 = Error setting $iCase
;				   |								4 = Error setting $bHidden
;				   |								8 = Error setting $bOutline
;				   |								16 = Error setting $bShadow
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting.
; Relief Constants: $LOW_RELIEF_NONE(0); no relief is used.
;						$LOW_RELIEF_EMBOSSED(1); the font relief is embossed.
;						$LOW_RELIEF_ENGRAVED(2); the font relief is engraved.
; Case Constants : 	$LOW_CASEMAP_NONE(0); The case of the characters is unchanged.
;						$LOW_CASEMAP_UPPER(1); All characters are put in upper case.
;						$LOW_CASEMAP_LOWER(2); All characters are put in lower case.
;						$LOW_CASEMAP_TITLE(3); The first character of each word is put in upper case.
;						$LOW_CASEMAP_SM_CAPS(4); All characters are put in upper case, but with a smaller font height.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharEffect(ByRef $oSelection, $iRelief = Null, $iCase = Null, $bHidden = Null, $bOutline = Null, $bShadow = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($iRelief, $iCase, $bHidden, $bOutline, $bShadow) Then
		If ($iRelief = Default) Then
			$oSelection.setPropertyToDefault("CharRelief")
			$iRelief = Null
		EndIf

		If ($iCase = Default) Then
			$oSelection.setPropertyToDefault("CharCaseMap")
			$iCase = Null
		EndIf

		If ($bHidden = Default) Then
			$oSelection.setPropertyToDefault("CharHidden")
			$bHidden = Null
		EndIf

		If ($bOutline = Default) Then
			$oSelection.setPropertyToDefault("CharContoured")
			$bOutline = Null
		EndIf

		If ($bShadow = Default) Then
			$oSelection.setPropertyToDefault("CharShadowed")
			$bShadow = Null
		EndIf

		If __LOWriter_VarsAreNull($iRelief, $iCase, $bHidden, $bOutline, $bShadow) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharEffect($oSelection, $iRelief, $iCase, $bHidden, $bOutline, $bShadow)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharEffect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharPosition
; Description ...: Set and retrieve settings related to Sub/Super Script and relative size by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtCharPosition(Byref $oSelection[, $bAutoSuper = Null[, $iSuperScript = Null[, $bAutoSub = Null[, $iSubScript = Null[, $iRelativeSize = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $bAutoSuper          - [optional] a boolean value. Default is Null. Whether to active automatically sizing for
;				   +									SuperScript.
;                  $iSuperScript        - [optional] an integer value. Default is Null. SuperScript percentage value. See
;				   +									Remarks.
;                  $bAutoSub            - [optional] a boolean value. Default is Null. Whether to active automatically sizing for
;				   +									SubScript.
;                  $iSubScript          - [optional] an integer value. Default is Null. SubScript percentage value. See Remarks.
;                  $iRelativeSize       - [optional] an integer value. Default is Null. 1-100 percentage relative to current font
;				   +									size.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Super/Sub Script settings.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoSuper not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bAutoSub not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iSuperScript not an integer, or less than 0, higher than 100 and Not 14000.
;				   @Error 1 @Extended 7 Return 0 = $iSubScript not an integer, or less than -100, higher than 100 and Not 14000.
;				   @Error 1 @Extended 8 Return 0 = $iRelativeSize not an integer, or less than 1, higher than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iSuperScript
;				   |								2 = Error setting $iSubScript
;				   |								4 = Error setting $iRelativeSize.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Set either $iSubScript or $iSuperScript to 0 to return it to Normal setting.
;					The way LibreOffice is set up Super/SubScript are set in the same setting, Super is a positive number from
;						1 to 100 (percentage), SubScript is a negative number set to 1 to 100 percentage. For the user's
;						convenience this function accepts both positive and negative numbers for SubScript, if a positive number
;						is called for SubScript, it is automatically set to a negative. Automatic Superscript has a integer
;						value of 14000, Auto SubScript has a integer value of -14000. There is no settable setting of Automatic
;						Super/Sub Script, though one exists, it is read-only in LibreOffice, consequently I have made two
;						separate parameters to be able to determine if the user wants to automatically set SuperScript or
;						SubScript. If you set both Auto SuperScript to True and Auto SubScript to True, or $iSuperScript
;						to an integer and $iSubScript to an integer, Subscript will be set as it is the last in the
;						line to be set in this function, and thus will over-write any SuperScript settings.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					 _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharPosition(ByRef $oSelection, $bAutoSuper = Null, $iSuperScript = Null, $bAutoSub = Null, $iSubScript = Null, $iRelativeSize = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("CharEscapement")
		If __LOWriter_VarsAreNull($bAutoSuper, $iSuperScript, $bAutoSub, $iSubScript, $iRelativeSize) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharPosition($oSelection, $bAutoSuper, $iSuperScript, $bAutoSub, $iSubScript, $iRelativeSize)

	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharPosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharRotateScale
; Description ...: Set or retrieve the character rotational and Scale settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtCharRotateScale(Byref $oSelection[, $iRotation = Null[, $iScaleWidth = Null[, $bRotateFitLine = Null]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iRotation           - [optional] an integer value. Default is Null. Degrees to rotate the text. Accepts
;				   +								only 0, 90, and 270 degrees.
;                  $iScaleWidth         - [optional] an integer value. Default is Null. The percentage to  horizontally
;				   +					stretch or compress the text. Must be above 1. Max 100. 100 is normal sizing.
;                  $bRotateFitLine      - [optional] a boolean value. Default is Null. If True, Stretches or compresses the
;				   +						selected text so that it fits between the line that is above the text and the line
;				   +						that is below the text.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRotation not an Integer or not equal to 0, 90 or 270 degrees.
;				   @Error 1 @Extended 5 Return 0 = $iScaleWidth not an Integer or less than 1% or greater than 100%.
;				   @Error 1 @Extended 6 Return 0 = $bRotateFitLine not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iRotation
;				   |								2 = Error setting $iScaleWidth
;				   |								4 = Error setting $bRotateFitLine
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;				   Call a Parameter with Default keyword to clear direct formatting for that setting.
; Related .......: _LOWriter_DirFrmtClear,_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor,_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharRotateScale(ByRef $oSelection, $iRotation = Null, $iScaleWidth = Null, $bRotateFitLine = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($iRotation, $iScaleWidth, $bRotateFitLine) Then
		If ($iRotation = Default) Then
			$oSelection.setPropertyToDefault("CharRotation")
			$iRotation = Null
		EndIf

		If ($iScaleWidth = Default) Then
			$oSelection.setPropertyToDefault("CharScaleWidth")
			$iScaleWidth = Null
		EndIf

		If ($bRotateFitLine = Default) Then
			$oSelection.setPropertyToDefault("CharRotationIsFitToLine")
			$bRotateFitLine = Null
		EndIf

		If __LOWriter_VarsAreNull($iRotation, $iScaleWidth, $bRotateFitLine) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If __LOWriter_VarsAreNull($iRotation, $iScaleWidth, $bRotateFitLine) Then
		$vReturn = __LOWriter_CharRotateScale($oSelection, $iRotation, $iScaleWidth, $bRotateFitLine)
		__LOWriter_AddTo1DArray($vReturn, $oSelection.CharRotationIsFitToLine())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $vReturn)
	EndIf

	$vReturn = __LOWriter_CharRotateScale($oSelection, $iRotation, $iScaleWidth, $bRotateFitLine)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharRotateScale

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharShadow
; Description ...: Set and retrieve the Shadow for a Character Style by Direct Formatting. Libre Office 4.2 and Up.
; Syntax ........: _LOWriter_DirFrmtCharShadow(Byref $oSelection[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iWidth              - [optional] an integer value. Default is Null. Width of the shadow, set in Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. Color of the shadow. See Remarks and
;				   +							Constants below.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the shadow is transparent or not.
;                  $iLocation           - [optional] an integer value. Default is Null. Location of the shadow compared to the
;				   +									characters. See Constants listed below.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Character Shadow, Width, Color and Location.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iColor not an Integer, or less than 0 or greater than 16777215 micrometers.
;				   @Error 1 @Extended 6 Return 0 = $bTransparent not a boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLocation not an Integer, or less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Shadow format Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shadow format Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may adjust the set width +/- 1 Micrometer after setting.
;					Color is set in Long Integer format. You can use one of the below listed constants or a custom one.
;Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
;Color Constants:  $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharShadow(ByRef $oSelection, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not __LOWriter_VersionCheck(4.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("CharShadowFormat")
		If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharShadow($oSelection, $iWidth, $iColor, $bTransparent, $iLocation)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtCharSpacing
; Description ...: Set and retrieve the spacing between characters (Kerning)by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtCharSpacing(Byref $oSelection[, $bAutoKerning = Null[, $nKerning = Null]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $bAutoKerning        - [optional] a boolean value. Default is Null. True applies a spacing in between
;				   +						certain pairs of characters. False = disabled.
;                  $nKerning            - [optional] a general number value. Default is Null. The kerning value of the
;				   +								characters. Min is -2 Pt. Max is 928.8 Pt. See Remarks. Values are in
;				   +								Printer's Points as set in the Libre Office UI.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoKerning not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $nKerning not a number, or less than -2 or greater than 928.8 Points.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bAutoKerning
;				   |								2 = Error setting $nKerning.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting.
;					When setting Kerning values in LibreOffice, the measurement is listed in Pt (Printer's Points) in the User
;						Display, however the internal setting is measured in MicroMeters. They will be automatically converted
;						from Points to MicroMeters and back for retrieval of settings.
;						The acceptable values are from -2 Pt to  928.8 Pt. the figures can be directly converted easily,
;						however, for an unknown reason to myself, LibreOffice begins counting backwards and in negative
;						MicroMeters internally from 928.9 up to 1000 Pt (Max setting). For example, 928.8Pt is the last correct
;						value, which equals 32766 uM (MicroMeters), after this LibreOffice reports the following: ;928.9
;						Pt = -32766 uM; 929 Pt = -32763 uM; 929.1 = -32759; 1000 pt = -30258. Attempting to set Libre's kerning
;						value to anything over 32768 uM causes a COM exception, and attempting to set the kerning to any of
;						these negative numbers sets the User viewable kerning value to -2.0 Pt. For these reasons the max
;						settable kerning is -2.0 Pt  to 928.8 Pt.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtCharSpacing(ByRef $oSelection, $bAutoKerning = Null, $nKerning = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($bAutoKerning, $nKerning) Then
		If ($bAutoKerning = Default) Then
			$oSelection.setPropertyToDefault("CharAutoKerning")
			$bAutoKerning = Null
		EndIf

		If ($nKerning = Default) Then
			$oSelection.setPropertyToDefault("CharKerning")
			$nKerning = Null
		EndIf
		If __LOWriter_VarsAreNull($bAutoKerning, $nKerning) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharSpacing($oSelection, $bAutoKerning, $nKerning)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtCharSpacing

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtClear
; Description ...: Clear any Direct formatting in a Cursor or Text Object.
; Syntax ........: _LOWriter_DirFrmtClear(Byref $oDoc, Byref $oSelection)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection          - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 4 Return 0 = $oSelection is a Table Cursor, which is not supported.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.frame.DispatchHelper" Object.
;				   @Error 2 @Extended 3 Return 0 = Error retrieving Text Object for creating a ViewCursor Backup.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to determine $oSelection's cursor type.
;				   @Error 3 @Extended 2 Return 0 = Failed to retrieve document's Viewcursor.
;				   @Error 3 @Extended 3 Return 0 = Failed to retrieve Text Object for the Viewcursor.
;				   @Error 3 @Extended 4 Return 0 = Failed to a cursor at the position of the View cursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Direct Formatting was successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function causes the ViewCursor to select the data input in $oSelection, unless $oSelection is a
;						a ViewCursor object. After the formatting has been cleared the ViewCursor is returned to its previous
;						position.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtClear(ByRef $oDoc, ByRef $oSelection)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aArray[0]
	Local $oServiceManager, $oDispatcher, $oText, $oViewCursor, $oViewCursorBackup
	Local $iCursorType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
	If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oSelection)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	Switch $iCursorType

		Case $LOW_CURTYPE_TEXT_CURSOR, $LOW_CURTYPE_PARAGRAPH, $LOW_CURTYPE_TEXT_PORTION

			;Retrieve the ViewCursor.
			$oViewCursor = $oDoc.CurrentController.getViewCursor()
			If Not IsObj($oViewCursor) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

			;Create a Text cursor at the current viewCursor position to move the Viewcursor back to.
			$oText = __LOWriter_CursorGetText($oDoc, $oViewCursor)
			If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
			If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)
			$oViewCursorBackup = $oText.createTextCursorByRange($oViewCursor)
			If Not IsObj($oViewCursorBackup) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 4, 0)

			$oViewCursor.gotoRange($oSelection, False)

			$oDispatcher.executeDispatch($oDoc.CurrentController(), ".uno:ResetAttributes", "", 0, $aArray)

			;Restore the ViewCursor to its previous location.
			$oViewCursor.gotoRange($oViewCursorBackup, False)

		Case $LOW_CURTYPE_VIEW_CURSOR

			$oDispatcher.executeDispatch($oDoc.CurrentController(), ".uno:ResetAttributes", "", 0, $aArray)
	EndSwitch

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DirFrmtClear

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtFont
; Description ...: Set and Retrieve the Font Settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtFont(Byref $oDoc, Byref $oSelection[, $sFontName = Null[, $nFontSize = Null[, $iPosture = Null[, $iWeight = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $sFontName           - [optional] a string value. Default is Null. The Font Name to change to.
;                  $nFontSize           - [optional] a general number value. Default is Null. The new Font size.
;                  $iPosture            - [optional] an integer value. Default is Null. Italic setting. See Constants below. Also
;				   +								see remarks.
;                  $iWeight             - [optional] an integer value. Default is Null. Bold settings see Constants below.
;				   +								Also see remarks.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 =  $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 4 Return 0 = $sFontName not available in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $sFontName not a String.
;				   @Error 1 @Extended 7 Return 0 = $nFontSize not a Number.
;				   @Error 1 @Extended 8 Return 0 = $iPosture not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $iWeight less than 50 and not 0, or more than 200. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $sFontName
;				   |								2 = Error setting $nFontSize
;				   |								4 = Error setting $iPosture
;				   |								8 = Error setting $iWeight
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting.
;					Not every font accepts Bold and Italic settings, and not all settings for bold and Italic are accepted,
;					such as oblique, ultra Bold etc. Libre Writer accepts only the predefined weight values, any other values
;					are changed automatically to an acceptable value, which could trigger a settings error.
; Weight Constants : $LOW_WEIGHT_DONT_KNOW(0); The font weight is not specified/known.
;						$LOW_WEIGHT_THIN(50); specifies a 50% font weight.
;						$LOW_WEIGHT_ULTRA_LIGHT(60); specifies a 60% font weight.
;						$LOW_WEIGHT_LIGHT(75); specifies a 75% font weight.
;						$LOW_WEIGHT_SEMI_LIGHT(90); specifies a 90% font weight.
;						$LOW_WEIGHT_NORMAL(100); specifies a normal font weight.
;						$LOW_WEIGHT_SEMI_BOLD(110); specifies a 110% font weight.
;						$LOW_WEIGHT_BOLD(150); specifies a 150% font weight.
;						$LOW_WEIGHT_ULTRA_BOLD(175); specifies a 175% font weight.
;						$LOW_WEIGHT_BLACK(200); specifies a 200% font weight.
; Slant/Posture Constants : $LOW_POSTURE_NONE(0); specifies a font without slant.
;							$LOW_POSTURE_OBLIQUE(1); specifies an oblique font (slant not designed into the font).
;							$LOW_POSTURE_ITALIC(2); specifies an italic font (slant designed into the font).
;							$LOW_POSTURE_DontKnow(3); specifies a font with an unknown slant.
;							$LOW_POSTURE_REV_OBLIQUE(4); specifies a reverse oblique font (slant not designed into the font).
;							$LOW_POSTURE_REV_ITALIC(5); specifies a reverse italic font (slant designed into the font).
; Related .......: _LOWriter_FontsList, _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor,
;					 _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					 _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtFont(ByRef $oDoc, ByRef $oSelection, $sFontName = Null, $nFontSize = Null, $iPosture = Null, $iWeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_AnyAreDefault($sFontName, $nFontSize, $iPosture, $iWeight) Then
		If ($sFontName = Default) Then
			$oSelection.setPropertyToDefault("CharFontName")
			$sFontName = Null
		EndIf

		If ($nFontSize = Default) Then
			$oSelection.setPropertyToDefault("CharHeight")
			$nFontSize = Null
		EndIf

		If ($iPosture = Default) Then
			$oSelection.setPropertyToDefault("CharPosture")
			$iPosture = Null
		EndIf

		If ($iWeight = Default) Then
			$oSelection.setPropertyToDefault("CharWeight")
			$iWeight = Null
		EndIf

		If __LOWriter_VarsAreNull($sFontName, $nFontSize, $iPosture, $iWeight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($sFontName <> Null) And Not _LOWriter_FontExists($oDoc, $sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_CharFont($oSelection, $sFontName, $nFontSize, $iPosture, $iWeight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtFont

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtFontColor
; Description ...: Set or retrieve the font color, transparency and highlighting by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtFontColor(Byref $oSelection[, $iFontColor = Null[, $iTransparency = Null[, $iHighlight = Null]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $iFontColor          - [optional] an integer value. Default is Null. the desired Color value in Long Integer
;				   +								format, to make the font, can be one of the constants listed below or a
;				   +								custom value. Set to $LOW_COLOR_OFF(-1) for Auto color.
;                  $iTransparency       - [optional] an integer value. Default is Null. Transparency percentage. 0 is not
;				   +								visible, 100 is fully visible. Available for Libre Office 7.0 and up.
;                  $iHighlight          - [optional] an integer value. Default is Null. A Color value in Long Integer format,
;				   +								to highlight the text in, can be one of the constants listed below or a
;				   +								custom value. Set to -1 for No color.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iFontColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $iTransparency not an Integer, or less than 0 or greater than 100%.
;				   @Error 1 @Extended 6 Return 0 = $iHighlight not an integer, less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $FontColor
;				   |								2 = Error setting $iTransparency.
;				   |								4 = Error setting $iHighlight
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 or 3 Element Array with values in order of function
;				   +								parameters. If The current Libre Office version is below 7.0 the returned
;				   +								array will contain 2 elements, because $iTransparency is not available.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				  Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: Font Color and
;						Transparency reset at the same time as the other, e.g., if you reset Font Color, it will reset
;						Transparency.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtFontColor(ByRef $oSelection, $iFontColor = Null, $iTransparency = Null, $iHighlight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($iFontColor, $iTransparency, $iHighlight) Then
		If ($iFontColor = Default) Then
			$oSelection.setPropertyToDefault("CharColor")
			$iFontColor = Null
		EndIf

		If ($iTransparency = Default) Then
			If Not __LOWriter_VersionCheck(7.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
			$oSelection.setPropertyToDefault("CharTransparence")
			$iTransparency = Null
		EndIf

		If ($iHighlight = Default) Then
			If __LOWriter_VersionCheck(4.2) Then $oSelection.setPropertyToDefault("CharHighlight")
			$oSelection.setPropertyToDefault("CharBackColor") ;Both may be used? not sure. Both do the same thing, so reset both to make sure.
			$iHighlight = Null
		EndIf

		If __LOWriter_VarsAreNull($iFontColor, $iTransparency, $iHighlight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharFontColor($oSelection, $iFontColor, $iTransparency, $iHighlight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtFontColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtGetCurStyles
; Description ...: Retrieve the current Styles set for a selection of text.
; Syntax ........: _LOWriter_DirFrmtGetCurStyles(Byref $oSelection)
; Parameters ....: $oSelection          - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions that has data selected. Or a paragraph or paragraph section.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support Paragraph Properties service.
;				   @Error 1 @Extended 3 Return 0 = $oSelection does not support Character Properties service.
;				   --Success--
;				   @Error 0 @Extended 0 Return Array = Success. Returns a 4 element array in the following order:
;					Paragraph StyleName, Character StyleName, Page StyleName, Numbering StyleName. See Remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Some of the returned style values may be blank if they are not set, particularly Numberingstyle.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtGetCurStyles(ByRef $oSelection)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asStyles[4]

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oSelection.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSelection.supportsService("com.sun.star.style.CharacterProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	__LOWriter_ArrayFill($asStyles, __LOWriter_ParStyleNameToggle($oSelection.ParaStyleName(), True), _
			__LOWriter_CharStyleNameToggle($oSelection.CharStyleName(), True), _
			__LOWriter_PageStyleNameToggle($oSelection.PageStyleName(), True), _
			$oSelection.NumberingStyleName())

	Return SetError($__LOW_STATUS_SUCCESS, 0, $asStyles)
EndFunc   ;==>_LOWriter_DirFrmtGetCurStyles

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtOverLine
; Description ...: Set and retrieve the OverLine settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtOverLine(Byref $oSelection[, $bWordOnly = Null[, $iOverLineStyle = Null[, $bOLHasColor = Null[, $iOLColor = Null]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not Overlined.
;                  $iOverLineStyle      - [optional] an integer value. Default is Null. The style of the Overline line, see
;				   +									constants listed below. See Remarks.
;                  $bOLHasColor         - [optional] a boolean value. Default is Null. Whether the Overline is colored, must
;				   +						be set to true in order to set the Overline color.
;                  $iOLColor            - [optional] an integer value. Default is Null. The color of the Overline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iOverLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bOLHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iOLColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iOverLineStyle
;				   |								4 = Error setting $OLHasColor
;				   |								8 = Error setting $iOLColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				  Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: Overline style,
;						Color and $bHasColor all reset together.
;					Note: $bOLHasColor must be set to true in order to set the underline color.
; UnderLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtOverLine(ByRef $oSelection, $bWordOnly = Null, $iOverLineStyle = Null, $bOLHasColor = Null, $iOLColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($bWordOnly, $iOverLineStyle, $bOLHasColor, $iOLColor) Then
		If ($bWordOnly = Default) Then
			$oSelection.setPropertyToDefault("CharWordMode")
			$bWordOnly = Null
		EndIf

		If ($iOverLineStyle = Default) Then
			$oSelection.setPropertyToDefault("CharOverline")
			$iOverLineStyle = Null
		EndIf

		If ($bOLHasColor = Default) Then
			$oSelection.setPropertyToDefault("CharOverlineHasColor")
			$bOLHasColor = Null
		EndIf

		If ($iOLColor = Default) Then
			$oSelection.setPropertyToDefault("CharOverlineColor")
			$iOLColor = Null
		EndIf

		If __LOWriter_VarsAreNull($bWordOnly, $iOverLineStyle, $bOLHasColor, $iOLColor) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharOverLine($oSelection, $bWordOnly, $iOverLineStyle, $bOLHasColor, $iOLColor)
	Return SetError(@error, @extended, $vReturn)

EndFunc   ;==>_LOWriter_DirFrmtOverLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParAlignment
; Description ...: Set and Retrieve Alignment settings for a paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParAlignment(Byref $oSelection[, $iHorAlign = Null[, $iVertAlign = Null[, $iLastLineAlign = Null[, $bExpandSingleWord = Null[, $bSnapToGrid = Null[, $iTxtDirection = Null]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iHorAlign           - [optional] an integer value. Default is Null. The Horizontal alignment of the
;				   +						paragraph. See Constants below. See Remarks.
;                  $iVertAlign          - [optional] an integer value. Default is Null. The Vertical alignment of the
;				   +						paragraph. See Constants below.
;                  $iLastLineAlign      - [optional] an integer value. Default is Null. Specify the alignment for the last line
;				   +						in the paragraph. See Constants below. See Remarks.
;                  $bExpandSingleWord   - [optional] a boolean value. Default is Null. If the last line of a justified paragraph
;				   +						consists of one word, the word is stretched to the width of the paragraph.
;                  $bSnapToGrid         - [optional] a boolean value. Default is Null. If True, Aligns the paragraph to a text
;				   +						grid (if one is active).
;                  $iTxtDirection       - [optional] an integer value. Default is Null. The Text Writing Direction. See Constants
;				   +						below. [Libre Office Default is 4]
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iHorAlign not an integer, less than 0 or greater than 3.
;				   @Error 1 @Extended 5 Return 0 = $iVertAlign not an integer, less than 0 or more than 4.
;				   @Error 1 @Extended 6 Return 0 = $iLastLineAlign not an integer, less than 0 or more than 3.
;				   @Error 1 @Extended 7 Return 0 = $bExpandSingleWord not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bSnapToGrid not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $iTxtDirection not an Integer, less than 0 or greater than 5, see constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iHorAlign
;				   |								2 = Error setting $iVertAlign
;				   |								4 = Error setting $iLastLineALign
;				   |								8 = Error setting $bExpandSIngleWord
;				   |								16 = Error setting $bSnapToGrid
;				   |								32 = Error setting $iTxtDirection
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;					Note: $iTxtDirection constants 2,3, and 5 may not be available depending on your language settings.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: $iHorAlign,
;					$iLastLineAlign, and $bExpandSingleWord are all reset together.
;					 Note: $iHorAlign must be set to $LOW_PAR_ALIGN_HOR_JUSTIFIED(2) before you can set $iLastLineAlign, and
;					$iLastLineAlign must be set to $LOW_PAR_LAST_LINE_JUSTIFIED(2) before $bExpandSingleWord can be set.
; Horizontal Alignment Constants: $LOW_PAR_ALIGN_HOR_LEFT(0); The Paragraph is left-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_RIGHT(1); The Paragraph is right-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_ALIGN_HOR_CENTER(3); The Paragraph is centered between the left and right borders.
; Vertical Alignment Constants: $LOW_PAR_ALIGN_VERT_AUTO(0); In automatic mode, horizontal text is aligned to the baseline. The
;										same applies to text that is rotated 90°. Text that is rotated 270 ° is aligned to the
;										center.
;									$LOW_PAR_ALIGN_VERT_BASELINE(1); The text is aligned to the baseline.
;									$LOW_PAR_ALIGN_VERT_TOP(2); The text is aligned to the top.
;									$LOW_PAR_ALIGN_VERT_CENTER(3); The text is aligned to the center.
;									$LOW_PAR_ALIGN_VERT_BOTTOM(4); The text is aligned to bottom.
; Last Line Alignment Constants: $LOW_PAR_LAST_LINE_START(0); The Paragraph is aligned either to the Left border or the right,
;										depending on the current text direction.
;									$LOW_PAR_LAST_LINE_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_LAST_LINE_CENTER(3); The Paragraph is centered between the left and right borders.
; Text Direction Constants: $LOW_TXT_DIR_LR_TB(0), — text within lines is written left-to-right. Lines and blocks are placed
;								top-to-bottom. Typically, this is the writing mode for normal "alphabetic" text.
;							$LOW_TXT_DIR_RL_TB(1), — text within a line are written right-to-left. Lines and blocks are placed
;								top-to-bottom. Typically, this writing mode is used in Arabic and Hebrew text.
;							$LOW_TXT_DIR_TB_RL(2), — text within a line is written top-to-bottom. Lines and blocks are placed
;								right-to-left. Typically, this writing mode is used in Chinese and Japanese text.
;							$LOW_TXT_DIR_TB_LR(3), — text within a line is written top-to-bottom. Lines and blocks are placed
;								left-to-right. Typically, this writing mode is used in Mongolian text.
;							$LOW_TXT_DIR_CONTEXT(4), — obtain actual writing mode from the context of the object.
;							$LOW_TXT_DIR_BT_LR(5), — text within a line is written bottom-to-top. Lines and blocks are placed
;								left-to-right. (LibreOffice 6.3)
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					 _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					 _LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParAlignment(ByRef $oSelection, $iHorAlign = Null, $iVertAlign = Null, $iLastLineAlign = Null, $bExpandSingleWord = Null, $bSnapToGrid = Null, $iTxtDirection = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($iHorAlign, $iVertAlign, $iLastLineAlign, $bExpandSingleWord, $bSnapToGrid, $iTxtDirection) Then
		If ($iHorAlign = Default) Then
			$oSelection.setPropertyToDefault("ParaAdjust")
			$iHorAlign = Null
		EndIf

		If ($iVertAlign = Default) Then
			$oSelection.setPropertyToDefault("ParaVertAlignment")
			$iVertAlign = Null
		EndIf

		If ($iLastLineAlign = Default) Then
			$oSelection.setPropertyToDefault("ParaLastLineAdjust")
			$iLastLineAlign = Null
		EndIf

		If ($bExpandSingleWord = Default) Then
			$oSelection.setPropertyToDefault("ParaExpandSingleWord")
			$bExpandSingleWord = Null
		EndIf

		If ($bSnapToGrid = Default) Then
			$oSelection.setPropertyToDefault("SnapToGrid")
			$bSnapToGrid = Null
		EndIf

		If ($iTxtDirection = Default) Then
			$oSelection.setPropertyToDefault("WritingMode")
			$iTxtDirection = Null
		EndIf

		If __LOWriter_VarsAreNull($iHorAlign, $iVertAlign, $iLastLineAlign, $bExpandSingleWord, $bSnapToGrid, $iTxtDirection) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParAlignment($oSelection, $iHorAlign, $iVertAlign, $iLastLineAlign, $bExpandSingleWord, $bSnapToGrid, $iTxtDirection)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParAlignment

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParBackColor
; Description ...: Set or Retrieve background color settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParBackColor(Byref $oSelection[, $iBackColor = Null[, $bBackTransparent = Null[, $bClearDirFrmt = False]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value.
;												Set to $LOW_COLOR_OFF(-1) to turn Background color off.
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Background color.
; Return values .:  Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bBackTransparent not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParBackColor(ByRef $oSelection, $iBackColor = Null, $bBackTransparent = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("ParaBackColor")
		If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParBackColor($oSelection, $iBackColor, $bBackTransparent)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParBackColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParBorderColor
; Description ...: Set and Retrieve the Paragraph Style Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_DirFrmtParBorderColor(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value can be used.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						the Paragraph Border, Width, Style and Color.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					 Border Width must be set first to be able to set Border Style and Color.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtParBorderWidth, _LOWriter_DirFrmtParBorderStyle,
;					_LOWriter_DirFrmtParBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParBorderColor(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("TopBorder")
		$oSelection.setPropertyToDefault("BottomBorder")
		$oSelection.setPropertyToDefault("LeftBorder")
		$oSelection.setPropertyToDefault("RightBorder")

		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oSelection, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParBorderPadding
; Description ...: Set or retrieve the Border Padding (spacing between the Paragraph and border) settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParBorderPadding(Byref $oSelection[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Paragraph in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Border padding related settings.
; Return values .: Integer or Array, see Remarks.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet,  _LOWriter_DirFrmtParBorderWidth, _LOWriter_DirFrmtParBorderStyle,
;					_LOWriter_DirFrmtParBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParBorderPadding(ByRef $oSelection, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("BorderDistance")
		If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParBorderPadding($oSelection, $iAll, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParBorderStyle
; Description ...: Set and retrieve the Paragraph Border Line style by Direct Formatting. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_DirFrmtParBorderStyle(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						the Paragraph Border, Width, Style and Color.
; Return values .:  Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					 Border Width must be set first to be able to set Border Style and Color.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet,  _LOWriter_DirFrmtParBorderWidth,
;					_LOWriter_DirFrmtParBorderColor, _LOWriter_DirFrmtParBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParBorderStyle(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("TopBorder")
		$oSelection.setPropertyToDefault("BottomBorder")
		$oSelection.setPropertyToDefault("LeftBorder")
		$oSelection.setPropertyToDefault("RightBorder")

		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oSelection, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParBorderWidth
; Description ...: Set and retrieve the Paragraph Border Line Width, or the Paragraph Connect Border option by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParBorderWidth(Byref $oSelection[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bConnectBorder = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Paragraph in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Paragraph in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Paragraph in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Paragraph in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $bConnectBorder      - [optional] a boolean value. Default is Null. Determines if borders set for a paragraph
;				   +						are merged with the next paragraph. Note: Borders are only merged if they are
;				   +						identical. Libre Office Version 3.4 and Up.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						the Paragraph Border, Width, Style and Color. Doesn't clear $bConnectBorder. See
;				   +						Remarks.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 8 Return 0 = $bConnectBorder Not a Boolean and Not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success.  Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
;				   @Error 0 @Extended 0 Return 3 = Success. $bConnectBorder parameter was set to Default, and rest of
;				   +								parameters were set to Null. Direct formatting has been successfully
;				   +								cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call $bConnectBorder Parameter with Default keyword to clear direct formatting for that setting.
;					 To "Turn Off" Borders, set them to 0
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet, _LOWriter_DirFrmtParBorderStyle, _LOWriter_DirFrmtParBorderColor,
;					_LOWriter_DirFrmtParBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParBorderWidth(ByRef $oSelection, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bConnectBorder = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("TopBorder")
		$oSelection.setPropertyToDefault("BottomBorder")
		$oSelection.setPropertyToDefault("LeftBorder")
		$oSelection.setPropertyToDefault("RightBorder")

		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight, $bConnectBorder) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($bConnectBorder = Default) Then
		$oSelection.setPropertyToDefault("ParaIsConnectBorder")
		$bConnectBorder = Null
		If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight, $bConnectBorder) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 3)
	EndIf

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If ($bConnectBorder <> Null) And Not IsBool($bConnectBorder) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight, $bConnectBorder) Then
		$vReturn = __LOWriter_Border($oSelection, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
		__LOWriter_AddTo1DArray($vReturn, $oSelection.ParaIsConnectBorder())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $vReturn)
	ElseIf Not __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then
		$vReturn = __LOWriter_Border($oSelection, True, False, False, $iTop, $iBottom, $iLeft, $iRight)

		If @error Then Return SetError(@error, @extended, $vReturn)
	EndIf
	If ($bConnectBorder <> Null) Then $oSelection.ParaIsConnectBorder = $bConnectBorder

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DirFrmtParBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParDropCaps
; Description ...: Set or Retrieve DropCaps settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParDropCaps(Byref $oDoc, Byref $oSelection[, $iNumChar = Null[, $iLines = Null[, $iSpcTxt = Null[, $bWholeWord = Null[, $sCharStyle = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection             - [in/out] an object. an object. A Cursor Object returned from any Cursor Object
;				   +						creation or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iNumChar            - [optional] an integer value. Default is Null. The number of characters to make into
;				   +									DropCaps. Min is 0, max is 9.
;                  $iLines              - [optional] an integer value. Default is Null. The number of lines to drop down, min is
;				   +								0, max is 9, cannot be 1.
;                  $iSpcTxt             - [optional] an integer value. Default is Null. The distance between the drop cap and the
;				   +								following text. In Micrometers.
;                  $bWholeWord          - [optional] a boolean value. Default is Null. Whether to DropCap the whole first word.
;				   +									(Nullifys $iNumChars.)
;                  $sCharStyle          - [optional] a string value. Default is Null. The character style to use for the
;				   +							DropCaps. See Remarks.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						DropCaps and related settings.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 4 Return 0 = $sCharStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iNumChar not an integer, less than 0 or greater than 9.
;				   @Error 1 @Extended 7 Return 0 = $iLines not an Integer, less than 0, equal to 1 or greater than 9
;				   @Error 1 @Extended 8 Return 0 = $iSpaceTxt not an Integer, or less than 0.
;				   @Error 1 @Extended 9 Return 0 = $bWholeWord not a Boolean.
;				   @Error 1 @Extended 10 Return 0 = $sCharStyle not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving DropCap Format Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iNumChar
;				   |								2 = Error setting $iLines
;				   |								4 = Error setting $iSpcTxt
;				   |								8 = Error setting $bWholeWord
;				   |								16 = Error setting $sCharStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;				   Set $iNumChars, $iLines, $iSpcTxt to 0 to disable DropCaps.
;					I am unable to find a way to set Drop Caps character style to "None" as is available in the User Interface.
;					When it is set to "None" Libre returns a blank string ("") but setting it to a blank string throws a COM
;					error/Exception, even when attempting to set it to Libre's own return value without any in-between
;					variables, in case I was mistaken as to it being a blank string, but this still caused a COM error. So
;					consequently, you cannot set Character Style to "None", but you can still disable Drop Caps as noted above.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParDropCaps(ByRef $oDoc, ByRef $oSelection, $iNumChar = Null, $iLines = Null, $iSpcTxt = Null, $bWholeWord = Null, $sCharStyle = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("DropCapFormat")
		If __LOWriter_VarsAreNull($iNumChar, $iLines, $iSpcTxt, $bWholeWord, $sCharStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($sCharStyle <> Null) And Not _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParDropCaps($oSelection, $iNumChar, $iLines, $iSpcTxt, $bWholeWord, $sCharStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParDropCaps

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParHyphenation
; Description ...: Set or Retrieve Hyphenation settings for a paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParHyphenation(Byref $oSelection[, $bAutoHyphen = Null[, $bHyphenNoCaps = Null[, $iMaxHyphens = Null[, $iMinLeadingChar = Null[, $iMinTrailingChar = Null[, $bClearDirFrmt = False]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $bAutoHyphen         - [optional] a boolean value. Default is Null. Whether  automatic hyphenation is applied.
;                  $bHyphenNoCaps       - [optional] a boolean value. Default is Null.  Setting to true will disable hyphenation
;				   +						of words written in CAPS for this paragraph. Libre 6.4 and up.
;                  $iMaxHyphens         - [optional] an integer value. Default is Null. The maximum number of consecutive
;				   +						hyphens. Min 0, Max 99.
;                  $iMinLeadingChar     - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain before the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
;                  $iMinTrailingChar    - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain after the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Hyphenation.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoHyphen not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bHyphenNoCaps not  a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iMaxHyphens not an Integer, less than 0, or greater than 99.
;				   @Error 1 @Extended 7 Return 0 = $iMinLeadingChar not an Integer, less than 2 or greater than 9.
;				   @Error 1 @Extended 8 Return 0 = $iMinTrailingChar not an Integer, less than 2 or greater than 9.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bAutoHyphen
;				   |								2 = Error setting $bHyphenNoCaps
;				   |								4 = Error setting $iMaxHyphens
;				   |								8 = Error setting $iMinLeadingChar
;				   |								16 = Error setting $iMinTrailingChar
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 6.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 or 5 Element Array with values in order of function
;				   +								parameters. If the current Libre Office Version is below 6.4, then the
;				   +								Array returned will contain 4 elements because $bHyphenNoCaps is not
;				   +								available.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					 Note: $bAutoHyphen set to True for the rest of the settings to be activated, but they will be still
;					successfully set regardless.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParHyphenation(ByRef $oSelection, $bAutoHyphen = Null, $bHyphenNoCaps = Null, $iMaxHyphens = Null, $iMinLeadingChar = Null, $iMinTrailingChar = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("ParaIsHyphenation") ;Resetting one resets all.
		If __LOWriter_VarsAreNull($bAutoHyphen, $bHyphenNoCaps, $iMaxHyphens, $iMinLeadingChar, $iMinTrailingChar) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParHyphenation($oSelection, $bAutoHyphen, $bHyphenNoCaps, $iMaxHyphens, $iMinLeadingChar, $iMinTrailingChar)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParHyphenation

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParIndent
; Description ...: Set or Retrieve Indent settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParIndent(Byref $oSelection[, $iBeforeTxt = Null[, $iAfterTxt = Null[, $iFirstLine = Null[, $bAutoFirstLine = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iBeforeTxt          - [optional] an integer value. Default is Null. The amount of space that you want
;				   +						to indent the paragraph from the page margin. If you want the paragraph to extend
;				   +						into the page margin, enter a negative number. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094
;                  $iAfterTxt           - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						indent the paragraph from the page margin. If you want the paragraph to extend into
;				   +						the page margin, enter a negative number. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094
;                  $iFirstLine          - [optional] an integer value. Default is Null. Indents the first line of a paragraph by
;				   +						the amount that you enter. Set in MicroMeters(uM) Min. -57785, Max.17094.
;                  $bAutoFirstLine      - [optional] a boolean value. Default is Null. Whether the first line should be indented
;				   +						automatically.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Indent related settings.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iBeforeText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 5 Return 0 = $iAfterText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 6 Return 0 = $iFirstLine not an integer, less than -57785 or more than 17094 uM.
;				   @Error 1 @Extended 7 Return 0 = $bAutoFirstLine not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iBeforeTxt
;				   |								2 = Error setting $iAfterTxt
;				   |								4 = Error setting $iFirstLine
;				   |								8 = Error setting $bAutoFirstLine
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					 Note: $iFirstLine Indent cannot be set if $bAutoFirstLine is set to True.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer,  _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParIndent(ByRef $oSelection, $iBeforeTxt = Null, $iAfterTxt = Null, $iFirstLine = Null, $bAutoFirstLine = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("ParaLeftMargin") ;Resetting one resets all -- but just in case reset the rest.
		$oSelection.setPropertyToDefault("ParaRightMargin")
		$oSelection.setPropertyToDefault("ParaFirstLineIndent")
		$oSelection.setPropertyToDefault("ParaIsAutoFirstLineIndent")
		If __LOWriter_VarsAreNull($iBeforeTxt, $iAfterTxt, $iFirstLine, $bAutoFirstLine) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParIndent($oSelection, $iBeforeTxt, $iAfterTxt, $iFirstLine, $bAutoFirstLine)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParIndent

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParOutLineAndList
; Description ...: Set and Retrieve the Outline and List settings for a paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParOutLineAndList(Byref $oDoc, Byref $oSelection[, $iOutline = Null[, $sNumStyle = Null[, $bParLineCount = Null[, $iLineCountVal = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iOutline            - [optional] an integer value. Default is Null. The Outline Level, see Constants below.
;				   +							Min is 0, max is 10.
;                  $sNumStyle           - [optional] a string value. Default is Null. Specifies the name of the style for the
;				   +							Paragraph numbering. Set to "" for None.
;                  $bParLineCount       - [optional] a boolean value. Default is Null. Whether the paragraph is included in the
;				   +							line numbering.
;                  $iLineCountVal       - [optional] an integer value. Default is Null. The start value for numbering if a new
;				   +							numbering starts at this paragraph. Set to 0 for no line numbering restart.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 4 Return 0 = $sNumStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iOutline not an integer, less than 0 or greater than 10.
;				   @Error 1 @Extended 7 Return 0 = $sNumStyle not a String.
;				   @Error 1 @Extended 8 Return 0 = $bParLineCount not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $iLineCountVal Not an Integer or less than 0.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iOutline
;				   |								2 = Error setting $sNumStyle
;				   |								4 = Error setting $bParLineCount
;				   |								8 = Error setting $iLineCountVal
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;				   Call a Parameter with Default keyword to clear direct formatting for that setting. Note: $iOutline,
;					$bParLineCount, and $iLineCountVal all are reset together.
;				   Note: In LibreOffice User Interface (UI), there are two options available when applying direct formatting,
;					"Restart numbering at this paragraph", and "start value", these are too glitchy to make available, I am
;					able to set "Restart numbering at this paragraph" to True, but I cannot set it to false, and I am unable
;					to clear either setting once applied, so for those reasons I am not including it in this UDF.
; Outline Constants :$LOW_OUTLINE_BODY(0); Indicates that the paragraph belongs to the body text.
;					$LOW_OUTLINE_LEVEL_1(1), Indicates that the paragraph belongs to the corresponding outline level.
;					$LOW_OUTLINE_LEVEL_2(2),
;					$LOW_OUTLINE_LEVEL_3(3),
;					$LOW_OUTLINE_LEVEL_4(4),
;					$LOW_OUTLINE_LEVEL_5(5),
;					$LOW_OUTLINE_LEVEL_6(6),
;					$LOW_OUTLINE_LEVEL_7(7),
;					$LOW_OUTLINE_LEVEL_8(8),
;					$LOW_OUTLINE_LEVEL_9(9),
;					$LOW_OUTLINE_LEVEL_10(10)
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParOutLineAndList(ByRef $oDoc, ByRef $oSelection, $iOutline = Null, $sNumStyle = Null, $bParLineCount = Null, $iLineCountVal = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_AnyAreDefault($iOutline, $sNumStyle, $bParLineCount, $iLineCountVal) Then
		If ($iOutline = Default) Then
			$oSelection.setPropertyToDefault("OutlineLevel")
			$iOutline = Null
		EndIf

		If ($sNumStyle = Default) Then
			$oSelection.NumberingStyleName = "" ;set to no numbering style first in order to reset successfully.
			$oSelection.setPropertyToDefault("NumberingStyleName")
			$sNumStyle = Null
		EndIf

		If ($bParLineCount = Default) Then
			$oSelection.setPropertyToDefault("ParaLineNumberCount")
			$bParLineCount = Null
		EndIf

		If ($iLineCountVal = Default) Then
			$oSelection.setPropertyToDefault("ParaLineNumberStartValue")
			$iLineCountVal = Null
		EndIf

		If __LOWriter_VarsAreNull($iOutline, $sNumStyle, $bParLineCount, $iLineCountVal) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($sNumStyle <> Null) And ($sNumStyle <> "") And Not _LOWriter_NumStyleExists($oDoc, $sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParOutLineAndList($oSelection, $iOutline, $sNumStyle, $bParLineCount, $iLineCountVal)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParOutLineAndList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParPageBreak
; Description ...: Set or Retrieve Page Break Settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParPageBreak(Byref $oDoc, Byref $oSelection[, $iBreakType = Null[, $iPgNumOffSet = Null[, $sPageStyle = Null[, $bClearDirFrmt = False]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iBreakType          - [optional] an integer value. Default is Null. The Page Break Type. See Constants below.
;                  $iPgNumOffSet        - [optional] an integer value. Default is Null. If a page break property is set at a
;				   +						paragraph, this property contains the new value for the page number.
;                  $sPageStyle          - [optional] a string value. Default is Null. Creates a page break before the paragraph
;				   +						it belongs to and assigns the value as the name of the new page style to use. Note:
;				   +						If you set this parameter, to remove the page break setting you must set this to "".
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						Page Break, including Type, Number offset and Page Style. See Remarks.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 4 Return 0 = $sPageStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iBreakType not an integer, less than 0 or greater than 6.
;				   @Error 1 @Extended 7 Return 0 = $iPgNumOffSet not an Integer or less than 0.
;				   @Error 1 @Extended 8 Return 0 = $sPageStyle not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iBreakType
;				   |								2 = Error setting $iPgNumOffSet
;				   |								4 = Error setting $sPageStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Note: Clearing directly formatted page breaks may fail, If the cursor selection contains more than one
;					paragraph that has more than one type of page break, it may fail to literally  reset it to the paragraph
;					style's original settings even though it returns a success, you will need to reset each paragraph one at
;					a time if this is the case.
;					Note: Break Type must be set before PageStyle will be able to be set, and page style needs set before
;					$iPgNumOffSet can be set.
;					Libre doesn't directly show in its User interface options for Break type constants #3 and #6 (Column both)
;						and (Page both), but  doesn't throw an error when being set to either one, so they are included here,
;						 though I'm not sure if they will work correctly.
;Break Constants : $LOW_BREAK_NONE(0) – No column or page break is applied.
;						$LOW_BREAK_COLUMN_BEFORE(1) – A column break is applied before the current Paragraph. The current
;							Paragraph, therefore, is the first in the column.
;						$LOW_BREAK_COLUMN_AFTER(2) – A column break is applied after the current Paragraph. The current
;							Paragraph, therefore, is the last in the column.
;						$LOW_BREAK_COLUMN_BOTH(3) – A column break is applied before and after the current Paragraph. The
;							current Paragraph, therefore, is the only Paragraph in the column.
;						$LOW_BREAK_PAGE_BEFORE(4) – A page break is applied before the current Paragraph. The current Paragraph,
;						therefore, is the first on the page.
;						$LOW_BREAK_PAGE_AFTER(5) – A page break is applied after the current Paragraph. The current Paragraph,
;						therefore, is the last on the page.
;						$LOW_BREAK_PAGE_BOTH(6) – A page break is applied before and after the current Paragraph. The current
;						Paragraph, therefore, is the only paragraph on the page.
; Related .......: _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParPageBreak(ByRef $oDoc, ByRef $oSelection, $iBreakType = Null, $iPgNumOffSet = Null, $sPageStyle = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If $bClearDirFrmt Then
		$oSelection.PageDescName = ""
		$oSelection.BreakType = $LOW_BREAK_NONE
		$oSelection.setPropertyToDefault("BreakType")
		$oSelection.setPropertyToDefault("PageNumberOffset")
		$oSelection.setPropertyToDefault("PageDescName")

		If __LOWriter_VarsAreNull($iBreakType, $iPgNumOffSet, $sPageStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If ($sPageStyle <> Null) And Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParPageBreak($oSelection, $iBreakType, $iPgNumOffSet, $sPageStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParPageBreak

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParShadow
; Description ...: Set or Retrieve the Shadow settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParShadow(Byref $oSelection[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null[, $bClearDirFrmt = False]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the shadow set in
;				   +							Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The color of the shadow, set in Long
;				   +						Integer format. Can be one of the below constants or a custom value. Set to
;
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether or not the shadow is transparent.
;                  $iLocation           - [optional] an integer value. Default is Null. The location of the shadow compared to
;				   +								the paragraph. See Constants below.
;                  $bClearDirFrmt       - [optional] a boolean value. Default is False. If True, clears ALL direct formatting of
;				   +						 Shadow Width, Color and Location.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an integer or less than 0.
;				   @Error 1 @Extended 5 Return 0 = $iColor not an integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 6 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Shadow Format Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shadow Format Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. $bClearDirFrmt was set to True, and rest of parameters were set
;				   +								to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer,  _LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
;
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParShadow(ByRef $oSelection, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null, $bClearDirFrmt = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $bClearDirFrmt Then
		$oSelection.setPropertyToDefault("ParaShadowFormat")
		If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParShadow($oSelection, $iWidth, $iColor, $bTransparent, $iLocation)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParSpace
; Description ...: Set and Retrieve Line Spacing settings for a paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParSpace(Byref $oSelection[, $iAbovePar = Null[, $iBelowPar = Null[, $bAddSpace = Null[, $iLineSpcMode = Null[, $iLineSpcHeight = Null[, $bPageLineSpc = Null]]]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iAbovePar           - [optional] an integer value. Default is Null. The Space above a paragraph, in
;				   +									Micrometers. Min 0 Micrometers (uM) Max 10,008 uM.
;                  $iBelowPar           - [optional] an integer value. Default is Null. The Space Below a paragraph, in
;				   +									Micrometers. Min 0 Micrometers (uM) Max 10,008 uM.
;                  $bAddSpace           - [optional] a boolean value. Default is Null. If true, the top and bottom margins
;				   +									of the paragraph should not be applied when the previous and next
;				   +									paragraphs have the same style. Libre Office 3.6 and Up.
;                  $iLineSpcMode        - [optional] an integer value. Default is Null. The type of the line spacing of a
;				   +									paragraph. See Constants below, also notice min and max values for each.
;                  $iLineSpcHeight      - [optional] an integer value. Default is Null. This value specifies the spacing
;				   +						of the lines. See Remarks for Minimum and Max values.
;                  $bPageLineSpc        - [optional] a boolean value. Default is Null. Determines if the register mode is
;				   +						applied to a paragraph. See Remarks.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAbovePar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 5 Return 0 = $iBelowPar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 6 Return 0 = $bAddSpc not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLineSpcMode Not an integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iLineSpcHeight not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $iLineSpcMode set to 0(Proportional) and $iLineSpcHeight less than 6(%)
;				   +									or greater than 65535(%).
;				   @Error 1 @Extended 10 Return 0 = $iLineSpcMode set to 1 or 2(Minimum, or Leading) and $iLineSpcHeight less
;				   +								than 0 uM or greater than 10008 uM
;				   @Error 1 @Extended 11 Return 0 = $iLineSpcMode set to 3(Fixed) and $iLineSpcHeight less than 51 uM
;				   +									or greater than 10008 uM.
;				   @Error 1 @Extended 12 Return 0 = $bPageLineSpc not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaLineSpacing Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iAbovePar
;				   |								2 = Error setting $iBelowPar
;				   |								4 = Error setting $bAddSpace
;				   |								8 = Error setting $iLineSpcMode
;				   |								16 = Error setting $iLineSpcHeight
;				   |								32 = Error setting bPageLineSpc
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 or 6 Element Array with values in order of function
;				   +								parameters. If the current Libre Office version is less than 3.6, the
;				   +								returned Array will contain 5 elements, because $bAddSpace is not available.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: $iAbovePar,
;					$iBelowPar, and $bAddSpace are all reset together, $iLineSpace Mode / Height also reset together.
;					Note:  $bPageLineSpc(Register mode) is only used if the register mode property of the page style is switched
;						on. $bPageLineSpc(Register Mode) Aligns the baseline of each line of text to a vertical document grid,
;						so that each line is the same height.
;					Note: The settings in Libre Office, (Single,1.15, 1.5, Double,) Use the Proportional mode, and are just
;						varying percentages. e.g Single = 100, 1.15 = 115%, 1.5 = 150%, Double = 200%.
;					$iLineSpcHeight depends on the $iLineSpcMode used, see constants for accepted Input values.
;					Note: $iAbovePar, $iBelowPar, $iLineSpcHeight may change +/- 1 MicroMeter once set.
; Spacing Constants :$LOW_LINE_SPC_MODE_PROP(0); This specifies the height value as a proportional value. Min 6% Max 65,535%.
;							(without percentage sign)
;						$LOW_LINE_SPC_MODE_MIN(1); (Minimum/At least) This specifies the height as the minimum line height.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_LEADING(2); This specifies the height value as the distance to the previous line.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_FIX(3); This specifies the height value as a fixed line height. Min 51 MicroMeters,
;							Max 10008 MicroMeters (uM)
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParSpace(ByRef $oSelection, $iAbovePar = Null, $iBelowPar = Null, $bAddSpace = Null, $iLineSpcMode = Null, $iLineSpcHeight = Null, $bPageLineSpc = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($iAbovePar, $iBelowPar, $bAddSpace, $iLineSpcMode, $iLineSpcHeight, $bPageLineSpc) Then
		If ($iAbovePar = Default) Then
			$oSelection.setPropertyToDefault("ParaTopMargin")
			$iAbovePar = Null
		EndIf

		If ($iBelowPar = Default) Then
			$oSelection.setPropertyToDefault("ParaBottomMargin")
			$iBelowPar = Null
		EndIf

		If ($bAddSpace = Default) Then
			If Not __LOWriter_VersionCheck(3.6) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
			$oSelection.setPropertyToDefault("ParaContextMargin")
			$bAddSpace = Null
		EndIf

		If ($iLineSpcMode = Default) Or ($iLineSpcHeight = Default) Then
			$oSelection.setPropertyToDefault("ParaLineSpacing")
			$iLineSpcMode = Null
		EndIf

		If ($iLineSpcHeight = Default) Or ($iLineSpcHeight = Default) Then
			$oSelection.setPropertyToDefault("ParaLineSpacing")
			$iLineSpcHeight = Null
		EndIf

		If ($bPageLineSpc = Default) Then
			$oSelection.setPropertyToDefault("ParaRegisterModeActive")
			$bPageLineSpc = Null
		EndIf

		If __LOWriter_VarsAreNull($iAbovePar, $iBelowPar, $bAddSpace, $iLineSpcMode, $iLineSpcHeight, $bPageLineSpc) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParSpace($oSelection, $iAbovePar, $iBelowPar, $bAddSpace, $iLineSpcMode, $iLineSpcHeight, $bPageLineSpc)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParSpace

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParTabStopCreate
; Description ...: Create a new TabStop for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParTabStopCreate(Byref $oSelection, $iPosition[, $iFillChar = Null[, $iAlignment = Null[, $iDecChar = Null]]])
; Parameters ....: $oSelection          - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iPosition           - an integer value. The TabStop position/length to set the new TabStop to. Set in
;				   +						Micrometers (uM). See Remarks.
;                  $iAlignment          - [optional] an integer value. Default is Null. The Asc (see autoit function) value of
;				   +						any character (except 0/Null) you want to act as a Tab Fill character. See remarks.
;                  $iFillChar           - [optional] an integer value. Default is Null. The position of where the end of a Tab
;				   +						is aligned to compared to the text. See Constants.
;                  $iDecChar            - [optional] an integer value. Default is Null. Enter a character(in Asc Value(See
;				   +						Autoit Function)) that you want the decimal tab to use as a decimal separator. Can
;				   +						only be set if $iAlignment is set to $LOW_TAB_ALIGN_DECIMAL.
; Return values .:  Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = $iPosition not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iPosition Already exists in this ParStyle.
;				   @Error 1 @Extended 5 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iFillChar not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iAlignment not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iDecChar not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Array Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.style.TabStop" Object.
;				   @Error 2 @Extended 3 Return 0 = Error retrieving list of TabStop Positions.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to identify the new Tabstop once inserted. in $iPosition.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return Integer = Some settings were not successfully set. Use BitAND to test
;				   +							@Extended for the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iPosition
;				   |								2 = Error setting $iFillChar
;				   |								4 = Error setting $iAlignment
;				   |								8 = Error setting $iDecChar
;				   |						Note: $iNewTabStop position is still returned as even though some settings weren't
;				   +						successfully set, the new TabStop was still created.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer = Success. Settings were successfully set. New TabStop position
;				   +								is returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
;					Note: $iPosition once set can vary +/- 1 uM. To ensure you can identify the tabstop to modify it again,
;						This function returns the new TabStop position in @Extended when $iPosition is set, return value will
;						be set to 2. See Return Values.
;					Note: Since $iPosition can fluctuate +/- 1 uM when it is inserted into LibreOffice, it is possible to
;						accidentally overwrite an already existing TabStop.
;					Note: $iFillChar, Libre's Default value, "None" is in reality a space character which is Asc value 32.
;						The other values offered by Libre are: Period (ASC 46), Dash (ASC 45) and Underscore (ASC 95). You can
;						also enter a custom ASC value. See ASC Autoit Func. and "ASCII Character Codes" in the Autoit help file.
;					Call any optional parameter with Null keyword to skip it.
; Tab Alignment Constants: $LOW_TAB_ALIGN_LEFT(0); Aligns the left edge of the text to the tab stop and extends the text to the
;								right.
;							$LOW_TAB_ALIGN_CENTER(1); Aligns the center of the text to the tab stop
;							$LOW_TAB_ALIGN_RIGHT(2); Aligns the right edge of the text to the tab stop and extends the text to
;								the left of the tab stop.
;							$LOW_TAB_ALIGN_DECIMAL(3); Aligns the decimal separator of a number to the center of the tab stop
;								and text to the left of the tab
;							$LOW_TAB_ALIGN_DEFAULT(4);4 = This setting is the default, setting when no TabStops are present.
;								Setting and Tabstop to this constant will make it disappear from the TabStop list. It is
;								therefore only listed here for property reading purposes.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtParTabStopDelete,
;					_LOWriter_DirFrmtParTabStopMod, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
;
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParTabStopCreate(ByRef $oSelection, $iPosition, $iFillChar = Null, $iAlignment = Null, $iDecChar = Null)

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If Not IsInt($iPosition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If __LOWriter_ParHasTabStop($oSelection, $iPosition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$iPosition = __LOWriter_ParTabStopCreate($oSelection, $iPosition, $iAlignment, $iFillChar, $iDecChar)
	Return SetError(@error, @extended, $iPosition)
EndFunc   ;==>_LOWriter_DirFrmtParTabStopCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParTabStopDelete
; Description ...: Delete a TabStop from a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParTabStopDelete(Byref $oDoc, Byref $oSelection, $iTabStop)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSelection      - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iTabStop            - an integer value. The Tab position of the TabStop to modify. See Remarks.
; Return values .: Success: Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 4 Return 0 = $iTabStop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTabStop not found in this ParStyle.
;				   @Error 1 @Extended 6 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 7 Return 0 = Passed Document Object to internal function not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to identify and delete TabStop in Paragraph.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Returns true if the TabStop was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iTabStop refers to the position, or essential the "length" of a TabStop from the edge of a page margin.
;						This is the only reliable way to identify a Tabstop to be able to interact with it, as there can only be
;						one of a certain length per document.
; Related .......: _LOWriter_DirFrmtParTabStopCreate, _LOWriter_DirFrmtParTabStopList, _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
;
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParTabStopDelete(ByRef $oDoc, ByRef $oSelection, $iTabStop)
	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not __LOWriter_ParHasTabStop($oSelection, $iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_ParTabStopDelete($oSelection, $oDoc, $iTabStop)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParTabStopDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParTabStopList
; Description ...: Retrieve a List of TabStops available in a Paragraph from Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParTabStopList(Byref $oSelection)
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
; Return values .:  Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection parameter not an Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. An Array of TabStops. @Extended set to number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
; Related .......: _LOWriter_DirFrmtParTabStopCreate, _LOWriter_DirFrmtParTabStopDelete, _LOWriter_DirFrmtParTabStopMod,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParTabStopList(ByRef $oSelection)
	Local $aiTabList

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$aiTabList = __LOWriter_ParTabStopList($oSelection)

	Return SetError(@error, @extended, $aiTabList)
EndFunc   ;==>_LOWriter_DirFrmtParTabStopList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParTabStopMod
; Description ...: Modify or retrieve the properties of an existing TabStop in a Paragraph from Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParTabStopMod(Byref $oSelection, $iTabStop[, $iPosition = Null[, $iFillChar = Null[, $iAlignment = Null[, $iDecChar = Null]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $iTabStop            - an integer value. The Tab position of the TabStop to modify. See Remarks.
;                  $iPosition           - [optional] an integer value. Default is Null. The New position to set the input
;				   +						position to. Set in Micrometers (uM). See Remarks.
;                  $iFillChar           - [optional] an integer value. Default is Null. The Asc (see autoit function) value of
;				   +						any character (except 0/Null) you want to act as a Tab Fill character. See remarks.
;                  $iAlignment          - [optional] an integer value. Default is Null. The position of where the end of a Tab is
;				   +						aligned to compared to the text. See Constants.
;                  $iDecChar            - [optional] an integer value. Default is Null. Enter a character(in Asc Value(See
;				   +						Autoit Function)) that you want the decimal tab to use as a decimal separator. Can
;				   +						only be set if $iAlignment is set to $LOW_TAB_ALIGN_DECIMAL.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = $iTabStop not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTabStop not found in this ParStyle.
;				   @Error 1 @Extended 5 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iPosition not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iFillChar not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iAlignment not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $iDecChar not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Requested TabStop Object.
;				   @Error 2 @Extended 3 Return 0 = Error retrieving list of TabStop Positions.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Paragraph style already contains a TabStop at the length/Position specified
;				   +		in $iPosition.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iPosition
;				   |								2 = Error setting $iFillChar
;				   |								4 = Error setting $iAlignment
;				   |								8 = Error setting $iDecChar
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended ? Return 2 = Success. Settings were successfully set. New TabStop position is returned
;				   +								 in @Extended.
;				   @Error 0 @Extended 0 Return 3 = Success. $iTabStop parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting inserted TabStops have been successfully
;				   +								cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a $iTabStop with Default keyword to clear all direct formatting created TabStops.
;					Note: $iTabStop refers to the position, or essential the "length" of a TabStop from the edge of a page
;						margin. This is the only reliable way to identify a Tabstop to be able to interact with it, as there
;						can only be one of a certain length per document.
;					Note: $iPosition once set can vary +/- 1 uM. To ensure you can identify the tabstop to modify it again,
;						This function returns the new TabStop position in @Extended when $iPosition is set, return value will
;						be set to 2. See Return Values.
;					Note: Since $iPosition can fluctuate +/- 1 uM when it is inserted into LibreOffice, it is possible to
;						accidentally overwrite an already existing TabStop.
;					Note: $iFillChar, Libre's Default value, "None" is in reality a space character which is Asc value 32.
;						The other values offered by Libre are: Period (ASC 46), Dash (ASC 45) and Underscore (ASC 95). You can
;						also enter a custom ASC value. See ASC Autoit Func. and "ASCII Character Codes" in the Autoit help file.
; Tab Alignment Constants: $LOW_TAB_ALIGN_LEFT(0); Aligns the left edge of the text to the tab stop and extends the text to the
;								right.
;							$LOW_TAB_ALIGN_CENTER(1); Aligns the center of the text to the tab stop
;							$LOW_TAB_ALIGN_RIGHT(2); Aligns the right edge of the text to the tab stop and extends the text to
;								the left of the tab stop.
;							$LOW_TAB_ALIGN_DECIMAL(3); Aligns the decimal separator of a number to the center of the tab stop
;								and text to the left of the tab
;							$LOW_TAB_ALIGN_DEFAULT(4);4 = This setting is the default, setting when no TabStops are present.
;								Setting and Tabstop to this constant will make it disappear from the TabStop list. It is
;								therefore only listed here for property reading purposes.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DirFrmtParTabStopCreate,
;					_LOWriter_DirFrmtParTabStopDelete, _LOWriter_DirFrmtParTabStopList,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParTabStopMod(ByRef $oSelection, $iTabStop, $iPosition = Null, $iFillChar = Null, $iAlignment = Null, $iDecChar = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTabStop = Default) Then
		$oSelection.setPropertyToDefault("ParaTabStops")
		Return SetError($__LOW_STATUS_SUCCESS, 0, 3)
	EndIf

	If Not IsInt($iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_ParHasTabStop($oSelection, $iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParTabStopMod($oSelection, $iTabStop, $iPosition, $iFillChar, $iAlignment, $iDecChar)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParTabStopMod

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtParTxtFlowOpt
; Description ...: Set and Retrieve Text Flow settings for a Paragraph by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtParTxtFlowOpt(Byref $oSelection[, $bParSplit = Null[, $bKeepTogether = Null[, $iParOrphans = Null[, $iParWidows = Null]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object/Object Section returned from
;				   +						_LOWriter_ParObjCreateList or _LOWriter_ParObjSectionsGet function.
;                  $bParSplit           - [optional] a boolean value. Default is Null.  FALSE prevents the paragraph from
;				   +						getting split into two pages or columns
;                  $bKeepTogether       - [optional] a boolean value. Default is Null. TRUE prevents page or column breaks
;				   +						 between this and the following paragraph
;                  $iParOrphans         - [optional] an integer value. Default is Null. Specifies the minimum number of lines
;				   +							of the paragraph that have to be at bottom of a page if the paragraph is spread
;				   +							over more than one page. Min is 0 (disabled), and cannot be 1. Max is 9.
;                  $iParWidows          - [optional] an integer value. Default is Null. Specifies the minimum number of lines
;				   +						of the paragraph that have to be at top of a page if the paragraph is spread over
;				   +						more than one page. Min is 0 (disabled), and cannot be 1. Max is 9.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection not a Cursor Object and not a Paragraph portion Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bParSplit not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bKeepTogether not  a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iParOrphans not an Integer, less than 0, equal to 1, or greater than 9.
;				   @Error 1 @Extended 7 Return 0 = $iParWidows not an Integer, less than 0, equal to 1, or greater than 9.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bParSplit
;				   |								2 = Error setting $bKeepTogether
;				   |								4 = Error setting $iParOrphans
;				   |								8 = Error setting $iParWidows
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: Resetting Orphan or
;					Widow will reset $bParSplit to False if it was set to True.
;					 Note: If you do not set ParSplit to True, the rest of the settings will still show to have been set but
;					will not become active until $bParSplit is set to true.
; Related .......:_LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtParTxtFlowOpt(ByRef $oSelection, $bParSplit = Null, $bKeepTogether = Null, $iParOrphans = Null, $iParWidows = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($bParSplit, $bKeepTogether, $iParOrphans, $iParWidows) Then
		If ($bParSplit = Default) Then
			$oSelection.setPropertyToDefault("ParaSplit")
			$bParSplit = Null
		EndIf

		If ($bKeepTogether = Default) Then
			$oSelection.setPropertyToDefault("ParaKeepTogether")
			$bKeepTogether = Null
		EndIf

		If ($iParOrphans = Default) Then
			$oSelection.setPropertyToDefault("ParaOrphans")
			$iParOrphans = Null
		EndIf

		If ($iParWidows = Default) Then
			$oSelection.setPropertyToDefault("ParaWidows")
			$iParWidows = Null
		EndIf

		If __LOWriter_VarsAreNull($bParSplit, $bKeepTogether, $iParOrphans, $iParWidows) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_ParTxtFlowOpt($oSelection, $bParSplit, $bKeepTogether, $iParOrphans, $iParWidows)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtParTxtFlowOpt

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtStrikeOut
; Description ...: Set or Retrieve the StrikeOut settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtStrikeOut(Byref $oSelection[, $bWordOnly = Null[, $bStrikeOut = Null[, $iStrikeLineStyle = Null]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. Whether to strike out words only and skip
;				   +							whitespaces. True = skip whitespaces.
;                  $bStrikeOut          - [optional] a boolean value. Default is Null. True = strikeout, False = no strikeout.
;                  $iStrikeLineStyle    - [optional] an integer value. Default is Null. The Strikeout Line Style, see constants
;				   +								below.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bStrikeOut not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iStrikeLineStyle not an Integer, or less than 0 or greater than 8. Check
;				   +									the Constants list.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $bStrikeOut
;				   |								4 = Error setting $iStrikeLineStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: $bStrikeout and
;						$iStrikeLineStyle are reset together.
;					Note Strikeout converted to single line in Ms word document format.
; Strikeout Line Style Constants : $LOW_STRIKEOUT_NONE(0); specifies not to strike out the characters.
;					$LOW_STRIKEOUT_SINGLE(1); specifies to strike out the characters with a single line
;					$LOW_STRIKEOUT_DOUBLE(2); specifies to strike out the characters with a double line.
;					$LOW_STRIKEOUT_DONT_KNOW(3); The strikeout mode is not specified.
;					$LOW_STRIKEOUT_BOLD(4); specifies to strike out the characters with a bold line.
;					$LOW_STRIKEOUT_SLASH(5); specifies to strike out the characters with slashes.
;					$LOW_STRIKEOUT_X(6); specifies to strike out the characters with X's.
; Related .......:_LOWriter_DirFrmtClear, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_ParObjCreateList, _LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtStrikeOut(ByRef $oSelection, $bWordOnly = Null, $bStrikeOut = Null, $iStrikeLineStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($bWordOnly, $bStrikeOut, $iStrikeLineStyle) Then
		If ($bWordOnly = Default) Then
			$oSelection.setPropertyToDefault("CharWordMode")
			$bWordOnly = Null
		EndIf

		If ($bStrikeOut = Default) Then
			$oSelection.setPropertyToDefault("CharCrossedOut")
			$bStrikeOut = Null
		EndIf

		If ($iStrikeLineStyle = Default) Then
			$oSelection.setPropertyToDefault("CharStrikeout")
			$iStrikeLineStyle = Null
		EndIf

		If __LOWriter_VarsAreNull($bWordOnly, $bStrikeOut, $iStrikeLineStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharStrikeOut($oSelection, $bWordOnly, $bStrikeOut, $iStrikeLineStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_DirFrmtStrikeOut

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DirFrmtUnderLine
; Description ...: Set and retrieve the UnderLine settings by Direct Formatting.
; Syntax ........: _LOWriter_DirFrmtUnderLine(Byref $oSelection[, $bWordOnly = Null[, $iUnderLineStyle = Null[, $bULHasColor = Null[, $iULColor = Null]]]])
; Parameters ....: $oSelection             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval function, Or A Paragraph Object, or other Object containing a selection
;				   +						of text.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not underlined.
;                  $iUnderLineStyle     - [optional] an integer value. Default is Null. The style of the Underline line, see
;				   +									constants listed below.
;                  $bULHasColor         - [optional] a boolean value. Default is Null. Whether the underline is colored, must
;				   +						be set to true in order to set the underline color.
;                  $iULColor            - [optional] an integer value. Default is Null. The color of the underline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSelection not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSelection does not support any of the following:
;				   +								"com.sun.star.text.Paragraph";"TextPortion"; "TextCursor"; "TextViewCursor".
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iUnderLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bULHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iULColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iUnderLineStyle
;				   |								4 = Error setting $ULHasColor
;				   |								8 = Error setting $iULColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 0 Return 2 = Success. One or more parameter was set to Default, and rest of parameters
;				   +								were set to Null. Direct formatting has been successfully cleared.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Direct formatting is, just as the name indicates, directly applying settings to a selection of text, it is
;						messy to deal with both by proxy (such as by Autoit automation) and directly in the document, and is
;						generally not recommended to use. Use at your own risk. Character and Paragraph styles are recommended
;						instead.
; 				   Retrieving current settings in any Direct formatting functions may be inaccurate as multiple different
;						settings could be selected at once, which would result in a return of 0, false, null, etc.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;				   Call any optional parameter with Null keyword to skip it.
;					Call a Parameter with Default keyword to clear direct formatting for that setting. Note: Underline style,
;						Color and $bHasColor all reset together.
;					Note: $bULHasColor must be set to true in order to set the underline color.
; UnderLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DirFrmtClear,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParObjCreateList,
;					_LOWriter_ParObjSectionsGet
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DirFrmtUnderLine(ByRef $oSelection, $bWordOnly = Null, $iUnderLineStyle = Null, $bULHasColor = Null, $iULColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_DirFrmtCheck($oSelection) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_AnyAreDefault($bWordOnly, $iUnderLineStyle, $bULHasColor, $iULColor) Then
		If ($bWordOnly = Default) Then
			$oSelection.setPropertyToDefault("CharWordMode")
			$bWordOnly = Null
		EndIf

		If ($iUnderLineStyle = Default) Then
			$oSelection.setPropertyToDefault("CharUnderline")
			$iUnderLineStyle = Null
		EndIf

		If ($bULHasColor = Default) Then
			$oSelection.setPropertyToDefault("CharUnderlineHasColor")
			$bULHasColor = Null
		EndIf

		If ($iULColor = Default) Then
			$oSelection.setPropertyToDefault("CharUnderlineColor")
			$iULColor = Null
		EndIf

		If __LOWriter_VarsAreNull($bWordOnly, $iUnderLineStyle, $bULHasColor, $iULColor) Then Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	$vReturn = __LOWriter_CharUnderLine($oSelection, $bWordOnly, $iUnderLineStyle, $bULHasColor, $iULColor)
	Return SetError(@error, @extended, $vReturn)

EndFunc   ;==>_LOWriter_DirFrmtUnderLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarkDelete
; Description ...: Selete a Bookmark.
; Syntax ........: _LOWriter_DocBookmarkDelete(Byref $oDoc, Byref $oBookmark)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oBookmark           - [in/out] an object. A Bookmark Object from a previous Insert or Retrieve function to
;				   +					delete.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oBookmark not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to delete Bookmark, but document still contains a
;				   +									Bookmark by that name.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully deleted requested Bookmark.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocBookmarkInsert, _LOWriter_DocBookmarkGetObj, _LOWriter_DocBookmarksList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarkDelete(ByRef $oDoc, ByRef $oBookmark)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sBookmarkName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oBookmark) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$sBookmarkName = $oBookmark.Name()

	$oBookmark.dispose()

	Return (_LOWriter_DocBookmarksHasName($oDoc, $sBookmarkName)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocBookmarkDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarkGetAnchor
; Description ...: Retrieve a Bookmark's Anchor cursor Object.
; Syntax ........: _LOWriter_DocBookmarkGetAnchor(Byref $oBookmark)
; Parameters ....: $oBookmark           - [in/out] an object. A Bookmark Object returned from a previous Insert or Retrieve
;				   +						function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oBookmark not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Bookmark anchor Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Returning requested Bookmark Anchor Cursor Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The Anchor cursor returned is just a Text Cursor placed at the anchor's position.
; Related .......: _LOWriter_DocBookmarkGetObj, _LOWriter_DocBookmarkInsert, _LOWriter_CursorMove, _LOWriter_DocGetString,
;					_LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarkGetAnchor(ByRef $oBookmark)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oBookAnchor

	If Not IsObj($oBookmark) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oBookAnchor = $oBookmark.Anchor.Text.createTextCursorByRange($oBookmark.Anchor())
	If Not IsObj($oBookAnchor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oBookAnchor)
EndFunc   ;==>_LOWriter_DocBookmarkGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarkGetObj
; Description ...: Retrieve a Bookmark Object by name.
; Syntax ........: _LOWriter_DocBookmarkGetObj(Byref $oDoc, $sBookmarkName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sBookmarkName       - a string value. The Bookmark name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sBookmarkName not an Object.
;				   @Error 1 @Extended 3 Return 0 = Document does not contain a Bookmark named as called in $sBookmarkName.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve requested Bookmark Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully retrieved requested Bookmark Object. Returning
;				   +												requested Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocBookmarksList, _LOWriter_DocBookmarkModify, _LOWriter_DocBookmarkDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarkGetObj(ByRef $oDoc, $sBookmarkName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oBookmark

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If Not _LOWriter_DocBookmarksHasName($oDoc, $sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oBookmark = $oDoc.Bookmarks.getByName($sBookmarkName)
	If Not IsObj($oBookmark) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oBookmark)
EndFunc   ;==>_LOWriter_DocBookmarkGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarkInsert
; Description ...: Insert a Bookmark into a document.
; Syntax ........: _LOWriter_DocBookmarkInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sBookmarkName = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sBookmarkName       - [optional] a string value. Default is Null. The Name of the Bookmark to create. See
;				   +									Remarks.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sBookmarkName not a String.
;				   @Error 1 @Extended 6 Return 0 = $sBookmarkName contains illegal characters, /\@:*?";,.# .
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.Bookmark" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Bookmark into the document. Returning
;				   +											the Bookmark Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If the cursor used to insert a Bookmark has text selected, the Bookmark will envelope the text, else the
;					Bookmark will be inserted at a single point.
;					A Bookmark name cannot contain the following characters:  / \ @ : * ? " ; , . #
;					If the document already contains a Bookmark by the same name, Libre Office adds a digit after the name, such
;					as Bookmark 1, Bookmark 2 etc.
; Related .......: _LOWriter_DocBookmarkModify, _LOWriter_DocBookmarkDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarkInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sBookmarkName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oBookmark

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oBookmark = $oDoc.createInstance("com.sun.star.text.Bookmark")
	If Not IsObj($oBookmark) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sBookmarkName <> Null) Then
		If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If StringRegExp($sBookmarkName, '[/\@:*?";,.#]') Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Invalid Characters in Name.
		$oBookmark.Name = $sBookmarkName
	Else
		$oBookmark.Name = "Bookmark "
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oBookmark, $bOverwrite)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oBookmark)
EndFunc   ;==>_LOWriter_DocBookmarkInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarkModify
; Description ...: Set or Retrieve a Bookmark's settings.
; Syntax ........: _LOWriter_DocBookmarkModify(Byref $oDoc, Byref $oBookmark[, $sBookmarkName = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oBookmark           - [in/out] an object. A Bookmark object returned from a previous Insert or retrieval
;				   +							function.
;                  $sBookmarkName       - [optional] a string value. Default is Null. The new name to name the bookmark.
; Return values .: Success: 1 or String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oBookmark not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sBookmarkName not a String.
;				   @Error 1 @Extended 4 Return 0 = $sBookmarkName contains illegal characters, /\@:*?";,.# .
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $sBookmarkName
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Bookmark name successfully modified.
;				   @Error 0 @Extended 0 Return String = Success. $sBookmarkName set to Null, returning current Bookmark name.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					A Bookmark name cannot contain the following characters:  / \ @ : * ? " ; , . #
;					If the document already contains a Bookmark by the same name, Libre Office adds a digit after the name, such
;					as Bookmark 1, Bookmark 2 etc.
; Related .......: _LOWriter_DocBookmarkGetObj, _LOWriter_DocBookmarkInsert, _LOWriter_DocBookmarkDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarkModify(ByRef $oDoc, ByRef $oBookmark, $sBookmarkName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oBookmark) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sBookmarkName) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oBookmark.Name())

	If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If StringRegExp($sBookmarkName, '[/\@:*?";,.#]') Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;Invalid Characters in Name.
	$oBookmark.Name = $sBookmarkName
	$iError = ($oBookmark.Name() = $sBookmarkName) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocBookmarkModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarksHasName
; Description ...: Check if a document contains a Bookmark by name.
; Syntax ........: _LOWriter_DocBookmarksHasName(Byref $oDoc, $sBookmarkName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sBookmarkName       - a string value. The Bookmark name to search for.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sBookmarkName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Bookmarks Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. If the document contains a Bookmark by the called name,
;				   +												then True is returned, Else false.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarksHasName(ByRef $oDoc, $sBookmarkName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oBookmarks

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oBookmarks = $oDoc.getBookmarks()
	If Not IsObj($oBookmarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oBookmarks.hasByName($sBookmarkName))
EndFunc   ;==>_LOWriter_DocBookmarksHasName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocBookmarksList
; Description ...: Retrieve an Array of Bookmark names.
; Syntax ........: _LOWriter_DocBookmarksList(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Array of Bookmark Names.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully searched for Bookmarks, but document does
;				   +											not contain any.
;				   @Error 0 @Extended ? Return Array = Success. Successfully searched for Bookmarks, returning Array of
;				   +												Bookmark Names, with @Extended set to number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocBookmarkGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocBookmarksList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asBookmarkNames[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$asBookmarkNames = $oDoc.Bookmarks.getElementNames()
	If Not IsArray($asBookmarkNames) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return (UBound($asBookmarkNames) > 0) ? SetError($__LOW_STATUS_SUCCESS, UBound($asBookmarkNames), $asBookmarkNames) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocBookmarksList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocClose
; Description ...: Close an existing Writer Document, returning its save path if applicable.
; Syntax ........: _LOWriter_DocClose(Byref $oDoc[, $bSaveChanges = True[, $sSaveName = ""[, $bDeliverOwnership = True]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bSaveChanges        - [optional] a boolean value. Default is True. If true, saves changes if any were made
;				   +								before closing. See remarks.
;                  $sSaveName           - [optional] a string value. Default is "". The file name to save the file as if the
;				   +							file hasn't been saved before. See Remarks.
;                  $bDeliverOwnership   - [optional] a boolean value. Default is True. If True, deliver ownership of the
;				   +						document Object from the script to LibreOffice, recommended is True.
; Return values .:Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bSaveChanges not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sSaveName not a String.
;				   @Error 1 @Extended 4 Return 0 = $bDeliverOwnership not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Path Conversion to L.O. URL Failed.
;				   @Error 3 @Extended 2 Return 0 = Error while retrieving FilterName.
;				   @Error 3 @Extended 3 Return 0 = Error While setting Filter Name properties.
;				   --Success--
;				   @Error 0 @Extended 1 Return String = Success, document was successfully closed, and was saved to the
;				   +			 returned file Path.
;				   @Error 0 @Extended 2 Return String = Success, Document was successfully closed, document's changes were saved
;				   +			 to its existing location.
;				   @Error 0 @Extended 3 Return String = Success, Document was successfully closed, document either had no
;				   +			changes to save, or $bSaveChanges was set to False. If document had a save location, or if
;				   +			document was saved to a location, it is returned, else an empty string is returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If $bSaveChanges is true and the document hasn't been saved yet, the document is saved to the desktop,
;					If $sSaveName is undefined, it is saved as an .odt document to the desktop, named
;					Year-Month-Day_Hour-Minute-Second.odt. $sSaveName may be just a name, in which case the file will be saved
;					in .odt format. Or you may define your own format by including an extension, such as "Test.docx"
; Related .......: _LOWriter_DocOpen, _LOWriter_DocConnect, _LOWriter_DocCreate, _LOWriter_DocSaveAs, _LOWriter_DocSave
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocClose(ByRef $oDoc, $bSaveChanges = True, $sSaveName = "", $bDeliverOwnership = True)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sDocPath = "", $sSavePath, $sFilterName
	Local $aArgs[1]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bSaveChanges) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sSaveName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bDeliverOwnership) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)



	If Not $oDoc.hasLocation() And ($bSaveChanges = True) Then
		$sSavePath = @DesktopDir & "\"
		If ($sSaveName = "") Or ($sSaveName = " ") Then
			$sSaveName = @YEAR & "-" & @MON & "-" & @MDAY & "_" & @HOUR & "-" & @MIN & "-" & @SEC & ".odt"
			$sFilterName = "writer8"
		EndIf

		$sSavePath = _LOWriter_PathConvert($sSavePath & $sSaveName, 1)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		If $sFilterName = "" Then $sFilterName = __LOWriter_FilterNameGet($sSavePath)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
		$aArgs[0] = __LOWriter_SetPropertyValue("FilterName", $sFilterName)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)

	EndIf

	If ($bSaveChanges = True) Then

		If $oDoc.hasLocation() Then
			$oDoc.store()
			$sDocPath = _LOWriter_PathConvert($oDoc.getURL(), $LOW_PATHCONV_PCPATH_RETURN)
			$oDoc.Close($bDeliverOwnership)
			Return SetError($__LOW_STATUS_SUCCESS, 2, $sDocPath)
		Else
			$oDoc.storeAsURL($sSavePath, $aArgs)
			$oDoc.Close($bDeliverOwnership)
			Return SetError($__LOW_STATUS_SUCCESS, 1, _LOWriter_PathConvert($sSavePath, $LOW_PATHCONV_PCPATH_RETURN))
		EndIf

	EndIf

	If $oDoc.hasLocation() Then $sDocPath = _LOWriter_PathConvert($oDoc.getURL(), $LOW_PATHCONV_PCPATH_RETURN)
	$oDoc.Close($bDeliverOwnership)
	Return SetError($__LOW_STATUS_SUCCESS, 3, $sDocPath)

EndFunc   ;==>_LOWriter_DocClose

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocConnect
; Description ...: Connect to an already opened instance of a specified LibreOffice document.
; Syntax ........: _LOWriter_DocConnect($sFile[, $bConnectCurrent = False[, $bConnectAll = False]])
; Parameters ....: $sFile               - a string value. A Full or partial file path, or a full or partial file name. See
;				   +						remarks. Can be an empty string is $bConnectAll or $bConnectCurrent is True.
;                  $bConnectCurrent     - [optional] a boolean value. Default is False. If True, returns the currently active, or
;				   +						last active Document, unless it is not a Text Document.
;                  $bConnectAll         - [optional] a boolean value. Default is False. If True, returns an array containing all
;				   +					open Libre Text Documents. See remarks.
;-Return values .:Success: Object or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $sFile not a string.
;				   @Error 1 @Extended 2 Return 0 = $bConnectCurrent Not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bConnectAll Not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating ServiceManager object.
;				   @Error 2 @Extended 2 Return 0 = Error creating Desktop object.
;				   @Error 2 @Extended 3 Return 0 = Error creating enumeration of open documents.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error converting path to Libre Office URL.
;				   --Document Errors--
;				   @Error 5 @Extended 1 Return 0 = No matches found.
;				   @Error 5 @Extended 2 Return 0 = Current Component not a Text Document.
;				   @Error 5 @Extended 3 Return 0 = No open Libre Office documents found.
;				   --Success--
;				   @Error 0 @Extended 1 Return Object = The Object for the current, or last active document is returned.
;				   @Error 0 @Extended 2 Returns Array = An Array of all open Libre Text documents is returned. See remarks.
;				   @Error 0 @Extended 3 Return Object = The Object for the document with matching URL is returned.
;				   @Error 0 @Extended 4 Return Object = The Object for the document with matching Title is returned.
;				   @Error 0 @Extended 5 Return Object = A partial Title or Path search found only one match, returning the
;															 Object for the found document.
;				   @Error 0 @Extended 6 Return Array = An Array of all matching Libre Text documents from a partial Title or
;				   +									Path search. See remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: $sFile can be either the full Path (Name and extension included; i.e:
;					C:\file\Test.odt Or file:///C:/file/Test.odt) of the document, Or the full Title with extension,
;					(i.e: Test.odt), Or a partial file path (i.e: file1\file2\Test Or file1\file2 Or file1/file2/ etc.), Or a
;					partial name (i.e: test, would match Test1.odt, Test2.docx etc.). Partial file path searches and file name
;					searches, as well as the connect all option, return arrays with three columns per result.
;					($aArray[0][3]. each result is stored in a separate row;
;				   Row 1, Column 0 contain the Object variable for that document.
;						$aArray[0][0] = $oDoc
;					Row 1, Column 1 contains the Document's full title and extension.
;				    	$aArray[0][1] = This Test File.Docx
;					Row 1, Column 2 contains the document's full file path.
;				    	$aArray[0][2] = C:\Folder1\Folder2\This Test File.Docx
;					Row 2, Column 0 contain the Object variable for the next document. And so on.
;					    $aArray[1][0] = $oDoc2
; Related .......: _LOWriter_DocOpen, _LOWriter_DocClose, _LOWriter_DocCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocConnect($sFile, $bConnectCurrent = False, $bConnectAll = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCount = 0
	Local Const $STR_STRIPLEADING = 1
	Local $aoConnectAll[1], $aoPartNameSearch[1]
	Local $oEnumDoc, $oDoc, $oServiceManager, $oDesktop

	If Not IsString($sFile) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bConnectCurrent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bConnectAll) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oDesktop = $oServiceManager.createInstance("com.sun.star.frame.Desktop")
	If Not IsObj($oDesktop) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)


	If Not $oDesktop.getComponents.hasElements() Then Return SetError($__LOW_STATUS_DOC_ERROR, 3, 0) ; no L.O open
	$oEnumDoc = $oDesktop.getComponents.createEnumeration()
	If Not IsObj($oEnumDoc) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	If $bConnectCurrent Then
		$oDoc = $oDesktop.currentComponent()
		Return ($oDoc.supportsService("com.sun.star.text.TextDocument")) ? SetError($__LOW_STATUS_SUCCESS, 1, $oDoc) : SetError($__LOW_STATUS_DOC_ERROR, 2, 0)
	EndIf

	If $bConnectAll Then

		ReDim $aoConnectAll[1][3]
		$iCount = 0
		While $oEnumDoc.hasMoreElements()
			$oDoc = $oEnumDoc.nextElement()
			If $oDoc.supportsService("com.sun.star.text.TextDocument") Then

				ReDim $aoConnectAll[$iCount + 1][3]
				$aoConnectAll[$iCount][0] = $oDoc
				$aoConnectAll[$iCount][1] = $oDoc.Title()
				$aoConnectAll[$iCount][2] = _LOWriter_PathConvert($oDoc.getURL(), $LOW_PATHCONV_PCPATH_RETURN)
				$iCount += 1
			EndIf
			Sleep(10)
		WEnd
		Return SetError($__LOW_STATUS_SUCCESS, 2, $aoConnectAll)

	EndIf

	$sFile = StringStripWS($sFile, $STR_STRIPLEADING)
	If StringInStr($sFile, "\") Then $sFile = _LOWriter_PathConvert($sFile, $LOW_PATHCONV_OFFICE_RETURN) ;Convert to L.O File path.
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If StringInStr($sFile, "file:///") Then ;URL/Path and Name search

		While $oEnumDoc.hasMoreElements()
			$oDoc = $oEnumDoc.nextElement()

			If ($oDoc.getURL() == $sFile) Then Return SetError($__LOW_STATUS_SUCCESS, 3, $oDoc) ;Match
		WEnd
		Return SetError($__LOW_STATUS_DOC_ERROR, 1, 0) ;no match

	Else
		If Not StringInStr($sFile, "/") And StringInStr($sFile, ".") Then ;Name with extension only search
			While $oEnumDoc.hasMoreElements()
				$oDoc = $oEnumDoc.nextElement()
				If StringInStr($oDoc.Title, $sFile) Then Return SetError($__LOW_STATUS_SUCCESS, 4, $oDoc) ;Match
			WEnd
			Return SetError($__LOW_STATUS_DOC_ERROR, 1, 0) ;no match
		EndIf

		$iCount = 0 ; partial name or partial url search
		ReDim $aoPartNameSearch[$iCount + 1][3]

		While $oEnumDoc.hasMoreElements()
			$oDoc = $oEnumDoc.nextElement()
			If StringInStr($sFile, "/") Then
				If StringInStr($oDoc.getURL(), $sFile) Then
					ReDim $aoPartNameSearch[$iCount + 1][3]
					$aoPartNameSearch[$iCount][0] = $oDoc
					$aoPartNameSearch[$iCount][1] = $oDoc.Title
					$aoPartNameSearch[$iCount][2] = _LOWriter_PathConvert($oDoc.getURL, $LOW_PATHCONV_PCPATH_RETURN)
					$iCount += 1
				EndIf
			Else
				If StringInStr($oDoc.Title, $sFile) Then
					ReDim $aoPartNameSearch[$iCount + 1][3]
					$aoPartNameSearch[$iCount][0] = $oDoc
					$aoPartNameSearch[$iCount][1] = $oDoc.Title
					$aoPartNameSearch[$iCount][2] = _LOWriter_PathConvert($oDoc.getURL, $LOW_PATHCONV_PCPATH_RETURN)
					$iCount += 1
				EndIf
			EndIf

		WEnd
		If IsString($aoPartNameSearch[0][1]) Then
			If (UBound($aoPartNameSearch) = 1) Then
				Return SetError($__LOW_STATUS_SUCCESS, 5, $aoPartNameSearch[0][0]) ; matches
			Else
				Return SetError($__LOW_STATUS_SUCCESS, 6, $aoPartNameSearch) ; matches
			EndIf

		Else
			Return SetError($__LOW_STATUS_DOC_ERROR, 1, 0) ;no match
		EndIf

	EndIf

EndFunc   ;==>_LOWriter_DocConnect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocConvertTableToText
; Description ...: Convert a Table to Text, separated by a delimiter.
; Syntax ........: _LOWriter_DocConvertTableToText(Byref $oDoc, Byref $oTable, $sDelimiter)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $sDelimiter          - [optional] a string value. Default is @TAB. A character to separate each column by,
;				   +						such as a Tab etc.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sDelimiter not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve ViewCursor object.
;				   @Error 2 @Extended 2 Return 0 = Failed to create a backup of the ViewCursor's current location.
;				   @Error 2 @Extended 3 Return 0 = Failed to create a Text Cursor in the first cell.
;				   @Error 2 @Extended 4 Return 0 = Failed to create "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 5 Return 0 = Failed to create "com.sun.star.frame.DispatchHelper" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve array of CellNames.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Table was successfully converted to text.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: This function temporarily moves the Viewcursor to the Table indicated, and then attempts to restore
;					the ViewCursor to its former position. This could cause a COM error if the Cursor was presently in the
;					Table.
; Related .......: _LOWriter_DocConvertTextToTable, _LOWriter_TableGetObjByName, _LOWriter_TableGetObjByCursor,
;					_LOWriter_TableInsert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocConvertTableToText(ByRef $oDoc, ByRef $oTable, $sDelimiter = @TAB)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aArgs[1]
	Local $asCellNames
	Local $oServiceManager, $oDispatcher, $oCellTextCursor, $oViewCursor, $oViewCursorBackup

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sDelimiter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$aArgs[0] = __LOWriter_SetPropertyValue("Delimiter", $sDelimiter)

	$asCellNames = $oTable.getCellNames()
	If Not IsArray($asCellNames) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	;Retrieve the ViewCursor.
	$oViewCursor = $oDoc.CurrentController.getViewCursor()
	If Not IsObj($oViewCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	;Create a Text cursor at the current viewCursor position to move the Viewcursor back to.
	$oViewCursorBackup = _LOWriter_DocCreateTextCursor($oDoc, False, True)
	If Not IsObj($oViewCursorBackup) Then
		$oViewCursorBackup = _LOWriter_DocCreateTextCursor($oDoc, False) ; If That Failed, create a Backup Cursor at the beginning of the document.
		If Not IsObj($oViewCursorBackup) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	EndIf

	;Retrieve the first cell  in the table and create a text cursor in it to move the ViewCursor to.
	$oCellTextCursor = $oTable.getCellByName($asCellNames[0]).Text.createTextCursor()
	If Not IsObj($oCellTextCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	$oViewCursor.gotoRange($oCellTextCursor, False)

	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 4, 0)

	$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
	If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 5, 0)

	$oDispatcher.executeDispatch($oDoc.CurrentController(), ".uno:ConvertTableToText", "", 0, $aArgs)

	;Restore the ViewCursor to its previous location.
	$oViewCursor.gotoRange($oViewCursorBackup, False)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocConvertTableToText

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocConvertTextToTable
; Description ...: Convert some selected text into a Table.
; Syntax ........: _LOWriter_DocConvertTextToTable(Byref $oDoc, Byref $oCursor[, $sDelimiter = @TAB[, $bHeader = False[, $iRepeatHeaderLines = 0[, $bBorder = False[, $bDontSplitTable = False]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. Default is Null. See Remarks.
;                  $sDelimiter          - [optional] a string value. Default is @TAB. A character to the text into each column
;				   +						by, such as a Tab etc.
;                  $bHeader             - [optional] a boolean value. Default is False. If True, Formats the first row of the
;				   +						new table as a heading.
;                  $iRepeatHeaderLines  - [optional] an integer value. Default is 0. If greater than 0, then Repeats the first n
;				   +						rows as a header.
;                  $bBorder             - [optional] a boolean value. Default is False. If True, Adds a border to the table and
;				   +						the table cells.
;                  $bDontSplitTable     - [optional] a boolean value. Default is False. If True, Does not divide the table
;				   +						across pages.
; Return values .: Success:Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sDelimiter not a String.
;				   @Error 1 @Extended 4 Return 0 = $bHeader not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iRepeatHeaderLines not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $bBorder not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bDontSplitTable not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $oCursor is a Table Cursor and cannot be used.
;				   @Error 1 @Extended 9 Return 0 = $oCursor has no data selected.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve TextTables Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to create "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to create "com.sun.star.frame.DispatchHelper" Object.
;				   @Error 2 @Extended 4 Return 0 = Failed to retrieve ViewCursor object.
;				   @Error 2 @Extended 5 Return 0 = Failed to create a backup of the ViewCursor's current location.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to $oCursor's cursor type.
;				   @Error 3 @Extended 2 Return 0 = Failed to retrieve new Table's Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Text was successfully converted to a Table, returning the new
;				   +								Table's Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Note: This function temporarily moves the Viewcursor to and selectes the Text, and then attempts to
;					restore the ViewCursor to its former position.
; Related .......:   _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					 _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					 _LOWriter_DocFooterGetTextCursor, _LOWriter_ParObjCreateList, _LOWriter_DocConvertTableToText
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocConvertTextToTable(ByRef $oDoc, ByRef $oCursor, $sDelimiter = @TAB, $bHeader = False, $iRepeatHeaderLines = 0, $bBorder = False, $bDontSplitTable = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asTables[0]
	Local $atArgs[5]
	Local $oServiceManager, $oDispatcher, $oViewCursor, $oViewCursorBackup, $oTables, $oTable
	Local $iCursorType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sDelimiter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bHeader) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsInt($iRepeatHeaderLines) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not IsBool($bBorder) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not IsBool($bDontSplitTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	$oTables = $oDoc.TextTables()
	If Not IsObj($oTables) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $asTables[$oTables.getCount()]
	;Store all current Table Names.
	For $i = 0 To $oTables.getCount() - 1
		$asTables[$i] = $oTables.getByIndex($i).Name()
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))     ;Sleep every x cycles.
	Next

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)

	;If Cursor has no data selected, return error.
	If $oCursor.isCollapsed() Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)

	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
	If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	$atArgs[0] = __LOWriter_SetPropertyValue("Delimiter", $sDelimiter)
	$atArgs[1] = __LOWriter_SetPropertyValue("WithHeader", $bHeader)
	$atArgs[2] = __LOWriter_SetPropertyValue("RepeatHeaderLines", $iRepeatHeaderLines)
	$atArgs[3] = __LOWriter_SetPropertyValue("WithBorder", $bBorder)
	$atArgs[4] = __LOWriter_SetPropertyValue("DontSplitTable", $bDontSplitTable)

	If ($iCursorType = $LOW_CURTYPE_TEXT_CURSOR) Then

		;Retrieve the ViewCursor.
		$oViewCursor = $oDoc.CurrentController.getViewCursor()
		If Not IsObj($oViewCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 4, 0)

		;Create a Text cursor at the current viewCursor position to move the Viewcursor back to.
		$oViewCursorBackup = _LOWriter_DocCreateTextCursor($oDoc, False, True)
		If Not IsObj($oViewCursorBackup) Then Return SetError($__LOW_STATUS_INIT_ERROR, 5, 0)

		$oViewCursor.gotoRange($oCursor, False)

		$oDispatcher.executeDispatch($oDoc.CurrentController(), ".uno:ConvertTextToTable", "", 0, $atArgs)

		;Restore the ViewCursor to its previous location.
		$oViewCursor.gotoRange($oViewCursorBackup, False)
	Else

		$oDispatcher.executeDispatch($oDoc.CurrentController(), ".uno:ConvertTextToTable", "", 0, $atArgs)
	EndIf

	;Obtain the newly created table object by comparing the original table names to the new list of tables. If none match,
	;then it is the new one. Return that Table's Object.
	For $i = 0 To $oTables.getCount() - 1

		For $j = 0 To UBound($asTables) - 1
			If ($asTables[$j] = $oTables.getByIndex($i).Name()) Then ExitLoop
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0)) ;Sleep every x cycles.
		Next

		If ($j = UBound($asTables)) Then ;If No matches in the original table names, then set Table Object and exit loop

			$oTable = $oTables.getByIndex($i)
			ExitLoop
		EndIf
	Next

	Return (IsObj($oTable)) ? SetError($__LOW_STATUS_SUCCESS, 0, $oTable) : SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
EndFunc   ;==>_LOWriter_DocConvertTextToTable

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocCreate
; Description ...: Open a new Libre Office Writer Document or Connect to an existing blank, unsaved, writable document.
; Syntax ........: _LOWriter_DocCreate([$bForceNew = True[, $bHidden = False]])
; Parameters ....: 		$bForceNew		- [optional] a boolean value. Default is True. Whether to force opening a new Writer
;				   +						Document instead of checking for a usable blank.
;					   	$bHidden		- [optional] a boolean value. Default is False. If True opens the new document
;				   +						invisible or changes the existing document to invisible.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $bForceNew not a Boolean.
;				   @Error 1 @Extended 2 Return 0 = $bHidden not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure Creating Object com.sun.star.ServiceManager.
;				   @Error 2 @Extended 2 Return 0 = Failure Creating Object com.sun.star.frame.Desktop.
;				   @Error 2 @Extended 3 Return 0 = Failure Enumerating available documents.
;				   @Error 2 @Extended 4 Return 0 = Failure Creating New Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Document Object is still returned.
;				   +								Use BitAND to test @Extended for the following values: 1
;				   |								1 = Error setting $bHidden
;				   --Success--
;				   @Error 0 @Extended 1 Return Object = Successfully connected to an existing Document. Returning Document's
;				   +								Object
;				   @Error 0 @Extended 2 Return Object = Successfully created a new document. Returning Document's Object
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocOpen, _LOWriter_DocClose, _LOWriter_DocConnect
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocCreate($bForceNew = True, $bHidden = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $iURLFrameCreate = 8 ;frame will be created if not found
	Local $aArgs[1]
	Local $iError = 0
	Local $oServiceManager, $oDesktop, $oDoc, $oEnumDoc

	If Not IsBool($bForceNew) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$aArgs[0] = __LOWriter_SetPropertyValue("Hidden", $bHidden)
	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oDesktop = $oServiceManager.createInstance("com.sun.star.frame.Desktop")
	If Not IsObj($oDesktop) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	;If not force new, and L.O pages exist then see if any blank writer documents to use.
	If Not $bForceNew And $oDesktop.getComponents.hasElements() Then
		$oEnumDoc = $oDesktop.getComponents.createEnumeration()
		If Not IsObj($oEnumDoc) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)
		While $oEnumDoc.hasMoreElements()
			$oDoc = $oEnumDoc.nextElement()
			If $oDoc.supportsService("com.sun.star.text.TextDocument") _
					And Not ($oDoc.hasLocation() And $oDoc.isReadOnly()) And ($oDoc.WordCount() = 0) Then
				$oDoc.CurrentController.Frame.ContainerWindow.Visible = ($bHidden) ? False : True ; opposite value of $bHidden.
				$iError = ($oDoc.CurrentController.Frame.isHidden() = $bHidden) ? $iError : BitOR($iError, 1)
				Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, $oDoc) : SetError($__LOW_STATUS_SUCCESS, 1, $oDoc)
			EndIf
		WEnd
	EndIf

	If Not IsObj($aArgs[0]) Then Return $iError = BitOR($iError, 1)
	$oDoc = $oDesktop.loadComponentFromURL("private:factory/swriter", "_blank", $iURLFrameCreate, $aArgs)
	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INIT_ERROR, 4, 0)
	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, $oDoc) : SetError($__LOW_STATUS_SUCCESS, 2, $oDoc)

EndFunc   ;==>_LOWriter_DocCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocCreateTextCursor
; Description ...: Create a TextCursor Object for future Textcursor related functional use.
; Syntax ........: _LOWriter_DocCreateTextCursor(Byref $oDoc[, $bCreateAtEnd = True[, $bCreateAtViewCursor = False]])
; Parameters ....: $oDoc			- [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bCreateAtEnd		- [optional] a boolean value. Default is True. If true,  creates the new cursor at the
;				   +						end of the Document. Else cursor is created at the beginning.
;                  $bCreateAtViewCursor - [optional] a boolean value. Default is False. Create the Text cursor at the document's
;				   +						View Cursor. See Remarks
; Return values .:Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bCreateAtEnd not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bCreateAtViewCursor not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bCreateAtEnd and $bCreateAtViewCursor both set to True, set either one
;				   +		to False.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve current ViewCursor Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to create Text Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to create Cursor Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Current ViewCursor is in unknown data type or failed detecting what data
;				   +		type.
;				   --Success--
;				   @Error 0 @Extended ? Return Object = Success, Cursor object was returned. Note: @Extended can be an Integer
;				   +		from 1 - 5; BodyText = 1, TextFrame = 2, TextTableCell = 3, FootNote = 4,  EndNote = 5) Indicating
;				   +		the current created cursor is in that type of data.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The cursor Created by this function in a text document, is used for inserting text, reading text, etc.
;					If you set $bCreateAtEnd to False, the new cursor is created at the beginning of the document, True creates
;					the cursor at the very end of the document. Setting $bCreateAtViewCursor to True will create a Textcursor at
;					the current ViewCursor position.
;+
;						There are two types of cursors in Word documents. The one you see, called the "ViewCursor", and the one
;					you do not see, called the "TextCursor". A "ViewCursor" is the blinking cursor you see when you are editing
;					a Word document, there is only one per document. A "TextCursor" on the other hand, is an invisible cursor
;					used for inserting text etc., into a Writer document. You can have multiple "TextCursors" per document.
; Related .......: _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocCreateTextCursor(ByRef $oDoc, $bCreateAtEnd = True, $bCreateAtViewCursor = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCursor, $oText, $oViewCursor
	Local $iCursorType = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bCreateAtEnd) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bCreateAtViewCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($bCreateAtEnd = True) And ($bCreateAtViewCursor = True) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	If ($bCreateAtViewCursor = True) Then
		$oViewCursor = $oDoc.CurrentController.getViewCursor()
		If Not IsObj($oViewCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
		$oText = __LOWriter_CursorGetText($oDoc, $oViewCursor)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$iCursorType = @extended
		If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		If __LOWriter_IntIsBetween($iCursorType, $LOW_CURDATA_BODY_TEXT, $LOW_CURDATA_HEADER_FOOTER) Then
			$oCursor = $oText.createTextCursorByRange($oViewCursor)
		Else
			Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;ViewCursor in unknown data type.
		EndIf

	Else
		$oText = $oDoc.getText
		If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		$oCursor = $oText.createTextCursor()
		$iCursorType = $LOW_CURDATA_BODY_TEXT

		If ($bCreateAtEnd = True) Then
			$oCursor.gotoEnd(False)
		Else
			$oCursor.gotoStart(False)
		EndIf
	EndIf

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)


	Return SetError($__LOW_STATUS_SUCCESS, $iCursorType, $oCursor)
EndFunc   ;==>_LOWriter_DocCreateTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocDescription
; Description ...: Set or Retrieve Document Description properties.
; Syntax ........: _LOWriter_DocDescription(Byref $oDoc[, $sTitle = Null[, $sSubject = Null[, $aKeywords = Null[, $sComments = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sTitle              - [optional] a string value. Default is Null. Set the Document's "Title Property. See
;				   +						Remarks.
;                  $sSubject            - [optional] a string value. Default is Null. Set the Document's "Subject" Property.
;                  $aKeywords           - [optional] an array of strings. Default is Null. Set the Document's "Keywords"
;				   +						Property. Input must be a single dimension Array, which will overwrite any keywords
;				   +						previously set. Accepts numbers also. See Remarks.
;                  $sComments           - [optional] a string value. Default is Null. Set the Document's "Comments" Property.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sTitle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sSubject not a String.
;				   @Error 1 @Extended 4 Return 0 = $asKeywords not an Array.
;				   @Error 1 @Extended 5 Return 0 = $sComments not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sTitle
;				   |								2 = Error setting $sSubject
;				   |								4 = Error setting $asKeywords
;				   |								8 = Error setting $sComments
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   +								"Keywords" value will be an Array, which could be empty if no keywords are
;				   +								presently set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: "Title" is the Title as found in File>Properties, not the Document's Title as set when saving it.
;					"Keywords" error checking only checks to make sure the input array, and the set Array of Keywords is the
;						same size, it does not check that each element is the same.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocDescription(ByRef $oDoc, $sTitle = Null, $sSubject = Null, $asKeywords = Null, $sComments = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp
	Local $iError = 0
	Local $avDescription[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sTitle, $sSubject, $asKeywords, $sComments) Then
		__LOWriter_ArrayFill($avDescription, $oDocProp.Title(), $oDocProp.Subject(), $oDocProp.Keywords(), $oDocProp.Description())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDescription)
	EndIf

	If ($sTitle <> Null) Then
		If Not IsString($sTitle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.Title = $sTitle
		$iError = ($oDocProp.Title() = $sTitle) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sSubject <> Null) Then
		If Not IsString($sSubject) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocProp.Subject = $sSubject
		$iError = ($oDocProp.Subject() = $sSubject) ? $iError : BitOR($iError, 2)
	EndIf

	If ($asKeywords <> Null) Then
		If Not IsArray($asKeywords) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDocProp.Keywords = $asKeywords
		$iError = (UBound($oDocProp.Keywords()) = UBound($asKeywords)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sComments <> Null) Then
		If Not IsString($sComments) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocProp.Description = $sComments
		$iError = ($oDocProp.Description() = $sComments) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocDescription

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocEnumPrinters
; Description ...: Enumerates all installed printers, or current default printer.
; Syntax ........: _LOWriter_DocEnumPrinters([$bDefaultOnly = False])
; Parameters ....: $bDefaultOnly        - [optional] a boolean value. Default is False. If True, returns only the name of the
;				   +						current default printer. Libre 6.3 and up only.
; Return values .: Success: An array or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $bDefaultOnly Not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure Creating "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 2 Return 0 = Failure creating "com.sun.star.awt.PrinterServer" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve Default printer name.
;				   @Error 3 @Extended 2 Return 0 = Failed to retrieve Array of printer names.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.1.
;				   @Error 7 @Extended 2 Return 0 = Current Libre Office version lower than 6.3.
;				   --Success--
;				   @Error 0 @Extended 1 Return String = Returning the default printer name.
;				   @Error 0 @Extended ? Return Array = Returning an array of strings containing all installed printers.
;				   +						@Extended set to number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function works for LibreOffice 4.1 and Up.
; Related .......: _LOWriter_DocEnumPrintersAlt
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocEnumPrinters($bDefaultOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oServiceManager, $oPrintServer
	Local $sDefault
	Local $asPrinters[0]

	If Not __LOWriter_VersionCheck(4.1) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
	If Not IsBool($bDefaultOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If @error Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oPrintServer = $oServiceManager.createInstance("com.sun.star.awt.PrinterServer")
	If Not IsObj($oPrintServer) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If $bDefaultOnly Then
		If Not __LOWriter_VersionCheck(6.3) Then Return SetError($__LOW_STATUS_VER_ERROR, 2, 0)
		$sDefault = $oPrintServer.getDefaultPrinterName()
		If IsString($sDefault) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $sDefault)
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf

	$asPrinters = $oPrintServer.getPrinterNames()
	If IsArray($asPrinters) Then Return SetError($__LOW_STATUS_SUCCESS, UBound($asPrinters), $asPrinters)
	Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

EndFunc   ;==>_LOWriter_DocEnumPrinters

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocEnumPrintersAlt
; Description ...: Alternate function; Enumerates all installed printers, or current default printer.
; Syntax ........: _LOWriter_DocEnumPrintersAlt([$sPrinterName = ""[, $bReturnDefault = False]])
; Parameters ....: $sPrinterName        - [optional] a string value. Default is "". Name of the printer to list. Default ""
;				   +						returns the list of all printers. $sPrinterName can be a part of a printer name like
;				   +						"HP*". Remember the asterisk (*).
;                  $bReturnDefault      - [optional] a boolean value. Default is False. If True, returns only the name of the
;				   +						current default printer.
; Return values .:Success: Array or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $sPrinterName - Not a String type variable.
;				   @Error 1 @Extended 2 Return 0 = $bReturnDefault Not a Boolean (True/False) type variable.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure Creating Object
;				   @Error 2 @Extended 2 Return 0 = Failure retrieving printer list Object.
;				   --Printer Related Errors--
;				   @Error 6 @Extended 1 Return 0 = No default printer found.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Returnin an array of string containing all installed printers. See
;				   +							remarks. Number of results returned in @Extended.
;				   @Error 0 @Extended 2 Return String = Returning the default printer name. See remarks.
; Author ........: jguinch (_PrintMgr_EnumPrinter)
; Modified ......: donnyh13 - Added input error checking. Added a return default printer only option.
; Remarks .......: When $bReturnDefault is False, The function returns all installed printers for the user running the script in
;					an array. @Extended is set to the number of results. If $sPrinterName is set, the name must
;					be exact, or no results will be found. Use an asterisk (*) for partial name searches, either prefixed
;					(*Canon), suffixed (Canon*), or both (*Canon*). When $bReturnDefault is True, The function returns only the
;					default printer's name or sets an error if no default printer is found.
; Related .......: _LOWriter_DocEnumPrinters
; Link ..........: https://www.autoitscript.com/forum/topic/155485-printers-management-udf/
; UDF title......: Printmgr.au3
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocEnumPrintersAlt($sPrinterName = "", $bReturnDefault = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asPrinterNames[10]
	Local $sFilter
	Local $iCount = 0
	Local Const $wbemFlagReturnImmediately = 0x10, $wbemFlagForwardOnly = 0x20
	Local $oWMIService, $oPrinters

	If Not IsString($sPrinterName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bReturnDefault) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $sPrinterName <> "" Then $sFilter = StringReplace(" Where Name like '" & StringReplace($sPrinterName, "\", "\\") & "'", "*", "%")
	$oWMIService = ObjGet("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2")
	If Not IsObj($oWMIService) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oPrinters = $oWMIService.ExecQuery("Select * from Win32_Printer" & $sFilter, "WQL", $wbemFlagReturnImmediately + $wbemFlagForwardOnly)
	If Not IsObj($oPrinters) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	For $oPrinter In $oPrinters
		Switch $bReturnDefault
			Case False
				If $iCount >= (UBound($asPrinterNames) - 1) Then ReDim $asPrinterNames[UBound($asPrinterNames) * 2]
				$asPrinterNames[$iCount] = $oPrinter.Name
				$iCount += 1

			Case True
				If $oPrinter.Default Then Return SetError($__LOW_STATUS_SUCCESS, 2, $oPrinter.Name)
		EndSwitch
	Next
	If $bReturnDefault Then Return SetError($__LOW_STATUS_PRINTER_RELATED_ERROR, 1, 0)
	ReDim $asPrinterNames[$iCount]
	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $asPrinterNames)
EndFunc   ;==>_LOWriter_DocEnumPrintersAlt

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocExecuteDispatch
; Description ...: Executes a command for a document.
; Syntax ........: _LOWriter_DocExecuteDispatch(Byref $oDoc, $sDispatch)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sDispatch           - a string value. The Dispatch command to execute. See List of commands below.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sDispatch not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.frame.DispatchHelper" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Succesfully executed dispatch command.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: A Dispatch is essentialy a simulation of the user performing an action, such as pressing Ctrl+A to select
;						all, etc.
; Dispatch Commands: 	uno:FullScreen -- Toggles full screen mode.
;						uno:ChangeCaseToLower -- Changes all selected text to lower case.  Text must be selected with the
;														ViewCursor.
;						uno:ChangeCaseToUpper -- Changes all selected text to upper case.  Text must be selected with the
;														ViewCursor.
;						uno:ChangeCaseRotateCase -- Cycles the Case (Title Case, Sentence case, UPPERCASE, lowercase). Text
;														must be selected with the ViewCursor.
;						uno:ChangeCaseToSentenceCase -- Changes the sentence to Sentence case where the Viewcursor is currently
;														positioned or has selected.
;						uno:ChangeCaseToTitleCase -- Changes the selected text to Title case. Text must be selected with
;														the ViewCursor.
;						uno:ChangeCaseToToggleCase -- Toggles the selected text's case (A becomes a, b becomes B, etc.).Text
;														must be selected with the ViewCursor.
;						uno:UpdateAll -- Causes all non fixed Fields, Links, Indexes, Charts etc., to be updated.
;						uno:UpdateFields -- Causes all Fields to be updated.
;						uno:UpdateAllIndexes -- Causes all Indexes to be updated.
;						uno:UpdateAllLinks -- Causes all Links to be updated.
;						uno:UpdateCharts -- Causes all Charts to be updated.
;						uno:Repaginate -- Update Page Formatting.
;						uno:ResetAttributes -- Removes all direct formatting from the selected text. Text must be selected with
;														the ViewCursor.
;					 	uno:SwBackspace -- Simulates pressing the Backspace key.
;						uno:Delete -- Simulates pressing the Delete key.
;						uno:Paste -- Pastes the data out of the clipboard. Simulating Ctrl+V.
;						uno:PasteUnformatted -- Pastes the data out of the clipboard unformatted.
;						uno:PasteSpecial -- Simulates pasting with Ctrl+Shift+V, opens a dialog for selecting paste format.
;						uno:Copy -- Simulates Ctrl+C, copies selected data to the clipboard. Text must be selected with
;														the ViewCursor.
;						uno:Cut -- Simulates Ctrl+X, cuts selected data, placing it into the clipboard. Text must be
;														selected with the ViewCursor.
;						uno:SelectAll -- Simulates Ctrl+A being pressed at the ViewCursor location.
;						uno:Zoom50Percent -- Set the zoom level to 50%.
;						uno:Zoom75Percent -- Set the zoom level to 75%.
;						uno:Zoom100Percent -- Set the zoom level to 100%.
;						uno:Zoom150Percent -- Set the zoom level to 150%.
;						uno:Zoom200Percent -- Set the zoom level to 200%.
;						uno:ZoomMinus -- Decreases the zoom value to the next increment down.
;						uno:ZoomPlus -- Increases the zoom value to the next increment up.
;						uno:ZoomPageWidth -- Set zoom to fit page width.
;						uno:ZoomPage -- Set zoom to fit page.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocExecuteDispatch(ByRef $oDoc, $sDispatch)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aArray[0]
	Local $oServiceManager, $oDispatcher

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sDispatch) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
	If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oDispatcher.executeDispatch($oDoc.CurrentController(), "." & $sDispatch, "", 0, $aArray)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocExecuteDispatch

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocExport
; Description ...: Export a Document with the specified file name to the path specified, with any parameters used.
; Syntax ........: _LOWriter_DocExport(Byref $oDoc, $sFilePath[, $bSamePath = False[, $sFilterName = ""[, $bOverwrite = Null[, $sPassword = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFilePath           - a string value. Full path to save the document to, including Filename and extension.
;				   +								See Remarks.
;                  $bSamePath           - [optional] a boolean value. Default is False. Uses the path of the current document to
;				   +								export to. See Remarks
;                  $sFilterName         - [optional] a string value. Default is "". Filter name. "" (blank string), Filter is
;				   +								chosen automatically based on the file extension. If no extension is
;				   +								present, or if not matched to the list of extensions in this UDF, the .odt
;				   +								extension is used instead, with filtername of "writer8"
;                  $bOverwrite          - [optional] a boolean value. Default is Null. If True, file will be overwritten.
;                  $sPassword           - [optional] a string value. Default is Null. Password String to set for the document.
;				   +									(Not all file formats can have a Password set). "" (blank string) or
;				   +									Null = No Password.
; Return values .:Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFilePath Not a String.
;				   @Error 1 @Extended 3 Return 0 = $bSamePath Not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $sFilterName Not a String.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite Not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sPassword Not a String.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error Converting Path to/from L.O. URL
;				   @Error 3 @Extended 2 Return 0 = Error retrieving FilterName.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting FilterName Property
;				   @Error 4 @Extended 2 Return 0 = Error setting Overwrite Property
;				   @Error 4 @Extended 3 Return 0 = Error setting Password Property
;				   --Document Errors--
;				   @Error 5 @Extended 1 Return 0 = Document has no save path, and $bSamePath is set to True.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returning save path for exported document.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Does not alter the original save path (if there was one), saves a copy of the document to the new path, in the
;					new file format if one is chosen.
;					If $bSamePath is set to True, the same save path as the current document is used. You must still fill in
;						 "sFilePath" with the desired File Name and new extension, but you do not need to enter the file path.
; Related .......: _LOWriter_DocSave, _LOWriter_DocSaveAs
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocExport(ByRef $oDoc, $sFilePath, $bSamePath = False, $sFilterName = "", $bOverwrite = Null, $sPassword = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aProperties[3]
	Local $sOriginalPath, $sSavePath

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFilePath) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bSamePath) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sFilterName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	If $bSamePath Then
		If $oDoc.hasLocation() Then
			$sOriginalPath = $oDoc.getURL()
			$sOriginalPath = StringLeft($sOriginalPath, StringInStr($sOriginalPath, "/", 0, -1)) ;Cut the original name off.
			If StringInStr($sFilePath, "\") Then $sFilePath = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_OFFICE_RETURN) ;Convert to L.O. URL
			If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
			$sFilePath = $sOriginalPath & $sFilePath ; combine the path with the new name.
		Else
			Return SetError($__LOW_STATUS_DOC_ERROR, 1, 0)
		EndIf
	EndIf

	If Not $bSamePath Then $sFilePath = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_OFFICE_RETURN)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($sFilterName = "") Or ($sFilterName = " ") Then $sFilterName = __LOWriter_FilterNameGet($sFilePath, True)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	$aProperties[0] = __LOWriter_SetPropertyValue("FilterName", $sFilterName)
	If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

	If ($bOverwrite <> Null) Then
		If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		ReDim $aProperties[UBound($aProperties) + 1]
		$aProperties[UBound($aProperties) - 1] = __LOWriter_SetPropertyValue("Overwrite", $bOverwrite)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 2, 0)
	EndIf

	If ($sPassword <> Null) Then
		If Not IsString($sPassword) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		ReDim $aProperties[UBound($aProperties) + 1]
		$aProperties[UBound($aProperties) - 1] = __LOWriter_SetPropertyValue("Password", $sPassword)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 3, 0)
	EndIf

	$oDoc.storeToURL($sFilePath, $aProperties)

	$sSavePath = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_PCPATH_RETURN)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $sSavePath)
EndFunc   ;==>_LOWriter_DocExport

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocFindAll
; Description ...: Find all matches contained in a document of a Specified Search String.
; Syntax ........: _LOWriter_DocFindAll(Byref $oDoc, Byref $oSrchDescript, $sSearchString, Byref $atFindFormat)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $sSearchString       - a string value. A String of text or a regular expression to search for.
;                  $atFindFormat        - [in/out] an array of structs. An Array of formatting properties created from
;				   +						FindFormat functions to search for, call with an empty array to skip. Array will not
;				   +						be modified.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSrchDescriptObject not a Search Descriptor Object.
;				   @Error 1 @Extended 4 Return 0 = $sSearchString not a String.
;				   @Error 1 @Extended 5 Return 0 = $atFindFormat not an Array.
;				   @Error 1 @Extended 6 Return 0 = $atFindFormat does not contain an Object in the first Element.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Search did not return an Object, something went wrong.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Search was Successful, but yielded no results.
;				   @Error 0 @Extended ? Return Array = Success. Search was Successful, returning 1 dimensional array containing
;				   +								the objects to each match, @Exteneded is set to the number of matches.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: The Objects returned can be used in any of the functions accepting a Paragraph or Cursor Object etc.,
;						to modify their properties or even the text itself.
; Related .......: _LOWriter_SearchDescriptorCreate, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext,
;					_LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange, _LOWriter_FindFormatModifyAlignment,
;					_LOWriter_FindFormatModifyEffects, _LOWriter_FindFormatModifyFont, _LOWriter_FindFormatModifyHyphenation,
;					_LOWriter_FindFormatModifyIndent, _LOWriter_FindFormatModifyOverline, _LOWriter_FindFormatModifyPageBreak,
;					_LOWriter_FindFormatModifyPosition, _LOWriter_FindFormatModifyRotateScaleSpace,
;					_LOWriter_FindFormatModifySpacing, _LOWriter_FindFormatModifyStrikeout,
;					_LOWriter_FindFormatModifyTxtFlowOpt, _LOWriter_FindFormatModifyUnderline.
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocFindAll(ByRef $oDoc, ByRef $oSrchDescript, $sSearchString, ByRef $atFindFormat)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oResults
	Local $aoResults[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sSearchString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsArray($atFindFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	If (UBound($atFindFormat) > 0) And Not IsObj($atFindFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oSrchDescript.setSearchAttributes($atFindFormat)
	$oSrchDescript.SearchString = $sSearchString

	$oResults = $oDoc.findAll($oSrchDescript)
	If Not IsObj($oResults) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($oResults.getCount() > 0) Then
		ReDim $aoResults[$oResults.getCount]
		For $i = 0 To $oResults.getCount() - 1
			$aoResults[$i] = $oResults.getByIndex($i)
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return (UBound($aoResults) > 0) ? SetError($__LOW_STATUS_SUCCESS, UBound($aoResults), $aoResults) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocFindAll

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocFindAllInRange
; Description ...: Find all occurences of a Search String in a Document in a specific selection.
; Syntax ........: _LOWriter_DocFindAllInRange(Byref $oDoc, Byref $oSrchDescript, $sSearchString, Byref $atFindFormat, Byref $oRange)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $sSearchString       - a string value. A String of text or a regular expression to search for.
;                  $atFindFormat        - [in/out] an array of structs. Set to an empty array to skip. An Array of Formatting
;				   +						properties to search for, either by value or simply by existence, depending on the
;				   +						current setting of "Value Search".  Array will not be modified.
;                  $oRange              - [in/out] an object. A Range, such as a cursor with Data selected, to perform the search
;				   +						within.
; Return values .: Success: 1 or Array..
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSrchDescript not a Search Descriptor Object.
;				   @Error 1 @Extended 4 Return 0 = $sSearchString not a String.
;				   @Error 1 @Extended 5 Return 0 = $atFindFormat not an Array.
;				   @Error 1 @Extended 6 Return 0 = First element in $atFindFormat not an Object.
;				   @Error 1 @Extended 7 Return 0 = $oRange not set to Null and not an Object.
;				   @Error 1 @Extended 8 Return 0 = $oRange has no data selected.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Search did not return an Object, something went wrong.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Search was successful but found no matches.
;				   @Error 0 @Extended ? Return Array = Success. Search was Successful, returning 1 dimensional array containing
;				   +								the objects to each match, @Extended is set to the number of matches.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_SearchDescriptorCreate,
;					_LOWriter_DocFindAll, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll,
;					_LOWriter_DocReplaceAllInRange, _LOWriter_FindFormatModifyAlignment,
;					_LOWriter_FindFormatModifyEffects, _LOWriter_FindFormatModifyFont, _LOWriter_FindFormatModifyHyphenation,
;					_LOWriter_FindFormatModifyIndent, _LOWriter_FindFormatModifyOverline, _LOWriter_FindFormatModifyPageBreak,
;					_LOWriter_FindFormatModifyPosition, _LOWriter_FindFormatModifyRotateScaleSpace,
;					_LOWriter_FindFormatModifySpacing, _LOWriter_FindFormatModifyStrikeout,
;					_LOWriter_FindFormatModifyTxtFlowOpt, _LOWriter_FindFormatModifyUnderline.
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocFindAllInRange(ByRef $oDoc, ByRef $oSrchDescript, $sSearchString, ByRef $atFindFormat, ByRef $oRange)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oResults, $oResult, $oRangeRegion, $oResultRegion, $oText, $oRangeAnchor
	Local $aoResults[0]
	Local $iCount = 0
	_LOWriter_DocGetViewCursor
	_LOWriter_DocCreateTextCursor

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sSearchString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsArray($atFindFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	If (UBound($atFindFormat) > 0) And Not IsObj($atFindFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	$oSrchDescript.setSearchAttributes($atFindFormat)

	If Not IsObj($oRange) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If ($oRange.IsCollapsed()) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)

	$oSrchDescript.SearchString = $sSearchString

	If $oRange.Text.supportsService("com.sun.star.text.TextFrame") Then
		$oRangeAnchor = $oRange.TextFrame.getAnchor() ;If Range is in a TextFrame, convert its position to a range in the document
	ElseIf $oRange.Text.supportsService("com.sun.star.text.Footnote") Or $oRange.Text.supportsService("com.sun.star.text.Endnote") Then
		$oRangeAnchor = $oRange.Text.Anchor()
	EndIf

	$oResults = $oDoc.findAll($oSrchDescript)
	If Not IsObj($oResults) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($oResults.getCount() > 0) Then
		ReDim $aoResults[$oResults.getCount]

		For $i = 0 To $oResults.getCount() - 1
			$oText = $oDoc.Text()
			$oResult = $oResults.getByIndex($i)
			$oResultRegion = $oResult
			$oRangeRegion = $oRange

			If $oResult.Text.supportsService("com.sun.star.text.TextFrame") Then
				$oResultRegion = $oResult.TextFrame.getAnchor() ;If Result is in a TextFrame, convert its position to a range in the document
			ElseIf $oResult.Text.supportsService("com.sun.star.text.Footnote") Or $oResult.Text.supportsService("com.sun.star.text.Endnote") Then
				$oResultRegion = $oResult.Text.Anchor()
			EndIf

			If $oRange.Text.supportsService("com.sun.star.text.TextFrame") And $oResult.Text.supportsService("com.sun.star.text.TextFrame") Then
				If ($oDoc.Text.compareRegionEnds($oResultRegion, $oRangeAnchor) = 0) Then ; If both Range and Result are in a Text Frame, test if they are in the same one.
					$oResultRegion = $oResult ;If They are, then compare the regions of that text frame.
					$oRangeRegion = $oRangeAnchor
					$oText = $oRange.Text() ; Must use the corresponding Text Object for that TextFrame as Region Compare can only compare regions contained in the same Text Object region.
				EndIf
			ElseIf $oResult.Text.supportsService("com.sun.star.text.Footnote") Or $oResult.Text.supportsService("com.sun.star.text.Endnote") And _
					$oRange.Text.supportsService("com.sun.star.text.Footnote") Or $oRange.Text.supportsService("com.sun.star.text.Endnote") Then
				If ($oDoc.Text.compareRegionEnds($oResultRegion, $oRangeAnchor) = 0) Then ; If both Range and Result are in a Text Frame, test if they are in the same one.
					$oResultRegion = $oResult ;If They are, then compare the regions of that text frame.
					$oRangeRegion = $oRangeAnchor
					$oText = $oRange.Text() ; Must use the corresponding Text Object for that Foot/Endnote as Region Compare can only compare regions contained in the same Text Object region.
				EndIf
			EndIf

			If ($oText.compareRegionEnds($oResultRegion, $oRangeRegion) >= 0) And ($oText.compareRegionStarts($oRangeRegion, $oResultRegion) >= 0) Then
				$aoResults[$iCount] = $oResult
				$iCount += 1
			Else
				$oResult = Null
			EndIf

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		ReDim $aoResults[$iCount]
	EndIf

	Return (UBound($aoResults) > 0) ? SetError($__LOW_STATUS_SUCCESS, UBound($aoResults), $aoResults) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocFindAllInRange

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocFindNext
; Description ...: Find a Search String in a Document once or one at a time.
; Syntax ........: _LOWriter_DocFindNext(Byref $oDoc, Byref $oSrchDescript, $sSearchString, Byref $atFindFormat[, $oRange = Null[, $oLastFind = Null[, $bExhaustive = False]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $sSearchString       - a string value. A String of text or a regular expression to search for.
;                  $atFindFormat        - [in/out] an array of structs. Set to an empty array to skip. An Array of Formatting
;				   +						properties to search for, either by value or simply by existence, depending on the
;				   +						current setting of "Value Search".  Array will not be modified.
;                  $oRange              - [optional] an object. Default is Null. A Range, such as a cursor with Data selected, to
;				   +						perform the search within. If Null, the entire document is searched.
;                  $oLastFind           - [optional] an object. Default is Null. The last returned Object by a previous call to
;				   +						this function to begin the search from, if set to Null, the search begins at the
;				   +						start of the Document or selection, depending on if a Range is provided.
;                  $bExhaustive         - [optional] a boolean value. Default is False. If True, tests whether every result found
;				   +						in a document is contained in the selection or not. See remarks.
; Return values .: Success: Object or 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSrchDescript not a Search Descriptor Object.
;				   @Error 1 @Extended 4 Return 0 = $sSearchString not a String.
;				   @Error 1 @Extended 5 Return 0 = $atFindFormat not an Array.
;				   @Error 1 @Extended 6 Return 0 = First element in $atFindFormat not an Object.
;				   @Error 1 @Extended 7 Return 0 = $oRange not set to Null and not an Object.
;				   @Error 1 @Extended 8 Return 0 = $oRange has no data selected.
;				   @Error 1 @Extended 9 Return 0 = $oLastFind not an Object and not set to Null, or failed to retrieve
;				   +									starting position from $oRange.
;				   @Error 1 @Extended 10 Return 0 = $oLastFind incorrect Object type.
;				   @Error 1 @Extended 11 Return 0 = $bExhaustive not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Search was successful but found no matches.
;				   @Error 0 @Extended 1 Return Object = Success. Search was successful, returning the resulting Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: When a search is performed inside of a selection, the search may miss any footnotes/ Endnotes/ Frames
;					contained in that selection as the text of these are counted as being located at the very end/beginning of
;					a Document, thus if you are searching in the center of a document, the search will begin in the center,
;					reach the end of the selection, and stop, never reaching the foot/EndNotes etc. If $bExhaustive is set to
;					True, the search continues until the whole document has been searched, but be warned, if the search has many
;					hits, this could slow the search considerably. There is no use setting this to True in a full document
;					search.
; Related .......: _LOWriter_SearchDescriptorCreate, _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange,
;					_LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange, _LOWriter_FindFormatModifyAlignment,
;					_LOWriter_FindFormatModifyEffects, _LOWriter_FindFormatModifyFont, _LOWriter_FindFormatModifyHyphenation,
;					_LOWriter_FindFormatModifyIndent, _LOWriter_FindFormatModifyOverline, _LOWriter_FindFormatModifyPageBreak,
;					_LOWriter_FindFormatModifyPosition, _LOWriter_FindFormatModifyRotateScaleSpace,
;					_LOWriter_FindFormatModifySpacing, _LOWriter_FindFormatModifyStrikeout,
;					_LOWriter_FindFormatModifyTxtFlowOpt, _LOWriter_FindFormatModifyUnderline.
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocFindNext(ByRef $oDoc, ByRef $oSrchDescript, $sSearchString, ByRef $atFindFormat, $oRange = Null, $oLastFind = Null, $bExhaustive = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oResult, $oRangeRegion, $oResultRegion, $oText, $oFindRange

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sSearchString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsArray($atFindFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	If (UBound($atFindFormat) > 0) And Not IsObj($atFindFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	$oSrchDescript.setSearchAttributes($atFindFormat)

	If ($oRange <> Null) And Not IsObj($oRange) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	If ($oRange = Null) Then
		$oRange = $oDoc.getText.createTextCursor()
		$oRange.gotoStart(False)
		$oRange.gotoEnd(True)
	EndIf

	If ($oRange.IsCollapsed()) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)


	If ($oLastFind = Null) Then ;If Last find is not set, then set FindRange to Range beginnign or end, depending on SearchBackwards value.
		$oFindRange = ($oSrchDescript.SearchBackwards() = False) ? $oRange.Start() : $oRange.End()
	Else ;If Last find is set, set search start for beginning or end of last result, depending SearchBackwards value.
		If Not IsObj($oLastFind) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not ($oLastFind.supportsService("com.sun.star.text.TextCursor")) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		;If Search Backwards is False, then retrieve the end of the last result's range, else get the Start.
		$oFindRange = ($oSrchDescript.SearchBackwards() = False) ? $oLastFind.End() : $oLastFind.Start()
	EndIf

	If Not IsBool($bExhaustive) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)

	$oSrchDescript.SearchString = $sSearchString

	$oResult = $oDoc.findNext($oFindRange, $oSrchDescript)

	While IsObj($oResult)

		If IsObj($oResult) Then ; If there is a result, test to see if the result is past the selected area.

			$oRangeRegion = $oRange
			$oResultRegion = $oResult
			$oText = $oDoc.Text

			If $oRange.Text.supportsService("com.sun.star.text.TextFrame") Then
				$oRangeRegion = $oRange.TextFrame.getAnchor() ;If Range is in a TextFrame, convert its position to a range in the document
			ElseIf $oRange.Text.supportsService("com.sun.star.text.Footnote") Or $oRange.Text.supportsService("com.sun.star.text.Endnote") Then
				$oRangeRegion = $oRange.Text.Anchor()
			EndIf

			If $oResult.Text.supportsService("com.sun.star.text.TextFrame") Then
				$oResultRegion = $oResult.TextFrame.getAnchor() ;If Result is in a TextFrame, convert its position to a range in the document
			ElseIf $oResult.Text.supportsService("com.sun.star.text.Footnote") Or $oResult.Text.supportsService("com.sun.star.text.Endnote") Then
				$oResultRegion = $oResult.Text.Anchor()
			EndIf

			If $oRange.Text.supportsService("com.sun.star.text.TextFrame") And $oResult.Text.supportsService("com.sun.star.text.TextFrame") Then
				If ($oDoc.Text.compareRegionEnds($oResultRegion, $oRangeRegion) = 0) Then ; If both Range and Result are in a Text Frame, test if they are in the same one.
					$oResultRegion = $oResult ;If They are, then compare the regions of that text frame.
					$oRangeRegion = $oRange
					$oText = $oRange.Text() ; Must use the corresponding Text Object for that TextFrame as Region Compare can only compare regions contained in the same Text Object region.
				EndIf
			ElseIf $oResult.Text.supportsService("com.sun.star.text.Footnote") Or $oResult.Text.supportsService("com.sun.star.text.Endnote") And _
					$oRange.Text.supportsService("com.sun.star.text.Footnote") Or $oRange.Text.supportsService("com.sun.star.text.Endnote") Then
				If ($oDoc.Text.compareRegionEnds($oResultRegion, $oRangeRegion) = 0) Then ; If both Range and Result are in a Text Frame, test if they are in the same one.
					$oResultRegion = $oResult ;If They are, then compare the regions of that text frame.
					$oRangeRegion = $oRange
					$oText = $oRange.Text() ; Must use the corresponding Text Object for that Foot/Endnote as Region Compare can only compare regions contained in the same Text Object region.
				EndIf
			EndIf

			If ($oText.compareRegionEnds($oResultRegion, $oRangeRegion) = -1) Then ;If Compare = -1, result is past range.
				If ($bExhaustive = False) Then
					$oResult = Null ;If Result is past the selection set Result to Null, but only if not doing an exhaustive search.
					ExitLoop
				Else ;If $bExhaustive is True, then update the find range.
					$oFindRange = $oResult.End()
				EndIf

			Else ;If Result is within range, exit While loop.
				ExitLoop
			EndIf
		EndIf

		$oResult = $oDoc.findNext($oFindRange, $oSrchDescript)

	WEnd

	Return (IsObj($oResult)) ? SetError($__LOW_STATUS_SUCCESS, 1, $oResult) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocFindNext

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocFooterGetTextCursor
; Description ...: Create a Text cursor in a Page Style footer for text related functions.
; Syntax ........: _LOWriter_DocFooterGetTextCursor(Byref $oPageStyle[, $bFooter = False[, $bFirstPage = False[, $bLeftPage = False[, $bRightPage = False]]]])
; Parameters ....: $oPageStyle          - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $bFooter             - [optional] a boolean value. Default is False. If True, creates a text cursor for the
;				   +						page Footer. See Remarks.
;                  $bFirstPage          - [optional] a boolean value. Default is False. If True, creates a text cursor for the
;				   +						First page Footer. See Remarks.
;                  $bLeftPage           - [optional] a boolean value. Default is False. If True, creates a text cursor for Left
;				   +						page Footers. See Remarks.
;                  $bRightPage          - [optional] a boolean value. Default is False. If True, creates a text cursor for right
;				   +						page Footers. See Remarks.
; Return values .: Success: Object or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bFooter not a Boolean value.
;				   @Error 1 @Extended 3 Return 0 = $bFirstPage not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $bLeftPage not a Boolean value.
;				   @Error 1 @Extended 5 Return 0 = $bRightPage not a Boolean value.
;				   @Error 1 @Extended 6 Return 0 = No parameters set to True.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object or Array = Success. See Remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  If more than one parameter is set to true, an array is returned with the requested objects in the order that
;					the True parameters are listed. Else the requested object is returned.
;					Note: If same content on left and right and first pages is active for the requested page style, you only
;					need to use the $bFooter parameter, the others are only for when same content on first page or same content
;					on left and right pages is deactivated.
; Related .......: _LOWriter_PageStyleGetObj, _LOWriter_PageStyleCreate, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocFooterGetTextCursor(ByRef $oPageStyle, $bFooter = False, $bFirstPage = False, $bLeftPage = False, $bRightPage = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aoReturn[1]
	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bFooter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bFirstPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bLeftPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bRightPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($bFooter = False) And ($bFirstPage = False) And ($bLeftPage = False) And ($bRightPage = False) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	If $bFooter Then $aoReturn[0] = $oPageStyle.FooterText.createTextCursor()

	If $bFirstPage Then
		If IsObj($aoReturn[0]) Then ReDim $aoReturn[2]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.FooterTextFirst.createTextCursor()
	EndIf

	If $bLeftPage Then
		If IsObj($aoReturn[UBound($aoReturn) - 1]) Then ReDim $aoReturn[UBound($aoReturn) + 1]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.FooterTextLeft.createTextCursor()
	EndIf

	If $bRightPage Then
		If IsObj($aoReturn[UBound($aoReturn) - 1]) Then ReDim $aoReturn[UBound($aoReturn) + 1]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.FooterTextRight.createTextCursor()
	EndIf

	$vReturn = (UBound($aoReturn) = 1) ? $aoReturn[0] : $aoReturn ; If Array contains only one element, return it only outside of the array.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $vReturn)
EndFunc   ;==>_LOWriter_DocFooterGetTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGenProp
; Description ...: Set, Retrieve, or reset a Document's General Properties.
; Syntax ........: _LOWriter_DocGenProp(Byref $oDoc[, $sNewAuthor = Null[, $iRevisions = Null[, $iEditDuration = Null[, $bApplyUserData = Null[, $bResetUserData = False]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sNewAuthor          - [optional] a string value. Default is Null. The new author of the document, can be set
;				   +						separately, but must be set to a string if $bResetUserData is set to True.
;                  $iRevisions          - [optional] an integer value. Default is Null. How often the document was edited and
;				   +						saved.
;                  $iEditDuration       - [optional] an integer value. Default is Null. The net time of editing the document (in
;				   +						seconds).
;                  $bApplyUserData      - [optional] a boolean value. Default is Null. If True, the user-specific settings saved
;				   +						within a document will be loaded with the document.
;                  $bResetUserData      - [optional] a boolean value. Default is False. Clears the document properties, such
;				   +						that it appears the document has just been created. Resets several attributes at
;				   +						once, as follows: Author is set to $sNewAuthor parameter, ($sNewAuthor MUST be set
;				   +						to a string.) CreationDate is set to the current date and time; ModifiedBy is
;				   +						cleared; ModificationDate is cleared; PrintedBy is cleared; PrintDate is cleared;
;				   +						EditingDuration is cleared; EditingCycles is set to 1.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sNewAuthor not a String and $bResetUserData set to True.
;				   @Error 1 @Extended 3 Return 0 = $sNewAuthor not a String.
;				   @Error 1 @Extended 4 Return 0 = $iRevisions not an integer..
;				   @Error 1 @Extended 5 Return 0 = $iEditDuration not an integer.
;				   @Error 1 @Extended 5 Return 0 = $bApplyUserData not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Document Settings Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,  8
;				   |								1 = Error setting  $sNewAuthor
;				   |								2 = Error setting $iRevisions
;				   |								4 = Error setting $iEditDuration
;				   |								8 = Error setting $bApplyUserData
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Document Properties were successfully Reset.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters,
;				   +								except $bResetUserData, as it is not a setting.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGenProp(ByRef $oDoc, $sNewAuthor = Null, $iRevisions = Null, $iEditDuration = Null, $bApplyUserData = Null, $bResetUserData = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp, $oSettings
	Local $iError = 0
	Local $avGenProp[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oSettings = $oDoc.createInstance("com.sun.star.text.DocumentSettings")
	If Not IsObj($oSettings) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If ($bResetUserData = True) Then
		If Not IsString($sNewAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.resetUserData($sNewAuthor)
		Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
	EndIf

	If __LOWriter_VarsAreNull($sNewAuthor, $iRevisions, $iEditDuration, $bApplyUserData) Then
		__LOWriter_ArrayFill($avGenProp, $oDocProp.Author(), $oDocProp.EditingCycles(), $oDocProp.EditingDuration(), $oSettings.getPropertyValue("ApplyUserData"))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGenProp)
	EndIf

	If ($sNewAuthor <> Null) Then
		If Not IsString($sNewAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocProp.Author = $sNewAuthor
		$iError = ($oDocProp.Author() = $sNewAuthor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRevisions <> Null) Then
		If Not IsInt($iRevisions) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDocProp.EditingCycles = $iRevisions
		$iError = ($oDocProp.EditingCycles() = $iRevisions) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iEditDuration <> Null) Then
		If Not IsInt($iEditDuration) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocProp.EditingDuration = $iEditDuration
		$iError = ($oDocProp.EditingDuration() = $iEditDuration) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bApplyUserData <> Null) Then
		If Not IsBool($bApplyUserData) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSettings.setPropertyValue("ApplyUserData", $bApplyUserData)
		$iError = ($oSettings.getPropertyValue("ApplyUserData") = $bApplyUserData) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocGenProp

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGenPropCreation
; Description ...: Set or Retrieve a Document's General Creation Properties.
; Syntax ........: _LOWriter_DocGenPropCreation(Byref $oDoc[, $sAuthor = Null[, $tDateStruct = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sAuthor             - [optional] a string value. Default is Null. The initial author of the document.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display, created previously
;				   +						by _LOWriter_DateStructCreate.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sAuthor not a String.
;				   @Error 1 @Extended 3 Return 0 = $tDateStruct not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sAuthor
;				   |								2 = Error setting $tDateStruct
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DateStructCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGenPropCreation(ByRef $oDoc, $sAuthor = Null, $tDateStruct = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp
	Local $iError = 0
	Local $avCreate[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sAuthor, $tDateStruct) Then
		__LOWriter_ArrayFill($avCreate, $oDocProp.Author(), $oDocProp.CreationDate())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avCreate)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.Author = $sAuthor
		$iError = ($oDocProp.Author() = $sAuthor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocProp.CreationDate = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oDocProp.CreationDate(), $tDateStruct)) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocGenPropCreation

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGenPropModification
; Description ...: Set or Retrieve a Document's General Modification Properties.
; Syntax ........: _LOWriter_DocGenPropModification(Byref $oDoc[, $sModifiedBy = Null[, $tDateStruct = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sModifiedBy         - [optional] a string value. Default is Null. Set the name of the last user who modified
;				   +						the document.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display, created previously
;				   +						by _LOWriter_DateStructCreate.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $tDateStruct not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sModifiedBy
;				   |								2 = Error setting $tDateStruct
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DateStructCreate, _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGenPropModification(ByRef $oDoc, $sModifiedBy = Null, $tDateStruct = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp
	Local $iError = 0
	Local $avMod[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sModifiedBy, $tDateStruct) Then
		__LOWriter_ArrayFill($avMod, $oDocProp.ModifiedBy(), $oDocProp.ModificationDate())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avMod)
	EndIf

	If ($sModifiedBy <> Null) Then
		If Not IsString($sModifiedBy) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.ModifiedBy = $sModifiedBy
		$iError = ($oDocProp.ModifiedBy() = $sModifiedBy) ? $iError : BitOR($iError, 1)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocProp.ModificationDate = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oDocProp.ModificationDate(), $tDateStruct)) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocGenPropModification

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGenPropPrint
; Description ...: Set or Retrieve a Document's General Printed By Properties.
; Syntax ........: _LOWriter_DocGenPropPrint(Byref $oDoc[, $sPrintedBy = Null[, $tDateStruct = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sPrintedBy          - [optional] a string value. Default is Null. The name of the person who most recently
;				   +						printed the document.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display, created previously
;				   +						by _LOWriter_DateStructCreate.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sPrintedBy not a String.
;				   @Error 1 @Extended 3 Return 0 = $tDateStruct not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sPrintedBy
;				   |								2 = Error setting $tDateStruct
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DateStructCreate, _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGenPropPrint(ByRef $oDoc, $sPrintedBy = Null, $tDateStruct = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp
	Local $iError = 0
	Local $avPrint[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sPrintedBy, $tDateStruct) Then
		__LOWriter_ArrayFill($avPrint, $oDocProp.PrintedBy(), $oDocProp.PrintDate())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPrint)
	EndIf

	If ($sPrintedBy <> Null) Then
		If Not IsString($sPrintedBy) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.PrintedBy = $sPrintedBy
		$iError = ($oDocProp.PrintedBy() = $sPrintedBy) ? $iError : BitOR($iError, 1)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocProp.PrintDate = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oDocProp.PrintDate(), $tDateStruct)) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocGenPropPrint

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGenPropTemplate
; Description ...: Set or Retrieve a Document's General Template Properties.
; Syntax ........: _LOWriter_DocGenPropTemplate(Byref $oDoc[, $sTemplateName = Null[, $sTemplateURL = Null[, $tDateStruct = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sTemplateName       - [optional] a string value. Default is Null. The name of the template from which the
;				   +						document was created. The value is an empty string if the document was not created
;				   +						from a template or if it was detached from the template
;                  $sTemplateURL        - [optional] a string value. Default is Null. The URL of the template from which the
;				   +						document was created. The value is an empty string if the document was not created
;				   +						from a template or if it was detached from the template.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display, created previously
;				   +						by _LOWriter_DateStructCreate.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sTemplateName not a String.
;				   @Error 1 @Extended 3 Return 0 = $sTemplateURL  not a String.
;				   @Error 1 @Extended 4 Return 0 = $tDateStruct not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Document Properties Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error converting Computer path to Libre Office URL.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sTemplateName
;				   |								2 = Error setting $sTemplateURL
;				   |								4 = Error setting $tDateStruct
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DateStructCreate, _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGenPropTemplate(ByRef $oDoc, $sTemplateName = Null, $sTemplateURL = Null, $tDateStruct = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocProp
	Local $iError = 0
	Local $avTemplate[3]
	_LOWriter_DateStructModify

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDocProp = $oDoc.DocumentProperties()
	If Not IsObj($oDocProp) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sTemplateName, $sTemplateURL, $tDateStruct) Then
		__LOWriter_ArrayFill($avTemplate, $oDocProp.TemplateName(), _LOWriter_PathConvert($oDocProp.TemplateURL(), $LOW_PATHCONV_PCPATH_RETURN), _
				$oDocProp.TemplateDate())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avTemplate)
	EndIf

	If ($sTemplateName <> Null) Then
		If Not IsString($sTemplateName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocProp.TemplateName = $sTemplateName
		$iError = ($oDocProp.TemplateName() = $sTemplateName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sTemplateURL <> Null) Then
		If Not IsString($sTemplateURL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$sTemplateURL = _LOWriter_PathConvert($sTemplateURL, $LOW_PATHCONV_OFFICE_RETURN)
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$oDocProp.TemplateURL = $sTemplateURL
		$iError = ($oDocProp.TemplateURL() = $sTemplateURL) ? $iError : BitOR($iError, 2)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDocProp.TemplateDate = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oDocProp.TemplateDate(), $tDateStruct)) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocGenPropTemplate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGetCounts
; Description ...: Returns the various counts contained in a document, such a paragraph, word etc.
; Syntax ........: _LOWriter_DocGetCounts(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object.  A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1 dimension array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Document Statistics Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Array = Success. A 1 dimension, 0 based, 9 row Array of integers, in the order
;				   +			described in remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Returns a 1 dimension array with the following counts in this order: Page count; Line Count; Paragraph Count;
;					Word Count; Character Count; NonWhiteSpace Character Count; Table Count; Image Count; Object Count.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGetCounts(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aiCounts[9], $avDocStats

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	__LOWriter_ArrayFill($aiCounts, $oDoc.CurrentController.PageCount(), $oDoc.CurrentController.LineCount(), $oDoc.ParagraphCount(), _
			$oDoc.WordCount(), $oDoc.CharacterCount())

	$avDocStats = $oDoc.DocumentProperties.DocumentStatistics()
	If Not IsArray($avDocStats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	For $i = 0 To UBound($avDocStats) - 1
		If ($avDocStats[$i].Name() = "NonWhitespaceCharacterCount") Then $aiCounts[5] = $avDocStats[$i].Value()
		If ($avDocStats[$i].Name() = "TableCount") Then $aiCounts[6] = $avDocStats[$i].Value()
		If ($avDocStats[$i].Name() = "ImageCount") Then $aiCounts[7] = $avDocStats[$i].Value()
		If ($avDocStats[$i].Name() = "ObjectCount") Then $aiCounts[8] = $avDocStats[$i].Value()
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next

	Return SetError($__LOW_STATUS_SUCCESS, 0, $aiCounts)
EndFunc   ;==>_LOWriter_DocGetCounts

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGetName
; Description ...: Retrieve the document's name.
; Syntax ........: _LOWriter_DocGetName(Byref $oDoc[, $bReturnFull = False])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bReturnFull         - [optional] a boolean value. Default is False. If True, the full window title is
;				   +						returned, such as is used by Autoit window related functions.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bReturnFull not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returns the document's current Name/Title
;				   @Error 0 @Extended 1 Return String = Success. Returns the document's current Window Title, which includes
;				   +	the document name and usually: "-LibreOffice Writer".
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGetName(ByRef $oDoc, $bReturnFull = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bReturnFull) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$sName = ($bReturnFull = True) ? $oDoc.CurrentController.Frame.Title() : $oDoc.Title()

	Return ($bReturnFull = True) ? SetError($__LOW_STATUS_SUCCESS, 1, $sName) : SetError($__LOW_STATUS_SUCCESS, 0, $sName)
EndFunc   ;==>_LOWriter_DocGetName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGetPath
; Description ...: Returns a Document's current save path.
; Syntax ........: _LOWriter_DocGetPath(Byref $oDoc[, $bReturnLibreURL = False])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bReturnLibreURL     - [optional] a boolean value. Default is False. If True, returns a path in Libre Office
;				   +						URL format, else false returns a regular Windows path.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bReturnLibreURL not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = Document has no save path.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error converting Libre URL to Computer path format.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returns the P.C. path to the current document's save path.
;				   @Error 0 @Extended 1 Return String = Success. Returns the Libre Office URL to the current document's save
;				   +	path.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_PathConvert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGetPath(ByRef $oDoc, $bReturnLibreURL = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sPath

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bReturnLibreURL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oDoc.hasLocation() Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If ($bReturnLibreURL = True) Then
		$sPath = $oDoc.URL()
	Else
		$sPath = $oDoc.URL()
		$sPath = _LOWriter_PathConvert($sPath, $LOW_PATHCONV_PCPATH_RETURN)
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf

	Return ($bReturnLibreURL = True) ? SetError($__LOW_STATUS_SUCCESS, 1, $sPath) : SetError($__LOW_STATUS_SUCCESS, 0, $sPath)
EndFunc   ;==>_LOWriter_DocGetPath

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGetString
; Description ...: Retrieve the string of text currently selected or contained in a paragraph object.
; Syntax ........: _LOWriter_DocGetString(Byref $oObj)
; Parameters ....: $oObj             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions with Data selected, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
; Return values .:  Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj doesn't support Paragraph Properties service.
;				   @Error 1 @Extended 3 Return 0 = $oObj is a TableCursor. Can only use View Cursor or Text Cursor.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Cursor type.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. The selected text in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Libre Office documentation states that when used in Libre Basic, GetString is limited to 64kb's in size.
;					I do not know if the same limitation applies to any outside use of GetString (such as through Autoit). Also,
;					If there are multiple selections, the returned value will be an empty string ("").
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGetString(ByRef $oObj)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oObj.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $oObj.supportsService("com.sun.star.text.TextCursor") Or $oObj.supportsService("com.sun.star.text.TextViewCursor") Then
		Local $iCursorType = __LOWriter_Internal_CursorGetType($oObj)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	EndIf
	Return SetError($__LOW_STATUS_SUCCESS, 0, $oObj.getString())
EndFunc   ;==>_LOWriter_DocGetString

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocGetViewCursor
; Description ...: Retrieve the ViewCursor Object from a Document.
; Syntax ........: _LOWriter_DocGetViewCursor(Byref $oDoc)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve ViewCursor Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return $oViewCursor Object = Success. The Object for the Document's View Cursor is
;				   +											 returned for use in other Cursor related functions.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocGetViewCursor(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oViewCursor

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oViewCursor = $oDoc.CurrentController.getViewCursor()
	Return (IsObj($oViewCursor)) ? SetError($__LOW_STATUS_SUCCESS, 0, $oViewCursor) : SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;Failed to Create ViewCursor
EndFunc   ;==>_LOWriter_DocGetViewCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocHasFrameName
; Description ...: Check if a Document contains a Frame with the specified name.
; Syntax ........: _LOWriter_DocHasFrameName(Byref $oDoc, $sFrameName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFrameName          - a string value. The Frame name to search for.
; Return values .:  Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFrameName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Frames Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shapes Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return False = Success. Search was successful, no Frames found matching $sFrameName.
;				   @Error 0 @Extended 1 Return True = Success. Search was successful, Frame found matching $sFrameName.
;				   @Error 0 @Extended 2 Return True = Success. Search was successful, Frame found matching $sFrameName listed
;				   +												as a shape.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Some document types, such as docx list frames as Shapes instead of TextFrames, so this function searches
;					both.
; Related .......: _LOWriter_FrameDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocHasFrameName(ByRef $oDoc, $sFrameName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFrames, $oShapes

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFrameName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFrames = $oDoc.TextFrames()
	If Not IsObj($oFrames) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($oFrames.hasByName($sFrameName)) Then Return SetError($__LOW_STATUS_SUCCESS, 1, True)

	;If No results, then search Shapes.
	$oShapes = $oDoc.DrawPage()
	If Not IsObj($oShapes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If $oShapes.hasElements() Then
		For $i = 0 To $oShapes.getCount() - 1
			If ($oShapes.getByIndex($i).Name() = $sFrameName) Then
				If ($oShapes.getByIndex($i).supportsService("com.sun.star.drawing.Text")) And _
						($oShapes.getByIndex($i).Text.ImplementationName() = "SwXTextFrame") And Not _
						$oShapes.getByIndex($i).getPropertySetInfo().hasPropertyByName("ActualSize") Then Return SetError($__LOW_STATUS_SUCCESS, 2, True)
			EndIf

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, False) ;No matches
EndFunc   ;==>_LOWriter_DocHasFrameName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocHasPath
; Description ...: Returns whether a document has been saved to a location already or not.
; Syntax ........: _LOWriter_DocHasPath(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. Returns True if the document has a save location. Else False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocHasPath(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.hasLocation())
EndFunc   ;==>_LOWriter_DocHasPath

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocHasTableName
; Description ...: Check if a Document contains a Table with the specified name.
; Syntax ........: _LOWriter_DocHasTableName(Byref $oDoc, $sTableName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sTableName          - a string value. The Table name to search for.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sTableName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Tables Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return False = Success. Search was successful, no tables found matching $sTableName.
;				   @Error 0 @Extended 1 Return True = Success. Search was successful, table found matching $sTableName.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocHasTableName(ByRef $oDoc, $sTableName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTables

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sTableName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTables = $oDoc.TextTables()
	If Not IsObj($oTables) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($oTables.hasByName($sTableName)) Then Return SetError($__LOW_STATUS_SUCCESS, 1, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False) ;No matches
EndFunc   ;==>_LOWriter_DocHasTableName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocHeaderGetTextCursor
; Description ...: Create a Text cursor in a Page Style header for text related functions.
; Syntax ........: _LOWriter_DocHeaderGetTextCursor(Byref $oPageStyle[, $bHeader = False[, $bFirstPage = False[, $bLeftPage = False[, $bRightPage = False]]]])
; Parameters ....: $oPageStyle          - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $bHeader             - [optional] a boolean value. Default is False. If True, creates a text cursor for the
;				   +						page header. See Remarks.
;                  $bFirstPage          - [optional] a boolean value. Default is False. If True, creates a text cursor for the
;				   +						First page header. See Remarks.
;                  $bLeftPage           - [optional] a boolean value. Default is False. If True, creates a text cursor for Left
;				   +						page headers. See Remarks.
;                  $bRightPage          - [optional] a boolean value. Default is False. If True, creates a text cursor for right
;				   +						page headers. See Remarks.
; Return values .: Success: Object or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bHeader not a Boolean value.
;				   @Error 1 @Extended 3 Return 0 = $bFirstPage not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $bLeftPage not a Boolean value.
;				   @Error 1 @Extended 5 Return 0 = $bRightPage not a Boolean value.
;				   @Error 1 @Extended 6 Return 0 = No parameters set to True.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object or Array = Success. See Remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If more than one parameter is set to true, an array is returned with the requested objects in the order that
;					the True parameters are listed. Else the requested object is returned.
;					Note: If same content on left and right and first pages is active for the requested page style, you only
;					need to use the $bHeader parameter, the others are only for when same content on first page or same content
;					on left and right pages is deactivated.
; Related .......: _LOWriter_PageStyleGetObj, _LOWriter_PageStyleCreate, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocHeaderGetTextCursor(ByRef $oPageStyle, $bHeader = False, $bFirstPage = False, $bLeftPage = False, $bRightPage = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aoReturn[1]
	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bHeader) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bFirstPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bLeftPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bRightPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($bHeader = False) And ($bFirstPage = False) And ($bLeftPage = False) And ($bRightPage = False) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	If $bHeader Then $aoReturn[0] = $oPageStyle.HeaderText.createTextCursor()

	If $bFirstPage Then
		If IsObj($aoReturn[0]) Then ReDim $aoReturn[2]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.HeaderTextFirst.createTextCursor()
	EndIf

	If $bLeftPage Then
		If IsObj($aoReturn[UBound($aoReturn) - 1]) Then ReDim $aoReturn[UBound($aoReturn) + 1]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.HeaderTextLeft.createTextCursor()
	EndIf

	If $bRightPage Then
		If IsObj($aoReturn[UBound($aoReturn) - 1]) Then ReDim $aoReturn[UBound($aoReturn) + 1]
		$aoReturn[UBound($aoReturn) - 1] = $oPageStyle.HeaderTextRight.createTextCursor()
	EndIf

	$vReturn = (UBound($aoReturn) = 1) ? $aoReturn[0] : $aoReturn ; If Array contains only one element, return it only outside of the array.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $vReturn)
EndFunc   ;==>_LOWriter_DocHeaderGetTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocHyperlinkInsert
; Description ...: Insert a hyperlink into the specified document and a cursor location or other.
; Syntax ........: _LOWriter_DocHyperlinkInsert(Byref $oDoc, Byref $oCursor, $sLinkText, $sLinkAddress[, $bInsertAtViewCursor = False[, $bOverwrite = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. See Remarks.
;                  $sLinkText           - a string value. Link text you want displayed (Insert the URL here too if you want the
;				   +						Link inserted raw.)
;                  $sLinkAddress        - a string value. A URL/Link.
;                  $bInsertAtViewCursor - [optional] a boolean value. Default is False. See Remarks
;                  $bOverwrite          - [optional] a boolean value. Default is False. If true, overwrites any data selected
;				   +						by the $oCursor.
; Return values .:  Success: 1.
;				    Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				    --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor variable not an Object, and is not set to Default keyword.
;				   @Error 1 @Extended 3 Return 0 = $sLinkText not a String variable type
;				   @Error 1 @Extended 4 Return 0 = $sLinkAddress not a String variable type
;				   @Error 1 @Extended 5 Return 0 = $bInsertAtViewCursor not a Boolean (True/False) variable type.
;				   @Error 1 @Extended 6 Return 0 = $oCursor is set to an Object variable, and $bInsertAtViewCursor is set
;				   +		to True. Change $oCursor to Default or set $bInsertAtViewCursor to False/ do not declare it.
;				   @Error 1 @Extended 7 Return 0 = $oCursor variable is a TableCursor, and cannot be used.
;				    --Initialiazation Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create Cursor Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to create Text Object.
;				    --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve Cursor type.
;				   @Error 3 @Extended 2 Return 0 = Current ViewCursor is in unknown data type or failed detecting what data
;				   +		type.
;				    --Success--
;				   @Error 0 @Extended 1 Return 1 = Success, hyperlink was successfully inserted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: You may call this function with an already existent cursor object, returned from a previous function, this
;					will place the Link at the current TextCursor's position. You can also set $oCursor to Default keyword, and
;					set $bInsertAtViewCursor to True. (More on View cursors and Text cursors later.) This will insert the link
;					at the current ViewCursor position. Or you can set $oCursor to Default, and leave $bInsertAtViewCursor
;					undeclared which will insert the Link at the very end of the document.
;				    	There are two types of cursors in Word documents. The one you see, called the "ViewCursor", and the one
;					you do not see, called the "TextCursor". A "ViewCursor" is the blinking cursor you see when you are editing
;					a Word document, there is only one per document. A "TextCursor" on the other hand, is an invisible cursor
;					used for inserting text etc., into a Writer document. You can have multiple "TextCursors". If You set
;					$bInsertAtViewCursor to True, the Link will be inserted at the current ViewCursor in the document.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocHyperlinkInsert(ByRef $oDoc, ByRef $oCursor, $sLinkText, $sLinkAddress, $bInsertAtViewCursor = False, $bOverwrite = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oText, $oTextCursor
	Local $iCursorType = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) And ($oCursor <> Default) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sLinkText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sLinkAddress) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bInsertAtViewCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If IsObj($oCursor) And $bInsertAtViewCursor Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	If IsObj($oCursor) Or $bInsertAtViewCursor Then
		$iCursorType = (IsObj($oCursor)) ? __LOWriter_Internal_CursorGetType($oCursor) : 0
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)

		If $bInsertAtViewCursor Or ($iCursorType = $LOW_CURTYPE_VIEW_CURSOR) Then
			$oTextCursor = _LOWriter_DocCreateTextCursor($oDoc, False, True) ;create new Text cursor at ViewCursor
			If Not IsObj($oTextCursor) Or @error Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
		EndIf

		$oTextCursor = ($iCursorType = $LOW_CURTYPE_TEXT_CURSOR) ? $oCursor : $oTextCursor ; If already was a TextCursor transfer to $oTextCursor

		$oText = __LOWriter_CursorGetText($oDoc, $oTextCursor)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
		If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	Else
		$oText = $oDoc.getText
		If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		$oTextCursor = $oText.createTextCursor()
		If Not IsObj($oTextCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
		$oTextCursor.gotoEnd(False)
	EndIf

	$oText.insertString($oTextCursor, $sLinkText, False)
	With $oTextCursor
		.goLeft(StringLen($sLinkText), False)
		.goRight(StringLen($sLinkText), True)
		.HyperLinkURL = $sLinkAddress
		.collapseToEnd()
		.goRight(1, False)
	EndWith
	Return SetError($__LOW_STATUS_SUCCESS, 1, $oTextCursor)
EndFunc   ;==>_LOWriter_DocHyperlinkInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocInsertControlChar
; Description ...: Insert a control character at the cursor position.
; Syntax ........: _LOWriter_DocInsertControlChar(Byref $oDoc, Byref $oCursor, $iConChar[, $bOverwrite = False])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Text or View Cursor Object returned from any Cursor Object
;				   +						creation or retrieval functions.
;                  $iConChar            - an integer value. The control character to insert. See constants below.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If true, and the cursor object has text
;				   +						selected, it is overwritten, else the character is inserted to the left of the
;				   +						selection.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $iConChar not an Integer, less than 0 or higher than 5. See Constants below.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $oCursor is a TableCursor. Can only use View Cursor or Text Cursor.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Cursor type.
;				   @Error 3 @Extended 2 Return 0 = Error creating Text Cursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Control Character was successfully inserted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Control Char Constants: $LOW_CON_CHAR_PAR_BREAK(0), start a new paragraph.
;							$LOW_CON_CHAR_LINE_BREAK(1), start a new line in a paragraph.
;							$LOW_CON_CHAR_HARD_HYPHEN(2), equals a dash but prevents this position from being hyphenated.
;							$LOW_CON_CHAR_SOFT_HYPHEN(3), Define a preferred hyphenation point if the word must be split at the
;								end of a line.
;							$LOW_CON_CHAR_HARD_SPACE(4), Insert a space that prevents two words from splitting at a line break
;							$LOW_CON_CHAR_APPEND_PAR(5), appends a new paragraph.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocInsertControlChar(ByRef $oDoc, ByRef $oCursor, $iConChar, $bOverwrite = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType
	Local $oTextCursor = $oCursor

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not __LOWriter_IntIsBetween($iConChar, 0, 5) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iCursorType = $LOW_CURTYPE_VIEW_CURSOR) Then $oTextCursor = _LOWriter_DocCreateTextCursor($oDoc, False, True)

	If Not IsObj($oTextCursor) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	$oTextCursor.Text.insertControlCharacter($oTextCursor, $iConChar, $bOverwrite)
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocInsertControlChar

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocInsertString
; Description ...: Insert a string at a cursor position.
; Syntax ........: _LOWriter_DocInsertString(Byref $oDoc, Byref $oCursor, $sString[, $bOverwrite = False])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Text or View Cursor Object returned from any Cursor Object
;				   +						creation or retrieval functions.
;                  $sString             - a string value. A String to insert.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If true, and the cursor object has text
;				   +						selected, the selection is overwritten, else the string is inserted to the left of
;				   +						the selection. If there are multiple selections, the string is inserted to the left
;				   +						of the last selection, and none are overwritten.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sString not a string..
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $oCursor is a TableCursor. Can only use View Cursor or Text Cursor.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Cursor type.
;				   @Error 3 @Extended 2 Return 0 = Error creating Text Cursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. String was successfully inserted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocInsertString(ByRef $oDoc, ByRef $oCursor, $sString, $bOverwrite = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType
	Local $oTextCursor = $oCursor

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($iCursorType = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iCursorType = $LOW_CURTYPE_VIEW_CURSOR) Then $oTextCursor = _LOWriter_DocCreateTextCursor($oDoc, False, True)

	If Not IsObj($oTextCursor) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	$oTextCursor.Text.insertString($oTextCursor, $sString, $bOverwrite)
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocInsertString

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocIsActive
; Description ...: Tests if called document is the active document of other Libre windows.
; Syntax ........: _LOWriter_DocIsActive(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. Returns True if document is the currently active Libre
;				   +		window. See remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note, this does NOT test if the document is the current active window in Windows, it only tests if the
;					document is the current active document among other Libre Office documents.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocIsActive(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.CurrentController.Frame.isActive())
EndFunc   ;==>_LOWriter_DocIsActive

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocIsModified
; Description ...: Returns whether the document has been modified since being created or since the last save.
; Syntax ........: _LOWriter_DocIsModified(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. Returns True if the document has been modified since last
;				   +	being saved.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocIsModified(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.isModified())
EndFunc   ;==>_LOWriter_DocIsModified

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocIsReadOnly
; Description ...: Returns a boolean whether a document is currently set to ReadOnly.
; Syntax ........: _LOWriter_DocIsReadOnly(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. Returns True is document is currently Read Only, else False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Only documents that have been saved to a location, will ever be "ReadOnly".
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocIsReadOnly(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.isReadOnly())
EndFunc   ;==>_LOWriter_DocIsReadOnly

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocMaximize
; Description ...: Maximize or restore a document.
; Syntax ........: _LOWriter_DocMaximize(Byref $oDoc[, $bMaximize = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bMaximize           - [optional] a boolean value. Default is Null. If True, document window is maximized,
;				   +						else if false, document is restored to its previous size and location. If Null,
;				   +						returns a Boolean indicating if document is currently maximized (True).
; Return values .: Success: 1 or Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bMaximize not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Document was successfully maximized.
;				   @Error 0 @Extended 1 Return Boolean = Success. $bMaximize set to Null, returning boolean indicating if
;				   +	Document is currently maximized (True) or not (False).
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocMaximize(ByRef $oDoc, $bMaximize = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bMaximize = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.CurrentController.Frame.ContainerWindow.IsMaximized())

	If Not IsBool($bMaximize) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oDoc.CurrentController.Frame.ContainerWindow.IsMaximized = $bMaximize
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocMaximize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocMinimize
; Description ...: Minimize or restore a document.
; Syntax ........: _LOWriter_DocMinimize(Byref $oDoc[, $bMinimize = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bMinimize           - [optional] a boolean value. Default is Null. If True, document window is minimized,
;				   +						else if false, document is restored to its previous size and location. If Null,
;				   +						returns a Boolean indicating if document is currently minimized (True).
; Return values .: Success: 1 or Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bMinimize not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Document was successfully minimized.
;				   @Error 0 @Extended 1 Return Boolean = Success. $bMinimize set to Null, returning boolean indicating if
;				   +	Document is currently minimized (True) or not (False).
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocMinimize(ByRef $oDoc, $bMinimize = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bMinimize = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.CurrentController.Frame.ContainerWindow.IsMinimized())

	If Not IsBool($bMinimize) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oDoc.CurrentController.Frame.ContainerWindow.IsMinimized = $bMinimize
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocMinimize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocOpen
; Description ...: Open an existing Writer Document, returning its object identifier.
; Syntax ........: _LOWriter_DocOpen($sFilePath[, $bConnectIfOpen = True[, $bHidden = False[, $bReadOnly = False[, $sPassword = ""[, $bLoadAsTemplate = False[, $sFilterName = ""]]]]]])
; Parameters ....: $sFilePath           - a string value. Full path and filename of the file to be opened.
;                  $bConnectIfOpen      - [optional] a boolean value. Default is True(Connect). Whether to connect to the
;				   +						requested document if it is already open. Note: any parameters (Hidden, template
;				   +						etc., will not be applied when connecting)
;                  $bHidden             - [optional] a boolean value. Default is Null. If true, opens the document invisibly.
;                  $bReadOnly           - [optional] a boolean value. Default is Null. If true, opens the document as
;				   +						read-only.
;                  $sPassword           - [optional] a string value. Default is Null. The password that was used to read-protect
;				   +						the document, if any.
;                  $bLoadAsTemplate     - [optional] a boolean value. Default is Null. If true, opens the document as a
;				   +						Template, i.e. an untitled copy of the specified document is made instead of
;				   +						 modifying the original document.
;                  $sFilterName         - [optional] a string value. Default is Null. Name of a LibreOffice filter to use to load
;				   +					the specified document. LibreOffice automatically selects which to use by default.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $sFilePath not string, or file not found.
;				   @Error 1 @Extended 2 Return 0 = Error converting filepath to URL path.
;				   @Error 1 @Extended 3 Return 0 = $bConnectIfOpen not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bHidden not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bReadOnly not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sPassword not a string.
;				   @Error 1 @Extended 7 Return 0 = $bLoadAsTemplate not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $sFilterName not a string.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create ServiceManager Object
;				   @Error 2 @Extended 2 Return 0 = Failed to create Desktop Object
;				   @Error 2 @Extended 3 Return 0 = Failed opening or connecting to document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bHidden
;				   |								2 = Error setting $bReadOnly
;				   |								4 = Error setting $sPassword
;				   |								8 = Error setting $bLoadAsTemplate
;				   |								16 = Error setting $sFilterName
;				   --Success--
;				   @Error 0 @Extended 1 Return Object = Successfully connected to requested Document without requested
;				   +							parameters. Returning Document's Object.
;				   @Error 0 @Extended 2 Return Object = Successfully opened requested Document with requested parameters.
;				   +							Returning Document's Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocCreate, _LOWriter_DocClose, _LOWriter_DocConnect
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocOpen($sFilePath, $bConnectIfOpen = True, $bHidden = Null, $bReadOnly = Null, $sPassword = Null, $bLoadAsTemplate = Null, $sFilterName = Null)
	Local Const $iURLFrameCreate = 8 ;frame will be created if not found
	Local $iError = 0
	Local $oDoc, $oServiceManager, $oDesktop
	Local $aoProperties[0]
	Local $vProperty
	Local $sFileURL

	Local $oComError = ObjEvent("AutoIt.Error", "__LOWriter_InternalComErrorHandler")

	If Not IsString($sFilePath) Or Not FileExists($sFilePath) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$sFileURL = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_OFFICE_RETURN)
	If @error Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bConnectIfOpen) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oDesktop = $oServiceManager.createInstance("com.sun.star.frame.Desktop")
	If Not IsObj($oDesktop) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not __LOWriter_VarsAreNull($bHidden, $bReadOnly, $sPassword, $bLoadAsTemplate, $sFilterName) Then

		If ($bHidden <> Null) Then
			If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			$vProperty = __LOWriter_SetPropertyValue("Hidden", $bHidden)
			If @error Then $iError = BitOR($iError, 1)
			If Not BitAND($iError, 1) Then __LOWriter_AddTo1DArray($aoProperties, $vProperty)
		EndIf

		If ($bReadOnly <> Null) Then
			If Not IsBool($bReadOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			$vProperty = __LOWriter_SetPropertyValue("ReadOnly", $bReadOnly)
			If @error Then $iError = BitOR($iError, 2)
			If Not BitAND($iError, 2) Then __LOWriter_AddTo1DArray($aoProperties, $vProperty)
		EndIf

		If ($sPassword <> Null) Then
			If Not IsString($sPassword) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			$vProperty = __LOWriter_SetPropertyValue("Password", $sPassword)
			If @error Then $iError = BitOR($iError, 4)
			If Not BitAND($iError, 4) Then __LOWriter_AddTo1DArray($aoProperties, $vProperty)
		EndIf

		If ($bLoadAsTemplate <> Null) Then
			If Not IsBool($bLoadAsTemplate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			$vProperty = __LOWriter_SetPropertyValue("AsTemplate", $bLoadAsTemplate)
			If @error Then $iError = BitOR($iError, 8)
			If Not BitAND($iError, 8) Then __LOWriter_AddTo1DArray($aoProperties, $vProperty)
		EndIf

		If ($sFilterName <> Null) Then
			If Not IsString($sFilterName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
			$vProperty = __LOWriter_SetPropertyValue("FilterName", $sFilterName)
			If @error Then $iError = BitOR($iError, 16)
			If Not BitAND($iError, 16) Then __LOWriter_AddTo1DArray($aoProperties, $vProperty)
		EndIf

	EndIf

	$oDoc = $oDesktop.loadComponentFromURL($sFileURL, "_default", $iURLFrameCreate, $aoProperties)
	If StringInStr($oComError.description, """type detection failed""") And $bConnectIfOpen Then
		ReDim $aoProperties[0]
		$oDoc = $oDesktop.loadComponentFromURL($sFileURL, "_default", $iURLFrameCreate, $aoProperties)
		If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

		Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, $oDoc) : SetError($__LOW_STATUS_SUCCESS, 1, $oDoc)
	EndIf

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)
	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, $oDoc) : SetError($__LOW_STATUS_SUCCESS, 2, $oDoc)
EndFunc   ;==>_LOWriter_DocOpen

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPosAndSize
; Description ...: Reposition and resize a document window.
; Syntax ........: _LOWriter_DocPosAndSize(Byref $oDoc[, $iX = Null[, $iY = Null[, $iWidth = Null[, $iHeight = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iX                  - [optional] an integer value. Default is Null. The X coordinate of the window.
;                  $iY                  - [optional] an integer value. Default is Null. The Y coordinate of the window.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the window, in pixels(?).
;                  $iHeight             - [optional] an integer value. Default is Null. The height of the window, in pixels(?).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iX not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iY not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iHeight not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Position and Size Structure Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Position and Size Structure Object for error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting iX
;				   |								2 = Error setting $iY
;				   |								4 = Error setting $iWidth
;				   |								8 = Error setting $iHeight
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note, X & Y, on my computer at least, seem to go no lower than 8(X) and 30(Y), if you enter lower than this,
;						it will cause a "property setting Error". If you want more accurate functionality, use the "WinMove"
;						Autoit function.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPosAndSize(ByRef $oDoc, $iX = Null, $iY = Null, $iWidth = Null, $iHeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tWindowSize
	Local Const $iPosSize = 15 ; adjust both size and position.
	Local $iError = 0
	Local $aiWinPosSize[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$tWindowSize = $oDoc.CurrentController.Frame.ContainerWindow.getPosSize()
	If Not IsObj($tWindowSize) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iX, $iY, $iWidth, $iHeight) Then
		__LOWriter_ArrayFill($aiWinPosSize, $tWindowSize.X(), $tWindowSize.Y(), $tWindowSize.Width(), $tWindowSize.Height())
		Return SetError($__LOW_STATUS_SUCCESS, 2, $aiWinPosSize)
	EndIf

	If ($iX <> Null) Then
		If Not IsInt($iX) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$tWindowSize.X = $iX
	EndIf

	If ($iY <> Null) Then
		If Not IsInt($iY) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tWindowSize.Y = $iY
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tWindowSize.Width = $iWidth
	EndIf

	If ($iHeight <> Null) Then
		If Not IsInt($iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tWindowSize.Height = $iHeight
	EndIf

	$oDoc.CurrentController.Frame.ContainerWindow.setPosSize($tWindowSize.X, $tWindowSize.Y, $tWindowSize.Width, $tWindowSize.Height, $iPosSize)

	$tWindowSize = $oDoc.CurrentController.Frame.ContainerWindow.getPosSize()
	If Not IsObj($tWindowSize) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iX = Null) ? $iError : ($tWindowSize.X() = $iX) ? $iError : BitOR($iError, 1)
	$iError = ($iY = Null) ? $iError : ($tWindowSize.Y() = $iY) ? $iError : BitOR($iError, 2)
	$iError = ($iWidth = Null) ? $iError : ($tWindowSize.Width() = $iWidth) ? $iError : BitOR($iError, 4)
	$iError = ($iHeight = Null) ? $iError : ($tWindowSize.Height() = $iHeight) ? $iError : BitOR($iError, 8)

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0)
EndFunc   ;==>_LOWriter_DocPosAndSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPrint
; Description ...: Print a document using the specified settings.
; Syntax ........: _LOWriter_DocPrint(Byref $oDoc[, $iCopies = 1[, $bCollate = True[, $vPages = "ALL"[, $bWait = True[, $iDuplexMode = $LOW_DUPLEX_OFF[, $sPrinter = ""[, $sFilePathName = ""]]]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iCopies             - [optional] an integer value. Default is 1. Specifies the number of copies to print.
;                  $bCollate            - [optional] a boolean value. Default is True. Advises the printer to collate the pages
;				   +						of the copies.
;                  $vPages              - [optional] a String or Integer value. Default is "ALL". Specifies which pages to print.
;				   +						See remarks.
;                  $bWait               - [optional] a boolean value. Default is True. If True, the corresponding print
;				   +						request will be executed synchronous. Default is the asynchronous print mode.
;				   +						ATTENTION: Setting this field to True is highly recommended. Otherwise following
;				   +						actions (as e.g. closing the Document) can fail.
;                  $iDuplexMode         - [optional] an integer value. Default is $__g_iDuplexOFF. Determines the duplex mode for
;				   +						 the print job. See Constants.
;                  $sPrinter            - [optional] a string value. Default is "". Printer name. If left blank, or if printer
;				   +						 name is not found, default printer is used.
;                  $sFilePathName       - [optional] a string value. Default is "". Specifies the name of a file to
;				   +						print to. Creates a .prn file at the given Path. Must include the desired path
;				   +						destination with file name.
; Return values .:Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iCopies not a Integer.
;				   @Error 1 @Extended 3 Return 0 = $bCollate not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $vPages Not an Integer or String.
;				   @Error 1 @Extended 5 Return 0 = $vPages contains invalid characters, a-z, or a period(.).
;				   @Error 1 @Extended 6 Return 0 = $bWait not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iDuplexMode not an Integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $sPrinter Not a String.
;				   @Error 1 @Extended 9 Return 0 = $sFilePathName Not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Printer "Name" setting.
;				   @Error 4 @Extended 2 Return 0 = Error setting "Copies" setting.
;				   @Error 4 @Extended 3 Return 0 = Error setting "Collate" setting.
;				   @Error 4 @Extended 4 Return 0 = Error setting "Wait" setting.
;				   @Error 4 @Extended 5 Return 0 = Error setting "DuplexMode" setting.
;				   @Error 4 @Extended 6 Return 0 = Error setting "Pages" setting.
;				   @Error 4 @Extended 7 Return 0 = Error converting PrintToFile Path.
;				   @Error 4 @Extended 8 Return 0 = Error setting "PrintToFile" setting.
;				   @Error 4 @Extended 3 Return 0 = Error setting "Collate" setting.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success Document was successfully printed.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Based on OOoCalc UDF Print function by GMK.
;					$vPages range is given as entered in the user interface. For example: "1-4,10" to print the
;					pages 1 to 4 and 10. Default is "ALL". Must be in String format to accept more than just a single page
;					number. i.e. This will work: "1-6,12,27" This will Not 1-6,12,27. This will work: "7", This will also: 7.
;Duplex Mode Constants: $LOW_DUPLEX_UNKNOWN(0),
;						$LOW_DUPLEX_OFF(1) [Default],
;						$LOW_DUPLEX_LONG(2),
;						$LOW_DUPLEX_SHORT(3)
; Related .......:_LOWriter_DocEnumPrintersAlt, _LOWriter_DocEnumPrinters, _LOWriter_DocPrintSizeSettings,
;					_LOWriter_DocPrintPageSettings, _LOWriter_DocPrintMiscSettings, _LOWriter_DocPrintIncludedSettings
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPrint(ByRef $oDoc, $iCopies = 1, $bCollate = True, $vPages = "ALL", $bWait = True, $iDuplexMode = $LOW_DUPLEX_OFF, $sPrinter = "", $sFilePathName = "")
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $STR_STRIPLEADING = 1, $STR_STRIPTRAILING = 2, $STR_STRIPALL = 8
	Local $avPrintOpt[4], $asSetPrinterOpt[1]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iCopies) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bCollate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If Not IsInt($vPages) And Not IsString($vPages) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$vPages = (IsString($vPages)) ? StringStripWS($vPages, $STR_STRIPALL) : $vPages
	If IsString($vPages) And Not ($vPages = "ALL") Then
		If StringRegExp($vPages, "[[:alpha:]]|[\.]") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	EndIf
	If Not IsBool($bWait) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not __LOWriter_IntIsBetween($iDuplexMode, $LOW_DUPLEX_OFF, $LOW_DUPLEX_SHORT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not IsString($sPrinter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
	$sPrinter = StringStripWS(StringStripWS($sPrinter, $STR_STRIPTRAILING), $STR_STRIPLEADING)
	If Not IsString($sFilePathName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
	$sFilePathName = StringStripWS(StringStripWS($sFilePathName, $STR_STRIPTRAILING), $STR_STRIPLEADING)
	If $sPrinter <> "" Then
		$asSetPrinterOpt[0] = __LOWriter_SetPropertyValue("Name", $sPrinter)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
		$oDoc.setPrinter($asSetPrinterOpt)
	EndIf
	$avPrintOpt[0] = __LOWriter_SetPropertyValue("CopyCount", $iCopies)
	If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 2, 0)
	$avPrintOpt[1] = __LOWriter_SetPropertyValue("Collate", $bCollate)
	If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 3, 0)
	$avPrintOpt[2] = __LOWriter_SetPropertyValue("Wait", $bWait)
	If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 4, 0)
	$avPrintOpt[3] = __LOWriter_SetPropertyValue("DuplexMode", $iDuplexMode)
	If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 5, 0)
	If $vPages <> "ALL" Then
		ReDim $avPrintOpt[UBound($avPrintOpt) + 1]
		$avPrintOpt[UBound($avPrintOpt) - 1] = __LOWriter_SetPropertyValue("Pages", $vPages)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 6, 0)
	EndIf
	If $sFilePathName <> "" Then
		$sFilePathName = $sFilePathName & ".prn"
		$sFilePathName = _LOWriter_PathConvert($sFilePathName, $LOW_PATHCONV_OFFICE_RETURN)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 7, 0)
		ReDim $avPrintOpt[UBound($avPrintOpt) + 1]
		$avPrintOpt[UBound($avPrintOpt) - 1] = __LOWriter_SetPropertyValue("FileName", $sFilePathName)
		If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 8, 0)
	EndIf
	$oDoc.print($avPrintOpt)
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocPrint

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPrintIncludedSettings
; Description ...: Set or Retrieve setting related to what is included in printing.
; Syntax ........: _LOWriter_DocPrintIncludedSettings(Byref $oDoc[, $bGraphics = Null[, $bControls = Null[, $bDrawings = Null[, $bTables = Null[, $bHiddenText = Null]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bGraphics           - [optional] a boolean value. Default is Null. If True, the graphics of the document are
;				   +						printed.
;                  $bControls           - [optional] a boolean value. Default is Null. If True, the form control fields of the
;				   +						document are printed.
;                  $bDrawings           - [optional] a boolean value. Default is Null. If True, the drawings of the document are
;				   +						printed.
;                  $bTables             - [optional] a boolean value. Default is Null. If True, the Tables of the document are
;				   +						printed.
;                  $bHiddenText         - [optional] a boolean value. Default is Null. If True, prints text that is marked as
;				   +						hidden.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bGraphics not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bControls not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bDrawings not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bTables not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bHiddenText not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.DocumentSettings" Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bGraphics
;				   |								2 = Error setting $bControls
;				   |								4 = Error setting $bDrawings
;				   |								8 = Error setting $bTables
;				   |								16 = Error setting $bHiddenText
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DocPrintSizeSettings, _LOWriter_DocPrintPageSettings, _LOWriter_DocPrintMiscSettings
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPrintIncludedSettings(ByRef $oDoc, $bGraphics = Null, $bControls = Null, $bDrawings = Null, $bTables = Null, $bHiddenText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSettings
	Local $iError = 0
	Local $abPrintSettings[5]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oSettings = $oDoc.createInstance("com.sun.star.text.DocumentSettings")
	If Not IsObj($oSettings) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bGraphics, $bControls, $bDrawings, $bTables, $bHiddenText) Then
		__LOWriter_ArrayFill($abPrintSettings, $oSettings.getPropertyValue("PrintGraphics"), $oSettings.getPropertyValue("PrintControls"), _
				$oSettings.getPropertyValue("PrintDrawings"), $oSettings.getPropertyValue("PrintTables"), $oSettings.getPropertyValue("PrintHiddenText"))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $abPrintSettings)
	EndIf

	If ($bGraphics <> Null) Then
		If Not IsBool($bGraphics) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oSettings.setPropertyValue("PrintGraphics", $bGraphics)
		$iError = ($oSettings.getPropertyValue("PrintGraphics") = $bGraphics) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bControls <> Null) Then
		If Not IsBool($bControls) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oSettings.setPropertyValue("PrintControls", $bControls)
		$iError = ($oSettings.getPropertyValue("PrintControls") = $bControls) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bDrawings <> Null) Then
		If Not IsBool($bDrawings) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSettings.setPropertyValue("PrintDrawings", $bDrawings)
		$iError = ($oSettings.getPropertyValue("PrintDrawings") = $bDrawings) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bTables <> Null) Then
		If Not IsBool($bTables) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSettings.setPropertyValue("PrintTables", $bTables)
		$iError = ($oSettings.getPropertyValue("PrintTables") = $bTables) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bHiddenText <> Null) Then
		If Not IsBool($bHiddenText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSettings.setPropertyValue("PrintHiddenText", $bHiddenText)
		$iError = ($oSettings.getPropertyValue("PrintHiddenText") = $bHiddenText) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocPrintIncludedSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPrintMiscSettings
; Description ...: Set or Retrieve Miscellaneous Printing related settings.
; Syntax ........: _LOWriter_DocPrintMiscSettings(Byref $oDoc[, $iPaperOrient = Null[, $sPrinterName = Null[, $iCommentsMode = Null[, $bBrochure = Null[, $bBrochureRTL = Null[, $bReversed = Null]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iPaperOrient        - [optional] an integer value. Default is Null. The orientation of the paper. See
;				   +						Constants.
;                  $sPrinterName        - [optional] a string value. Default is Null. The Name of the Printer to set as the
;				   +						printer to send print jobs to.
;                  $iCommentsMode       - [optional] an integer value. Default is Null. Where to print comments (if any). See
;				   +						Constants.
;                  $bBrochure           - [optional] a boolean value. Default is Null. If True, prints the document in brochure
;				   +						format.
;                  $bBrochureRTL        - [optional] a boolean value. Default is Null. If True, prints the document in brochure
;				   +						Right to Left format.
;                  $bReversed           - [optional] a boolean value. Default is Null. If True, prints pages in reverse order.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iPaperOrient not an integer, less than 0 or greater than 1. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $sPrinterName not a string.
;				   @Error 1 @Extended 4 Return 0 = $iCommentsMode not an integer, less than 0, or greater than 3. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $bBrochure not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bBrochureRTL not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bReversed not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.DocumentSettings" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving setting value of "CanSetPaperOrientation" from Printer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iPaperOrient
;				   |								2 = Error setting $sPrinterName
;				   |								4 = Error setting $iCommentsMode
;				   |								8 = Error setting $bBrochure
;				   |								16 = Error setting $bBrochureRTL
;				   |								32 = Error setting $bReversed
;				    --Printer Related Errors--
;				   @Error 6 @Extended 1 Return 0 = Printer does not allow changing paper orientation.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Paper Orientation Constants: $LOW_PAPER_PORTRAIT(0),
;								$LOW_PAPER_LANDSCAPE(1)
;Comment Print Mode Constants: $LOW_PRINT_NOTES_NONE (0), Document content itself is printed, without printing any Comments if
;									present;
;								$LOW_PRINT_NOTES_ONLY(1), Only Comments are printed, and NONE of the Document content is
;									printed;
;								$LOW_PRINT_NOTES_END(2), Document content is printed and comments are appended to a blank page
;									at the end of the document;
;								$LOW_PRINT_NOTES_NEXT_PAGE(3), Document content is printed and comments are appended to a blank
;									page after the page they are found in the document.
; Related .......: _LOWriter_DocPrintSizeSettings, _LOWriter_DocPrintPageSettings, _LOWriter_DocPrintIncludedSettings
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPrintMiscSettings(ByRef $oDoc, $iPaperOrient = Null, $sPrinterName = Null, $iCommentsMode = Null, $bBrochure = Null, $bBrochureRTL = Null, $bReversed = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $STR_STRIPLEADING = 1, $STR_STRIPTRAILING = 2
	Local $iError = 0
	Local $oSettings
	Local $bCanSetPaperOrientation = False
	Local $aoSetting[1]
	Local $avPrintSettings[6]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oSettings = $oDoc.createInstance("com.sun.star.text.DocumentSettings")
	If Not IsObj($oSettings) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iPaperOrient, $sPrinterName, $iCommentsMode, $bBrochure, $bReversed) Then
		__LOWriter_ArrayFill($avPrintSettings, __LOWriter_GetPrinterSetting($oDoc, "PaperOrientation"), _
				__LOWriter_GetPrinterSetting($oDoc, "Name"), $oSettings.getPropertyValue("PrintAnnotationMode"), _
				$oSettings.getPropertyValue("PrintProspect"), $oSettings.getPropertyValue("PrintProspectRTL"), _
				$oSettings.getPropertyValue("PrintReversed"))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPrintSettings)
	EndIf

	$bCanSetPaperOrientation = __LOWriter_GetPrinterSetting($oDoc, "CanSetPaperOrientation")
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($iPaperOrient <> Null) Then
		If Not __LOWriter_IntIsBetween($iPaperOrient, $LOW_PAPER_PORTRAIT, $LOW_PAPER_LANDSCAPE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If $bCanSetPaperOrientation Then
			$aoSetting[0] = __LOWriter_SetPropertyValue("PaperOrientation", $iPaperOrient)
			$oDoc.setPrinter($aoSetting)
			$iError = (__LOWriter_GetPrinterSetting($oDoc, "PaperOrientation") = $iPaperOrient) ? $iError : BitOR($iError, 1)
		Else
			Return SetError($__LOW_STATUS_PRINTER_RELATED_ERROR, 1, 0)
		EndIf
	EndIf

	If ($sPrinterName <> Null) Then
		If Not IsString($sPrinterName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$sPrinterName = StringStripWS(StringStripWS($sPrinterName, $STR_STRIPTRAILING), $STR_STRIPLEADING)
		$aoSetting[0] = __LOWriter_SetPropertyValue("Name", $sPrinterName)
		$oDoc.setPrinter($aoSetting)
		$iError = (__LOWriter_GetPrinterSetting($oDoc, "Name") = $sPrinterName) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iCommentsMode <> Null) Then
		If Not __LOWriter_IntIsBetween($iCommentsMode, $LOW_PRINT_NOTES_NONE, $LOW_PRINT_NOTES_NEXT_PAGE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSettings.setPropertyValue("PrintAnnotationMode", $iCommentsMode)
		$iError = ($oSettings.getPropertyValue("PrintAnnotationMode") = $iCommentsMode) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bBrochure <> Null) Then
		If Not IsBool($bBrochure) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSettings.setPropertyValue("PrintProspect", $bBrochure)
		$iError = ($oSettings.getPropertyValue("PrintProspect") = $bBrochure) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bBrochureRTL <> Null) Then
		If Not IsBool($bBrochureRTL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSettings.setPropertyValue("PrintProspectRTL", $bBrochureRTL)
		$iError = ($oSettings.getPropertyValue("PrintProspectRTL") = $bBrochureRTL) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bReversed <> Null) Then
		If Not IsBool($bReversed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oSettings.setPropertyValue("PrintReversed", $bReversed)
		$iError = ($oSettings.getPropertyValue("PrintReversed") = $bReversed) ? $iError : BitOR($iError, 32)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocPrintMiscSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPrintPageSettings
; Description ...: Set or Retrieve settings Page related print settings.
; Syntax ........: _LOWriter_DocPrintPageSettings(Byref $oDoc[, $bBlackOnly = Null[, $bLeftOnly = Null[, $bRightOnly = Null[, $bBackground = Null[, $bEmptyPages = Null]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bBlackOnly          - [optional] a boolean value. Default is Null. If True, prints all text in black only.
;                  $bLeftOnly           - [optional] a boolean value. Default is Null. If True, prints only Left(Even) pages. If
;				   +						both $bLeftOnly and $bRightOnly are false, both Left and Right pages are printed.
;                  $bRightOnly          - [optional] a boolean value. Default is Null. If True, prints only Right(Odd) pages. If
;				   +						both $bLeftOnly and $bRightOnly are false, both Left and Right pages are printed.
;                  $bBackground         - [optional] a boolean value. Default is Null. If true, prints colors and objects that
;				   +						are inserted to the background of the page.
;                  $bEmptyPages         - [optional] a boolean value. Default is Null. If true, automatically inserted blank
;				   +						pages are printed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bBlackOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bLeftOnly not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bRightOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bBackground not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bEmptyPages not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.DocumentSettings" Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bBlackOnly
;				   |								2 = Error setting $bLeftOnly
;				   |								4 = Error setting $bRightOnly
;				   |								8 = Error setting $bBackground
;				   |								16 = Error setting $bEmptyPages
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_DocPrintSizeSettings, _LOWriter_DocPrintMiscSettings, _LOWriter_DocPrintIncludedSettings
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPrintPageSettings(ByRef $oDoc, $bBlackOnly = Null, $bLeftOnly = Null, $bRightOnly = Null, $bBackground = Null, $bEmptyPages = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $oSettings
	Local $abPrintSettings[5]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oSettings = $oDoc.createInstance("com.sun.star.text.DocumentSettings")
	If Not IsObj($oSettings) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bBlackOnly, $bLeftOnly, $bRightOnly, $bBackground, $bEmptyPages) Then
		__LOWriter_ArrayFill($abPrintSettings, $oSettings.getPropertyValue("PrintBlackFonts"), $oSettings.getPropertyValue("PrintLeftPages"), _
				$oSettings.getPropertyValue("PrintRightPages"), $oSettings.getPropertyValue("PrintPageBackground"), _
				$oSettings.getPropertyValue("PrintEmptyPages"))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $abPrintSettings)
	EndIf

	If ($bBlackOnly <> Null) Then
		If Not IsBool($bBlackOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oSettings.setPropertyValue("PrintBlackFonts", $bBlackOnly)
		$iError = ($oSettings.getPropertyValue("PrintBlackFonts") = $bBlackOnly) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bLeftOnly <> Null) Then
		If Not IsBool($bLeftOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oSettings.setPropertyValue("PrintLeftPages", $bLeftOnly)
		$iError = ($oSettings.getPropertyValue("PrintLeftPages") = $bLeftOnly) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bRightOnly <> Null) Then
		If Not IsBool($bRightOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSettings.setPropertyValue("PrintRightPages", $bRightOnly)
		$iError = ($oSettings.getPropertyValue("PrintRightPages") = $bRightOnly) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bBackground <> Null) Then
		If Not IsBool($bBackground) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSettings.setPropertyValue("PrintPageBackground", $bBackground)
		$iError = ($oSettings.getPropertyValue("PrintPageBackground") = $bBackground) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bEmptyPages <> Null) Then
		If Not IsBool($bEmptyPages) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSettings.setPropertyValue("PrintEmptyPages", $bEmptyPages)
		$iError = ($oSettings.getPropertyValue("PrintEmptyPages") = $bEmptyPages) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocPrintPageSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocPrintSizeSettings
; Description ...: Set or Retrieve Print Paper size settings.
; Syntax ........: _LOWriter_DocPrintSizeSettings(Byref $oDoc[, $iPaperFormat = Null[, $iPaperWidth = Null[, $iPaperHeight = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iPaperFormat        - [optional] an integer value. Default is Null. Specifies a predefined paper size or if
;				   +						the paper size is a user-defined size. See constants.
;                  $iPaperWidth         - [optional] an integer value. Default is Null. Specifies the size of the paper in
;				   +						micrometers. See constants below for possible options, can also be a custom value.
;				   +						Note: for some reason, setting this setting modifies the document page size also,
;				   +						I am unsure why.
;                  $iPaperHeight        - [optional] an integer value. Default is Null. Specifies the size of the paper in
;				   +						micrometers. See constants below for possible options, can also be a custom value.
;				   +						Note: for some reason, setting this setting modifies the document page size also,
;				   +						I am unsure why.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iPaperFormat not an integer, less than 0 or greater than 8. See constants.
;				   @Error 1 @Extended 3 Return 0 = $iPaperWidth not an integer, and not set to Null keyword.
;				   @Error 1 @Extended 4 Return 0 = $iPaperHeight not an integer, and not set to Null keyword.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.awt.Size" Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iPaperFormat
;				   |								2 = Error setting $iPaperWidth
;				   |								4 = Error setting $iPaperHeight
;				    --Printer Related Errors--
;				   @Error 6 @Extended 1 Return 0 = Printer doesn't allow paper format to be set.
;				   @Error 6 @Extended 2 Return 0 = Printer doesn't allow paper size to be set.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Due to slight inaccuracies in unit conversion, there may be false errors thrown while attempting to
;					set paper size.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Paper Format Constants:$LOW_PAPER_A3(0);
;							$LOW_PAPER_A4(1);
;							$LOW_PAPER_A5(2);
;							$LOW_PAPER_B4(3);
;							$LOW_PAPER_B5(4);
;							$LOW_PAPER_LETTER(5);
;							$LOW_PAPER_LEGAL(6);
;							$LOW_PAPER_TABLOID(7);
;							$LOW_PAPER_USER_DEFINED(8).
;Paper Width Constants: $LOW_PAPER_WIDTH_A6(10490),
;							$LOW_PAPER_WIDTH_A5(14808),
;							$LOW_PAPER_WIDTH_A4(21006),
;							$LOW_PAPER_WIDTH_A3(29693),
;							$LOW_PAPER_WIDTH_B6ISO(12497),
;							$LOW_PAPER_WIDTH_B5ISO(17602),
;							$LOW_PAPER_WIDTH_B4ISO(24994),
;							$LOW_PAPER_WIDTH_LETTER(21590),
;							$LOW_PAPER_WIDTH_LEGAL(21590),
;							$LOW_PAPER_WIDTH_LONG_BOND(21590),
;							$LOW_PAPER_WIDTH_TABLOID(27940),
;							$LOW_PAPER_WIDTH_B6JIS(12801),
;							$LOW_PAPER_WIDTH_B5JIS(18212),
;							$LOW_PAPER_WIDTH_B4JIS(25705),
;							$LOW_PAPER_WIDTH_16KAI(18390),
;							$LOW_PAPER_WIDTH_32KAI(13005),
;							$LOW_PAPER_WIDTH_BIG_32KAI(13995),
;							$LOW_PAPER_WIDTH_DLENVELOPE(10998),
;							$LOW_PAPER_WIDTH_C6ENVELOPE(11405),
;							$LOW_PAPER_WIDTH_C6_5_ENVELOPE(11405),
;							$LOW_PAPER_WIDTH_C5ENVELOPE(16205),
;							$LOW_PAPER_WIDTH_C4ENVELOPE(22911),
;							$LOW_PAPER_WIDTH_6_3_4ENVELOPE(9208),
;							$LOW_PAPER_WIDTH_7_3_4ENVELOPE(9855),
;							$LOW_PAPER_WIDTH_9ENVELOPE(9843),
;							$LOW_PAPER_WIDTH_10ENVELOPE(10490),
;							$LOW_PAPER_WIDTH_11ENVELOPE(11430),
;							$LOW_PAPER_WIDTH_12ENVELOPE(12065),
;							$LOW_PAPER_WIDTH_JAP_POSTCARD(10008
;Paper Height Constants: $LOW_PAPER_HEIGHT_A6(14808),
;							$LOW_PAPER_HEIGHT_A5(21006),
;							$LOW_PAPER_HEIGHT_A4(29693),
;							$LOW_PAPER_HEIGHT_A3(42012),
;							$LOW_PAPER_HEIGHT_B6ISO(17602),
;							$LOW_PAPER_HEIGHT_B5ISO(24994),
;							$LOW_PAPER_HEIGHT_B4ISO(35306),
;							$LOW_PAPER_HEIGHT_LETTER(27940),
;							$LOW_PAPER_HEIGHT_LEGAL(35560),
;							$LOW_PAPER_HEIGHT_LONG_BOND(33020),
;							$LOW_PAPER_HEIGHT_TABLOID(43180),
;							$LOW_PAPER_HEIGHT_B6JIS(18200),
;							$LOW_PAPER_HEIGHT_B5JIS(25705),
;							$LOW_PAPER_HEIGHT_B4JIS(36398),
;							$LOW_PAPER_HEIGHT_16KAI(26010),
;							$LOW_PAPER_HEIGHT_32KAI(18390),
;							$LOW_PAPER_HEIGHT_BIG_32KAI(20295),
;							$LOW_PAPER_HEIGHT_DLENVELOPE(21996),
;							$LOW_PAPER_HEIGHT_C6ENVELOPE(16205),
;							$LOW_PAPER_HEIGHT_C6_5_ENVELOPE(22911),
;							$LOW_PAPER_HEIGHT_C5ENVELOPE(22911),
;							$LOW_PAPER_HEIGHT_C4ENVELOPE(32410),
;							$LOW_PAPER_HEIGHT_6_3_4ENVELOPE(16510),
;							$LOW_PAPER_HEIGHT_7_3_4ENVELOPE(19050),
;							$LOW_PAPER_HEIGHT_9ENVELOPE(22543),
;							$LOW_PAPER_HEIGHT_10ENVELOPE(24130),
;							$LOW_PAPER_HEIGHT_11ENVELOPE(26365),
;							$LOW_PAPER_HEIGHT_12ENVELOPE(27940),
;							$LOW_PAPER_HEIGHT_JAP_POSTCARD(14808)
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DocPrintPageSettings,
;					_LOWriter_DocPrintMiscSettings, _LOWriter_DocPrintIncludedSettings
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocPrintSizeSettings(ByRef $oDoc, $iPaperFormat = Null, $iPaperWidth = Null, $iPaperHeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $bCanSetPaperFormat = False, $bCanSetPaperSize = False
	Local $iError = 0
	Local $tSize
	Local $aoSetting[1]
	Local $aiPrintSettings[3]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iPaperFormat, $iPaperWidth, $iPaperHeight) Then
		__LOWriter_ArrayFill($aiPrintSettings, __LOWriter_GetPrinterSetting($oDoc, "PaperFormat"), _
				__LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Width(), $__LOWCONST_CONVERT_TWIPS_UM), _
				__LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Height(), $__LOWCONST_CONVERT_TWIPS_UM))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiPrintSettings)
	EndIf

	$bCanSetPaperFormat = __LOWriter_GetPrinterSetting($oDoc, "CanSetPaperFormat")
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$bCanSetPaperSize = __LOWriter_GetPrinterSetting($oDoc, "CanSetPaperSize")
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iPaperFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iPaperFormat, $LOW_PAPER_A3, $LOW_PAPER_USER_DEFINED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If $bCanSetPaperFormat Then
			$aoSetting[0] = __LOWriter_SetPropertyValue("PaperFormat", $iPaperFormat)
			$oDoc.setPrinter($aoSetting)
			$iError = (__LOWriter_GetPrinterSetting($oDoc, "PaperFormat") = $iPaperFormat) ? $iError : BitOR($iError, 1)
		Else
			Return SetError($__LOW_STATUS_PRINTER_RELATED_ERROR, 1, 0)
		EndIf
	EndIf

	If ($iPaperWidth <> Null) Or ($iPaperHeight <> Null) Then
		If $bCanSetPaperSize Then
			If Not IsInt($iPaperWidth) And ($iPaperWidth <> Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			If Not IsInt($iPaperHeight) And ($iPaperHeight <> Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

			;Set in uM but retrieved in TWIPS
			$tSize = __LOWriter_CreateStruct("com.sun.star.awt.Size")
			If Not IsObj($tSize) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
			$tSize.Width = ($iPaperWidth = Null) ? __LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Width(), $__LOWCONST_CONVERT_TWIPS_UM) : $iPaperWidth
			$tSize.Height = ($iPaperWidth = Null) ? __LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Height(), $__LOWCONST_CONVERT_TWIPS_UM) : $iPaperHeight
			$aoSetting[0] = __LOWriter_SetPropertyValue("PaperSize", $tSize)
			$oDoc.setPrinter($aoSetting)

			$iError = ($iPaperWidth = Null) ? $iError : (__LOWriter_IntIsBetween(__LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Width(), $__LOWCONST_CONVERT_TWIPS_UM), $iPaperWidth - 2, $iPaperWidth + 2)) ? $iError : BitOR($iError, 2)
			$iError = ($iPaperHeight = Null) ? $iError : (__LOWriter_IntIsBetween(__LOWriter_UnitConvert(__LOWriter_GetPrinterSetting($oDoc, "PaperSize").Height(), $__LOWCONST_CONVERT_TWIPS_UM), $iPaperHeight - 2, $iPaperHeight + 2)) ? $iError : BitOR($iError, 4)

		Else
			Return SetError($__LOW_STATUS_PRINTER_RELATED_ERROR, 2, 0)
		EndIf
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_DocPrintSizeSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocRedo
; Description ...:  Perform one Redo action for a document.
; Syntax ........: _LOWriter_DocRedo(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have a redo action to perform.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Successfully performed a redo action.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocUndo, _LOWriter_DocRedoIsPossible, _LOWriter_DocRedoGetAllActionTitles,
;					_LOWriter_DocRedoCurActionTitle
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocRedo(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isRedoPossible()) Then
		$oDoc.UndoManager.Redo()
		Return SetError($__LOW_STATUS_SUCCESS, 1, 0)
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf
EndFunc   ;==>_LOWriter_DocRedo

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocRedoCurActionTitle
; Description ...:  Retrieve the current Redo action Title.
; Syntax ........: _LOWriter_DocRedoCurActionTitle(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have a redo action available.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Returns the current available redo action Title in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocRedo, _LOWriter_DocRedoGetAllActionTitles
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocRedoCurActionTitle(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isRedoPossible()) Then
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.getCurrentRedoActionTitle())
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf
EndFunc   ;==>_LOWriter_DocRedoCurActionTitle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocRedoGetAllActionTitles
; Description ...: Retrieve all available Redo action Titles.
; Syntax ........: _LOWriter_DocRedoGetAllActionTitles(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have any redo actions available.
;				   --Success--
;				   @Error 0 @Extended 0 Return Array = Returns all available redo action Titles in an array of Strings.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocRedo, _LOWriter_DocRedoCurActionTitle
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocRedoGetAllActionTitles(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isRedoPossible()) Then
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.getAllRedoActionTitles())
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf
EndFunc   ;==>_LOWriter_DocRedoGetAllActionTitles

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocRedoIsPossible
; Description ...: Test whether a Redo action is available to perform for a document.
; Syntax ........: _LOWriter_DocRedoIsPossible(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = If the document has a redo action to perform, True is returned, else
;				   +	False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocRedo
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocRedoIsPossible(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.isRedoPossible())
EndFunc   ;==>_LOWriter_DocRedoIsPossible

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocReplaceAll
; Description ...:
; Syntax ........: _LOWriter_DocReplaceAll(Byref $oDoc, Byref $oSrchDescript, $sSearchString, $sReplaceString, Byref $atFindFormat, Byref $atReplaceFormat)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSrchDescript       - [in/out] an object.  A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $sSearchString       - a string value. A String of text or a Regular Expression to Search for.
;                  $sReplaceString      - a string value. A String of text or a Regular Expression to replace any results with.
;                  $atFindFormat        - [in/out] an array of structs. Set to an empty array[0] to skip. An Array of Formatting
;				   +						properties to search for, either by value or simply by existence, depending on the
;				   +						current setting of "Value Search". Array will not be modified.
;                  $atReplaceFormat     - [in/out] an array of structs. Set to an empty array[0] to skip. An Array of Formatting
;				   +						property values to replace any results with. Array will not be modified.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSrchDescript not a Search Descriptor Object.
;				   @Error 1 @Extended 4 Return 0 = $sSearchString not a String.
;				   @Error 1 @Extended 5 Return 0 = $sReplaceString not a String.
;				   @Error 1 @Extended 6 Return 0 = $atFindFormat not an Array.
;				   @Error 1 @Extended 7 Return 0 = $atReplaceFormat not an Array.
;				   @Error 1 @Extended 8 Return 0 = First Element of $atFindFormat not an Object.
;				   @Error 1 @Extended 9 Return 0 = First Element of $atReplaceFormat not an Object.
;				   --Success--
;				   @Error 0 @Extended ? Return 1 = Success. Search and Replace was successful, @Extended set to number of
;				   +									replacements made.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_SearchDescriptorCreate, _LOWriter_DocFindAll, _LOWriter_DocFindNext,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocReplaceAllInRange, _LOWriter_FindFormatModifyAlignment,
;					_LOWriter_FindFormatModifyEffects, _LOWriter_FindFormatModifyFont, _LOWriter_FindFormatModifyHyphenation,
;					_LOWriter_FindFormatModifyIndent, _LOWriter_FindFormatModifyOverline, _LOWriter_FindFormatModifyPageBreak,
;					_LOWriter_FindFormatModifyPosition, _LOWriter_FindFormatModifyRotateScaleSpace,
;					_LOWriter_FindFormatModifySpacing, _LOWriter_FindFormatModifyStrikeout,
;					_LOWriter_FindFormatModifyTxtFlowOpt, _LOWriter_FindFormatModifyUnderline.
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocReplaceAll(ByRef $oDoc, ByRef $oSrchDescript, $sSearchString, $sReplaceString, ByRef $atFindFormat, ByRef $atReplaceFormat)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iReplacements

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sSearchString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsString($sReplaceString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not IsArray($atFindFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not IsArray($atReplaceFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	If (UBound($atFindFormat) > 0) And Not IsObj($atFindFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
	$oSrchDescript.setSearchAttributes($atFindFormat)

	If (UBound($atReplaceFormat) > 0) And Not IsObj($atReplaceFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
	$oSrchDescript.setReplaceAttributes($atReplaceFormat)

	$oSrchDescript.SearchString = $sSearchString
	$oSrchDescript.ReplaceString = $sReplaceString

	$iReplacements = $oDoc.replaceAll($oSrchDescript)

	Return SetError($__LOW_STATUS_SUCCESS, $iReplacements, 1)

EndFunc   ;==>_LOWriter_DocReplaceAll

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocReplaceAllInRange
; Description ...: Replace all instances of a search within a selection. See Remarks.
; Syntax ........: _LOWriter_DocReplaceAllInRange(Byref $oDoc, Byref $oSrchDescript, Byref $oRange, $sSearchString, $sReplaceString, Byref $atFindFormat, Byref $atReplaceFormat)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $oRange              - [in/out] an object. A Range, such as a cursor with Data selected, to perform the search
;				   +						within.
;                  $sSearchString       - a string value. A String of text or a regular expression to search for.
;                  $sReplaceString      - a string value. A String of text or a regular expression to replace any results with.
;                  $atFindFormat        - [in/out] an array of structs. An Array of Formatting properties to search for, either
;				   +						by value or simply by existence, depending on the current setting of "Value Search".
;				   +						Set to an empty array[0] to skip. Array will not be modified.
;                  $atReplaceFormat     - [in/out] an array of structs. An Array of Formatting property values to replace any
;				   +						results with. Set to an empty array[0] to skip. Array will not be modified. Not
;				   +						recommended for use with regular expressions, see remarks.
; Return values .:  Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oSrchDescript not a Search Descriptor Object.
;				   @Error 1 @Extended 4 Return 0 = $oRange not an Object.
;				   @Error 1 @Extended 5 Return 0 = $oRange contains no selected Data.
;				   @Error 1 @Extended 6 Return 0 = $sSearchString not a String.
;				   @Error 1 @Extended 7 Return 0 = $sReplaceString not a String.
;				   @Error 1 @Extended 8 Return 0 = $atFindFormat not an Array.
;				   @Error 1 @Extended 9 Return 0 = $atReplaceFormat not an Array.
;				   @Error 1 @Extended 10 Return 0 = $atFindFormat is an Array but the First Element is not a Property Object.
;				   @Error 1 @Extended 11 Return 0 = $atReplaceFormat is an Array but the First Element is not a Property Object.
;				   @Error 1 @Extended 12 Return 0 = Search Styles is True, $atFindFormat and $atReplaceFormat arrays are empty,
;				   +								(Thus searching for Paragraph Styles by Name contained in the document) but
;				   +								$sReplaceString is set to a Paragraph Style that does not exist.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ViewCursor object.
;				   @Error 2 @Extended 2 Return 0 = Error creating backup of ViewCursor location and selection.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 4 Return 0 = Error creating "com.sun.star.frame.DispatchHelper" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error converting Regular Expression String.
;				   @Error 3 @Extended 2 Return 0 = Error performing FindAllInRange Function.
;				   --Success--
;				   @Error 0 @Extended ? Return 1 = Success. Search and Replace was successful, number of replacements returned
;				   +											in @Extended.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Libre Office does not offer a Function to call to replace only results within a selection,
;						consequently I have had to create my own. This function uses the "FindAllInRange" function,
;						so any errors with Find/Replace formatting causing deletions will cause problems here. As best
;						as I can tell all options for find and replace should be available, Formatting, Paragraph styles
;						etc. How I created this function to still accept Regular Expressions is I use Libre's FindAll
;						command, modified by my FindAllInRange function. I then ran into another problem, as my next step
;						was to use AutoIt's RegExpReplace function to perform the replacement, but some replacements don't
;						work as expected. To Fix this I have created two versions of Regular Expression replacement, the
;						first way is only implemented if $atReplaceFormat is skipped using an empty array. I use an
;						ExecutionHelper to execute the Find and replace command, however this method doesn't accept formatting
;						for find and replace. So I developed my second method, which accepts formatting, and uses AutoIt's
;						RegExpReplace function to "Search" the resulting matched Strings and replace it, then I set the new
;						string to that result. However I have had to create a separate function to convert the ReplaceString
;						to be compatible with AutoIt's Regular Expression formatting. A BackSlash (\) must be doubled(\\) in
;						order to be literally inserted, at the beginning of the conversion process all double Backslashes
;						are replaced with a specific flag to aid in identifying commented and non-commented keywords
;						(\n, \t, & etc.), after the  conversion process the special flag is replaced again with the double
;						Backslashes, this should not cause any issues, \n (new Paragraph) in L.O. RegExp. formatting is
;						replaced with @CR, unless the Backslash is doubled (\\n), then \n becomes literal, \t (Tab) in L.O.
;						format is replaced with @Tab, and &(Find Result/BackReference) is replaced with $0 which means insert
;						the entire found string at that position, To insert a regular "&" character, comment it with a
;						Backslash, \&. As with LibreOffice, this function should still accept BackReferences ($0-9 or \0-9).
;						However I have found certain problems with some of the expressions still not working, such as
;						$ (end of paragraph mark) not replacing correctly because Autoit uses @CRLF for its newline marks, and
;						Libre uses @CR for a paragraph and @LF for a soft newline.
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_SearchDescriptorCreate, _LOWriter_DocFindAll, _LOWriter_DocFindNext,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocReplaceAll, _LOWriter_FindFormatModifyAlignment,
;					_LOWriter_FindFormatModifyEffects, _LOWriter_FindFormatModifyFont, _LOWriter_FindFormatModifyHyphenation,
;					_LOWriter_FindFormatModifyIndent, _LOWriter_FindFormatModifyOverline, _LOWriter_FindFormatModifyPageBreak,
;					_LOWriter_FindFormatModifyPosition, _LOWriter_FindFormatModifyRotateScaleSpace,
;					_LOWriter_FindFormatModifySpacing, _LOWriter_FindFormatModifyStrikeout,
;					_LOWriter_FindFormatModifyTxtFlowOpt, _LOWriter_FindFormatModifyUnderline.
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocReplaceAllInRange(ByRef $oDoc, ByRef $oSrchDescript, ByRef $oRange, $sSearchString, $sReplaceString, ByRef $atFindFormat, ByRef $atReplaceFormat)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aoResults[0]
	Local $atArgs[7]
	Local Const $LOW_SEARCHFLAG_ABSOLUTE = 1, $LOW_SEARCHFLAG_REGEXP = 2, $LOW_SEARCHFLAG_REPLACE_ALL = 3, $LOW_SEARCHFLAG_SELECTION = 2048
	Local $oViewCursor, $oViewCursorBackup, $oServiceManager, $oDispatcher
	Local $iResults
	Local $bFormat = False

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsObj($oRange) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($oRange.IsCollapsed()) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not IsString($sSearchString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not IsString($sReplaceString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not IsArray($atFindFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
	If Not IsArray($atReplaceFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)

	If (UBound($atFindFormat) > 0) And Not IsObj($atFindFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
	If (UBound($atReplaceFormat) > 0) And Not IsObj($atReplaceFormat[0]) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
	If (UBound($atReplaceFormat) > 0) Then $bFormat = True

	;If Find/Replace using a Regular expression is True, and replace formatting is set, convert the regular expressions for my
	;alternate replacement function to use.
	If ($oSrchDescript.SearchRegularExpression() = True) And ($bFormat = True) Then __LOWriter_RegExpConvert($sReplaceString)
	If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$aoResults = _LOWriter_DocFindAllInRange($oDoc, $oSrchDescript, $sSearchString, $atFindFormat, $oRange)
	$iResults = @extended
	If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; Error performing search

	If ($oSrchDescript.SearchRegularExpression() = True) Then

		If ($bFormat = True) Then

			For $i = 0 To $iResults - 1
				$aoResults[$i].setString(StringRegExpReplace($aoResults[$i].getString(), $sSearchString, $sReplaceString))
				If ($bFormat = True) Then
					For $j = 0 To UBound($atReplaceFormat) - 1
						$aoResults[$i].setPropertyValue($atReplaceFormat[$j].Name(), $atReplaceFormat[$j].Value())
					Next
				EndIf

				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
			Next

		Else ;No Replacement formatting, use UNO Execute method instead.

			$oViewCursor = $oDoc.CurrentController.getViewCursor()
			If Not IsObj($oViewCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

			;Backup the ViewCursor location and selection.
			$oViewCursorBackup = $oDoc.Text.createTextCursorByRange($oViewCursor)
			If Not IsObj($oViewCursorBackup) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

			;Move the View Cursor to the input range.
			$oViewCursor.gotoRange($oRange, False)

			$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
			If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

			$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
			If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 4, 0)

			$atArgs[0] = __LOWriter_SetPropertyValue("SearchItem.Backward", $oSrchDescript.SearchBackwards())
			$atArgs[1] = __LOWriter_SetPropertyValue("SearchItem.AlgorithmType", $LOW_SEARCHFLAG_ABSOLUTE)
			$atArgs[2] = __LOWriter_SetPropertyValue("SearchItem.SearchFlags", $LOW_SEARCHFLAG_SELECTION)
			$atArgs[3] = __LOWriter_SetPropertyValue("SearchItem.SearchString", $sSearchString)
			$atArgs[4] = __LOWriter_SetPropertyValue("SearchItem.ReplaceString", $sReplaceString)
			$atArgs[5] = __LOWriter_SetPropertyValue("SearchItem.Command", $LOW_SEARCHFLAG_REPLACE_ALL)
			$atArgs[6] = __LOWriter_SetPropertyValue("SearchItem.AlgorithmType2", $LOW_SEARCHFLAG_REGEXP)

			$oDispatcher.executeDispatch($oDoc.CurrentController, ".uno:ExecuteSearch", "", 0, $atArgs)

			;Restore the ViewCursor to its previous location.
			$oViewCursor.gotoRange($oViewCursorBackup, False)

		EndIf

	ElseIf ($oSrchDescript.SearchStyles() = True) And ((UBound($atFindFormat) = 0) And (UBound($atReplaceFormat) = 0)) Then ;If Style Search is active and no formatting is set, then search and replace Paragraph style.
		If Not _LOWriter_ParStyleExists($oDoc, $sReplaceString) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		For $i = 0 To $iResults - 1
			$aoResults[$i].ParaStyleName = $sReplaceString

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	Else
		For $i = 0 To $iResults - 1
			$aoResults[$i].setString(StringReplace($aoResults[$i].getString(), $sSearchString, $sReplaceString))
			If ($bFormat = True) Then
				For $k = 0 To UBound($atReplaceFormat) - 1
					$aoResults[$i].setPropertyValue($atReplaceFormat[$k].Name(), $atReplaceFormat[$k].Value())
				Next
			EndIf

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, $iResults, 1)
EndFunc   ;==>_LOWriter_DocReplaceAllInRange

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocSave
; Description ...: Save any changes made to a Document.
; Syntax ........: _LOWriter_DocSave(Byref $oDoc)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .:Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document is ReadOnly or Document has no save location, try SaveAs.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Document Successfully saved.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocExport, _LOWriter_DocSaveAs
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocSave(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oDoc.hasLocation Or $oDoc.isReadOnly Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$oDoc.store()
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocSave

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocSaveAs
; Description ...: Save a Document with the specified file name to the path specified with any parameters called.
; Syntax ........: _LOWriter_DocSaveAs(Byref $oDoc, $sFilePath[, $sFilterName = ""[, $bOverwrite = Null[, $sPassword = Null]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFilePath           - a string value. Full path to save the document to, including Filename and extension.
;                  $sFilterName         - [optional] a string value. Default is "". Filter name. "" (blank string), Filter is
;				   +								chosen automatically based on the file extension. If no extension is
;				   +								present, or if not matched to the list of extensions in this UDF, the .odt
;				   +								extension is used instead, with the filter name of "writer8".
;                  $bOverwrite          - [optional] a boolean value. Default is Null. If True, the existing file will be
;				   +								overwritten.
;                  $sPassword           - [optional] a string value. Default is Null. Sets a password for the document. (Not all
;				   +								file formats can have a Password set). "" (blank string) = No Password. Null
;				   +								also sets no password.
; Return values .:Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFilePath Not a String.
;				   @Error 1 @Extended 3 Return 0 = $sFilterName Not a String.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite Not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sPassword Not a String.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error Converting Path to/from L.O. URL
;				   @Error 3 @Extended 2 Return 0 = Error retrieving FilterName.
;				   @Error 3 @Extended 3 Return 0 = Error setting FilterName Property
;				   @Error 3 @Extended 4 Return 0 = Error setting Overwrite Property
;				   @Error 3 @Extended 5 Return 0 = Error setting Password Property
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Successfully Saved the document. Returning document save path.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Alters original save path (if there was one) to the new path.
; Related .......: _LOWriter_DocExport, _LOWriter_DocSave
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocSaveAs(ByRef $oDoc, $sFilePath, $sFilterName = "", $bOverwrite = Null, $sPassword = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aProperties[1]
	Local $sSavePath

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFilePath) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sFilterName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$sFilePath = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_OFFICE_RETURN)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($sFilterName = "") Or ($sFilterName = " ") Then $sFilterName = __LOWriter_FilterNameGet($sFilePath)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	$aProperties[0] = __LOWriter_SetPropertyValue("FilterName", $sFilterName)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)

	If ($bOverwrite <> Null) Then
		If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		ReDim $aProperties[UBound($aProperties) + 1]
		$aProperties[UBound($aProperties) - 1] = __LOWriter_SetPropertyValue("Overwrite", $bOverwrite)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 4, 0)
	EndIf

	If $sPassword <> Null Then
		If Not IsString($sPassword) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		ReDim $aProperties[UBound($aProperties) + 1]
		$aProperties[UBound($aProperties) - 1] = __LOWriter_SetPropertyValue("Password", $sPassword)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 5, 0)
	EndIf

	$oDoc.storeAsURL($sFilePath, $aProperties)

	$sSavePath = _LOWriter_PathConvert($sFilePath, $LOW_PATHCONV_PCPATH_RETURN)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $sSavePath)
EndFunc   ;==>_LOWriter_DocSaveAs

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocToFront
; Description ...: Bring the called document to the front of the windows.
; Syntax ........: _LOWriter_DocToFront(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Windows was successfully brought to the front of the open windows.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If minimized, the document is restored and brought to the front of the viewable pages. Generally only brings
;					the document to the front of other Libre Office windows.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocToFront(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oDoc.CurrentController.Frame.ContainerWindow.toFront()
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocToFront

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocUndo
; Description ...: Perform one Undo action for a document.
; Syntax ........: _LOWriter_DocUndo(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have an undo action to perform.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Successfully performed an undo action.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocUndoIsPossible, _LOWriter_DocUndoGetAllActionTitles, _LOWriter_DocUndoCurActionTitle,
;					_LOWriter_DocRedo
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocUndo(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isUndoPossible()) Then
		$oDoc.UndoManager.Undo()
		Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf
EndFunc   ;==>_LOWriter_DocUndo

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocUndoCurActionTitle
; Description ...: Retrieve the current Undo action Title.
; Syntax ........: _LOWriter_DocUndoCurActionTitle(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have an undo action available.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Returns the current available undo action Title in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocUndo, _LOWriter_DocUndoGetAllActionTitles
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocUndoCurActionTitle(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isUndoPossible()) Then
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.getCurrentUndoActionTitle())
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf

EndFunc   ;==>_LOWriter_DocUndoCurActionTitle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocUndoGetAllActionTitles
; Description ...: Retrieve all available Undo action Titles.
; Syntax ........: _LOWriter_DocUndoGetAllActionTitles(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Document does not have any undo actions available.
;				   --Success--
;				   @Error 0 @Extended 0 Return Array = Returns all available undo action Titles in an array of Strings.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocUndo, _LOWriter_DocUndoCurActionTitle
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocUndoGetAllActionTitles(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oDoc.UndoManager.isUndoPossible()) Then
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.getAllUndoActionTitles())
	Else
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	EndIf
EndFunc   ;==>_LOWriter_DocUndoGetAllActionTitles

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocUndoIsPossible
; Description ...: Test whether a Undo action is available to perform for a document.
; Syntax ........: _LOWriter_DocUndoIsPossible(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = If the document has an undo action to perform, True is returned, else
;				   +	False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocUndo
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocUndoIsPossible(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.UndoManager.isUndoPossible())
EndFunc   ;==>_LOWriter_DocUndoIsPossible

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocViewCursorGetPosition
; Description ...: Retrieve View Cursor position in Micrometers.
; Syntax ........: _LOWriter_DocViewCursorGetPosition(Byref $oCursor)
; Parameters ....: $oCursor             - [in/out] an object. A View Cursor Object returned by _LOWriter_DocGetViewCursor
;				   +						function.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not a View Cursor.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error determining Cursor type.
;				   --Success--
;				   @Error 0 @Extended ? Return Integer = Success. Current Cursor Coordinate position relative to the
;				   +	top-left position of the first page of the document returned. @Extended is the "X" coordinate, and
;				   +	Return value is the "Y" Coordinate. In Micrometers.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_CursorMove, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocViewCursorGetPosition(ByRef $oCursor)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)
	If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($iCursorType <> $LOW_CURTYPE_VIEW_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	Return SetError($__LOW_STATUS_SUCCESS, $oCursor.getPosition().X(), $oCursor.getPosition().Y())

EndFunc   ;==>_LOWriter_DocViewCursorGetPosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocVisible
; Description ...: Set or retrieve the current visibility of a document.
; Syntax ........: _LOWriter_DocVisible(Byref $oDoc[, $bVisible = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bVisible            - [optional] a boolean value. Default is Null. If True, the document is visible, else if
;				   +						false, document becomes invisible.
; Return values .: Success: 1 or Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bVisible not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting $bVisible.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. $bVisible successfully set.
;				   @Error 0 @Extended 1 Return Boolean = Success. Returning current visibility state of the Document, True if
;				   +	visible, false if invisible.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call $bVisible with Null to return the current visibility setting.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocVisible(ByRef $oDoc, $bVisible = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If ($bVisible = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.CurrentController.Frame.ContainerWindow.isVisible())

	If Not IsBool($bVisible) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oDoc.CurrentController.Frame.ContainerWindow.Visible = $bVisible
	$iError = ($oDoc.CurrentController.Frame.ContainerWindow.isVisible() = $bVisible) ? 0 : 1

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_DocVisible

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_DocZoom
; Description ...: Modify the zoom value for a document.
; Syntax ........: _LOWriter_DocZoom(Byref $oDoc[, $iZoom = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iZoom               - [optional] an integer value. Default is Null. The zoom percentage. Min. 20%, Max 600%.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iZoom not an Integer, less than 20 or greater than 600.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.ServiceManager" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.frame.DispatchHelper" Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iZoom
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = $iZoom set successfully.
;				   @Error 0 @Extended 1 Return Integer = $iZoom set to null, returning current zoom value.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_DocZoom(ByRef $oDoc, $iZoom = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $oServiceManager, $oDispatcher
	Local $aArgs[3]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iZoom = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oDoc.CurrentController.ViewSettings.ZoomValue())

	$oServiceManager = ObjCreate("com.sun.star.ServiceManager")
	If Not IsObj($oServiceManager) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oDispatcher = $oServiceManager.createInstance("com.sun.star.frame.DispatchHelper")
	If Not IsObj($oDispatcher) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not __LOWriter_IntIsBetween($iZoom, 20, 600) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$aArgs[0] = __LOWriter_SetPropertyValue("Zoom.Value", $iZoom)
	$aArgs[1] = __LOWriter_SetPropertyValue("Zoom.ValueSet", 28703)
	$aArgs[2] = __LOWriter_SetPropertyValue("Zoom.Type", 0)

	$oDispatcher.executeDispatch($oDoc.CurrentController, ".uno:Zoom", "", 0, $aArgs)
	$iError = ($oDoc.CurrentController.ViewSettings.ZoomValue() = $iZoom) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_DocZoom

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteDelete
; Description ...: Delete a Endnote.
; Syntax ........: _LOWriter_EndnoteDelete(Byref $oEndNote)
; Parameters ....: $oEndNote            - [in/out] an object. A Endnote Object from a previous Endnote insert, or retrieval
;				   +							function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oEndNote not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Endnote successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_EndnotesGetList, _LOWriter_EndnoteInsert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteDelete(ByRef $oEndNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oEndNote.dispose()
	$oEndNote = Null

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_EndnoteDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteGetAnchor
; Description ...: Create a Text Cursor at the Endnote Anchor position.
; Syntax ........: _LOWriter_EndnoteGetAnchor(Byref $oEndNote)
; Parameters ....: $oEndNote            - [in/out] an object. A Endnote Object from a previous Endnote insert, or retrieval
;				   +							function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oEndNote not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully returned the Endnote Anchor.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The Anchor cursor returned is just a Text Cursor placed at the anchor's position.
; Related .......: _LOWriter_EndnotesGetList, _LOWriter_EndnoteInsert, _LOWriter_CursorMove, _LOWriter_DocGetString,
;					_LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteGetAnchor(ByRef $oEndNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oAnchor

	If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oAnchor = $oEndNote.Anchor.Text.createTextCursorByRange($oEndNote.Anchor())
	If Not IsObj($oAnchor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oAnchor)
EndFunc   ;==>_LOWriter_EndnoteGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteGetTextCursor
; Description ...: Create a Text Cursor in a Endnote to modify the text therein.
; Syntax ........: _LOWriter_EndnoteGetTextCursor(Byref $oEndNote)
; Parameters ....: $oEndNote            - [in/out] an object. A Endnote Object from a previous Endnote insert, or retrieval
;				   +							function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oEndNote not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Cursor Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully retrieved the Endnote Cursor Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_EndnotesGetList, _LOWriter_EndnoteInsert, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteGetTextCursor(ByRef $oEndNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextCursor

	If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oTextCursor = $oEndNote.Text.createTextCursor()
	If Not IsObj($oTextCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTextCursor)
EndFunc   ;==>_LOWriter_EndnoteGetTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteInsert
; Description ...: Insert a Endnote into a Document.
; Syntax ........: _LOWriter_EndnoteInsert(Byref $oDoc, Byref $oCursor, $bOverwrite[, $sLabel = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sLabel              - [optional] a string value. Default is Null. A custom anchor label for the Endnote.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $oCursor is a Table cursor type, not supported.
;				   @Error 1 @Extended 5 Return 0 = $oCursor currently located in a Frame, Footnote, Endnote, or Header/ Footer
;				   +									cannot insert a Endnote in those data types.
;				   @Error 1 @Extended 6 Return 0 = $oCursor located in unknown data type.
;				   @Error 1 @Extended 7 Return 0 = $sLabel not a string.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 =  Error creating "com.sun.star.text.Endnote" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully inserted a new Endnote, returning Endnote Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: A Endnote cannot be inserted into a Frame, a Footnote, a Endnote, or the Header/ Footer.
; Related .......: _LOWriter_EndnoteDelete,  _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor,
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sLabel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oEndNote

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	Switch __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)

		Case $LOW_CURDATA_FRAME, $LOW_CURDATA_FOOTNOTE, $LOW_CURDATA_ENDNOTE, $LOW_CURDATA_HEADER_FOOTER
			Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Unsupported cursor type.
		Case $LOW_CURDATA_BODY_TEXT, $LOW_CURDATA_CELL
			$oEndNote = $oDoc.createInstance("com.sun.star.text.Endnote")
			If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

		Case Else
			Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Unknown Cursor type.
	EndSwitch

	If ($sLabel <> Null) Then
		If Not IsString($sLabel) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oEndNote.Label = $sLabel
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oEndNote, $bOverwrite)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oEndNote)
EndFunc   ;==>_LOWriter_EndnoteInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteModifyAnchor
; Description ...: Modify a Specific Endnote's settings.
; Syntax ........: _LOWriter_EndnoteModifyAnchor(Byref $oEndNote[, $sLabel = Null])
; Parameters ....: $oEndNote            - [in/out] an object. A Endnote Object from a previous Endnote insert, or retrieval
;				   +							function.
;                  $sLabel              - [optional] a string value. Default is Null. A custom anchor label for the Endnote. Set
;				   +							to "" for automatic numbering.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oEndNote not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sLabel not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = $sLabel was not set successfully.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Endnote settings were successfully modified.
;				   @Error 0 @Extended 1 Return String = Success. $sLabel set to Null, current Endnote Label returned.
;				   @Error 0 @Extended 2 Return String = Success. $sLabel set to Null, current Endnote AutoNumbering number
;				   +									returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_EndnotesGetList, _LOWriter_EndnoteInsert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteModifyAnchor(ByRef $oEndNote, $sLabel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($sLabel = Null) Then
		;If Label is blank, return the AutoNumbering Number.
		If ($oEndNote.Label() = "") Then Return SetError($__LOW_STATUS_SUCCESS, 2, $oEndNote.Anchor.String())

		;Else return the Label.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oEndNote.Label())

	EndIf

	If Not IsString($sLabel) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oEndNote.Label = $sLabel
	If ($oEndNote.Label() <> $sLabel) Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_EndnoteModifyAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteSettingsAutoNumber
; Description ...: Set or Retrieve Endnote Autonumbering settings.
; Syntax ........: _LOWriter_EndnoteSettingsAutoNumber(Byref $oDoc[, $iNumFormat = Null[, $iStartAt = Null[, $sBefore = Null[, $sAfter = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for
;				   +						Endnote numbering. See Constants.
;                  $iStartAt            - [optional] an integer value. Default is Null. The Number to begin Endnote counting
;				   +							from, Min. 1, Max 9999.
;                  $sBefore             - [optional] a string value. Default is Null. The text to display before a Endnote
;				   +							number in the note text.
;                  $sAfter              - [optional] a string value. Default is Null. The text to display after a Endnote
;				   +							number in the note text.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iNumFormat not an Integer, or Less than 0 or greater than 71. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iStartAt not an integer, less than 1 or greater than 9999.
;				   @Error 1 @Extended 4 Return 0 = $sBefore not a String.
;				   @Error 1 @Extended 5 Return 0 = $sAfter not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iNumFormat
;				   |								2 = Error setting $iStartAt
;				   |								4 = Error setting $sBefore
;				   |								8 = Error setting $sAfter
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_EndnotesGetList, _LOWriter_EndnoteInsert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteSettingsAutoNumber(ByRef $oDoc, $iNumFormat = Null, $iStartAt = Null, $sBefore = Null, $sAfter = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avENSettings[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iNumFormat, $iStartAt, $sBefore, $sAfter) Then
		__LOWriter_ArrayFill($avENSettings, $oDoc.EndnoteSettings.NumberingType(), ($oDoc.EndnoteSettings.StartAt() + 1), _
				$oDoc.EndnoteSettings.Prefix(), $oDoc.EndnoteSettings.Suffix())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avENSettings)
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDoc.EndnoteSettings.NumberingType = $iNumFormat
		$iError = ($oDoc.EndnoteSettings.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 1)
	EndIf

	;0 Based -- Minus 1
	If ($iStartAt <> Null) Then
		If Not __LOWriter_IntIsBetween($iStartAt, 1, 9999) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDoc.EndnoteSettings.StartAt = ($iStartAt - 1)
		$iError = ($oDoc.EndnoteSettings.StartAt() = ($iStartAt - 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sBefore <> Null) Then
		If Not IsString($sBefore) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDoc.EndnoteSettings.Prefix = $sBefore
		$iError = ($oDoc.EndnoteSettings.Prefix() = $sBefore) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sAfter <> Null) Then
		If Not IsString($sAfter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDoc.EndnoteSettings.Suffix = $sAfter
		$iError = ($oDoc.EndnoteSettings.Suffix() = $sAfter) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_EndnoteSettingsAutoNumber

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnoteSettingsStyles
; Description ...: Set or Retrieve Document Endnote Style settings.
; Syntax ........: _LOWriter_EndnoteSettingsStyles(Byref $oDoc[, $sParagraph = Null[, $sPage = Null[, $sTextArea = Null[, $sEndnoteArea = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParagraph          - [optional] a string value. Default is Null. The Endnote Text Paragraph Style.
;                  $sPage               - [optional] a string value. Default is Null. The Page Style to use for the Endnote
;				   +							pages.
;                  $sTextArea           - [optional] a string value. Default is Null. The Character Style to use for the Endnote
;				   +						anchor in the document text.
;                  $sEndnoteArea        - [optional] a string value. Default is Null. The Character Style to use for the Endnote
;				   +						number in the Endnote text.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sParagraph not a String.
;				   @Error 1 @Extended 3 Return 0 = Paragraph Style referenced in $sParagraph not found in Document.
;				   @Error 1 @Extended 4 Return 0 = $sPage not a String.
;				   @Error 1 @Extended 5 Return 0 = Page Style referenced in $sPage not found in Document.
;				   @Error 1 @Extended 6 Return 0 = $sTextArea not a String.
;				   @Error 1 @Extended 7 Return 0 = Character Style referenced in $sTextArea not found in Document.
;				   @Error 1 @Extended 8 Return 0 = $sEndnoteArea not a String.
;				   @Error 1 @Extended 9 Return 0 = Character Style referenced in $sEndnoteArea not found in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sParagraph
;				   |								2 = Error setting $sPage
;				   |								4 = Error setting $sTextArea
;				   |								8 = Error setting $sEndnoteArea
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStylesGetNames, _LOWriter_CharStylesGetNames, _LOWriter_PageStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnoteSettingsStyles(ByRef $oDoc, $sParagraph = Null, $sPage = Null, $sTextArea = Null, $sEndnoteArea = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $asENSettings[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sParagraph, $sPage, $sTextArea, $sEndnoteArea) Then
		__LOWriter_ArrayFill($asENSettings, __LOWriter_ParStyleNameToggle($oDoc.EndnoteSettings.ParaStyleName(), True), _
				__LOWriter_PageStyleNameToggle($oDoc.EndnoteSettings.PageStyleName(), True), _
				__LOWriter_CharStyleNameToggle($oDoc.EndnoteSettings.AnchorCharStyleName(), True), _
				__LOWriter_CharStyleNameToggle($oDoc.EndnoteSettings.CharStyleName(), True))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $asENSettings)
	EndIf

	If ($sParagraph <> Null) Then
		If Not IsString($sParagraph) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If Not _LOWriter_ParStyleExists($oDoc, $sParagraph) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$sParagraph = __LOWriter_ParStyleNameToggle($sParagraph)
		$oDoc.EndnoteSettings.ParaStyleName = $sParagraph
		$iError = ($oDoc.EndnoteSettings.ParaStyleName() = $sParagraph) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sPage <> Null) Then
		If Not IsString($sPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not _LOWriter_PageStyleExists($oDoc, $sPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$sPage = __LOWriter_PageStyleNameToggle($sPage)
		$oDoc.EndnoteSettings.PageStyleName = $sPage
		$iError = ($oDoc.EndnoteSettings.PageStyleName() = $sPage) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sTextArea <> Null) Then
		If Not IsString($sTextArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_CharStyleExists($oDoc, $sTextArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$sTextArea = __LOWriter_CharStyleNameToggle($sTextArea)
		$oDoc.EndnoteSettings.AnchorCharStyleName = $sTextArea
		$iError = ($oDoc.EndnoteSettings.AnchorCharStyleName() = $sTextArea) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sEndnoteArea <> Null) Then
		If Not IsString($sEndnoteArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not _LOWriter_CharStyleExists($oDoc, $sEndnoteArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$sEndnoteArea = __LOWriter_CharStyleNameToggle($sEndnoteArea)
		$oDoc.EndnoteSettings.CharStyleName = $sEndnoteArea
		$iError = ($oDoc.EndnoteSettings.CharStyleName() = $sEndnoteArea) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_EndnoteSettingsStyles

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_EndnotesGetList
; Description ...: Retrieve an array of Endnote Objects contained in a Document.
; Syntax ........: _LOWriter_EndnotesGetList(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Endnotes Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully searched for Endnotes, none contained in document.
;				   @Error 0 @Extended ? Return Array = Success. Successfully searched for Endnotes, Returning Array of Endnote
;				   +										Objects. @Extended set to number found.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_EndnoteDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_EndnotesGetList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oEndNotes
	Local $aoEndnotes[0]
	Local $iCount

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oEndNotes = $oDoc.getEndnotes()
	If Not IsObj($oEndNotes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$iCount = $oEndNotes.getCount()

	If ($iCount > 0) Then
		ReDim $aoEndnotes[$iCount]

		For $i = 0 To $iCount - 1
			$aoEndnotes[$i] = $oEndNotes.getByIndex($i)

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return ($iCount > 0) ? SetError($__LOW_STATUS_SUCCESS, $iCount, $aoEndnotes) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_EndnotesGetList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldAuthorInsert
; Description ...: Insert a Author Field.
; Syntax ........: _LOWriter_FieldAuthorInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sAuthor = Null[, $bFullName = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author Name to insert. Note, $bIsFixed
;				   +									must be set to True for this value to stay the same as set.
;                  $bFullName           - [optional] a boolean value. Default is Null. If True, displays the full name. Else
;				   +									Initials. For a Fixed custom name, this does nothing.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sAuthor not a String.
;				   @Error 1 @Extended 7 Return 0 = $bFullName not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.Author" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Author field, returning Author Field
;				   +										Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldAuthorModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldAuthorInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sAuthor = Null, $bFullName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oAuthField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oAuthField = $oDoc.createInstance("com.sun.star.text.TextField.Author")
	If Not IsObj($oAuthField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oAuthField.IsFixed = $bIsFixed
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oAuthField.Content = $sAuthor
	EndIf

	If ($bFullName <> Null) Then
		If Not IsBool($bFullName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oAuthField.FullName = $bFullName
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oAuthField, $bOverwrite)

	If ($sAuthor <> Null) Then ;Sometimes Author Disappears upon Insertion, make a check to re-set the Author value.
		If $oAuthField.Content <> $sAuthor And ($oAuthField.IsFixed() = True) Then $oAuthField.Content = $sAuthor
	EndIf

	If ($oAuthField.IsFixed() = False) Then $oAuthField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oAuthField)
EndFunc   ;==>_LOWriter_FieldAuthorInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldAuthorModify
; Description ...: Set or Retrieve a Author Field's settings.
; Syntax ........: _LOWriter_FieldAuthorModify(Byref $oAuthField[, $bIsFixed = Null[, $sAuthor = Null[, $bFullName = Null]]])
; Parameters ....: $oAuthField          - [in/out] an object. A Author field Object from a previous Insert or retrieval
;				   +									function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author Name to insert. Note, $bIsFixed
;				   +									must be set to True for this value to stay the same as set.
;                  $bFullName           - [optional] a boolean value. Default is Null. If True, displays the full name. Else
;				   +									Initials.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oAuthField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sAuthor not a String.
;				   @Error 1 @Extended 4 Return 0 = $bFullName not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sAuthor
;				   |								4 = Error setting $bFullName
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldAuthorInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldAuthorModify(ByRef $oAuthField, $bIsFixed = Null, $sAuthor = Null, $bFullName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avAuth[3]

	If Not IsObj($oAuthField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sAuthor, $bFullName) Then
		__LOWriter_ArrayFill($avAuth, $oAuthField.IsFIxed(), $oAuthField.Content(), $oAuthField.FullName())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avAuth)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oAuthField.IsFIxed = $bIsFixed
		$iError = ($oAuthField.IsFIxed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oAuthField.Content = $sAuthor
		$iError = ($oAuthField.Content() = $sAuthor) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bFullName <> Null) Then
		If Not IsBool($bFullName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oAuthField.FullName = $bFullName
		$iError = ($oAuthField.FullName() = $bFullName) ? $iError : BitOR($iError, 4)
	EndIf

	$oAuthField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldAuthorModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldChapterInsert
; Description ...: Insert a Chapter Field.
; Syntax ........: _LOWriter_FieldChapterInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $iChapFrmt = Null[, $iLevel = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iChapFrmt           - [optional] an integer value. Default is Null. The Display format for the Chapter Field.
;				   +									See Constants.
;                  $iLevel              - [optional] an integer value. Default is Null. The Chapter level to display. Min. 1,
;				   +									Max 10.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iChapFrmt not an integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iLevel not an Integer, less than 1 or greater than 10.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.Chapter" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Chapter field, returning Chapter Field
;				   +										Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Chapter Format Constants: $LOW_FIELD_CHAP_FRMT_NAME(0), The title of the chapter is displayed.
;							$LOW_FIELD_CHAP_FRMT_NUMBER(1), The number including prefix and suffix of the chapter is displayed.
;							$LOW_FIELD_CHAP_FRMT_NAME_NUMBER(2), The title and number, with prefix and suffix of the chapter are
;								displayed.
;							$LOW_FIELD_CHAP_FRMT_NO_PREFIX_SUFFIX(3), The name and number of the chapter are displayed.
;							$LOW_FIELD_CHAP_FRMT_DIGIT(4), The number of the chapter is displayed.
; Related .......: _LOWriter_FieldChapterModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldChapterInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $iChapFrmt = Null, $iLevel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oChapField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oChapField = $oDoc.createInstance("com.sun.star.text.TextField.Chapter")
	If Not IsObj($oChapField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iChapFrmt <> Null) Then
		If Not __LOWriter_IntIsBetween($iChapFrmt, $LOW_FIELD_CHAP_FRMT_NAME, $LOW_FIELD_CHAP_FRMT_DIGIT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oChapField.ChapterFormat = $iChapFrmt
	EndIf

	If ($iLevel <> Null) Then
		If Not __LOWriter_IntIsBetween($iLevel, 1, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oChapField.Level = ($iLevel - 1) ;Level is 0 Based
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oChapField, $bOverwrite)

	$oChapField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oChapField)
EndFunc   ;==>_LOWriter_FieldChapterInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldChapterModify
; Description ...: Set or Retrieve a Chapter Field's settings.
; Syntax ........: _LOWriter_FieldChapterModify(Byref $oChapField[, $iChapFrmt = Null[, $iLevel = Null]])
; Parameters ....: $oChapField          - [in/out] an object. A Chapter field Object from a previous Insert or retrieval
;				   +									function.
;                  $iChapFrmt           - [optional] an integer value. Default is Null. The Display format for the Chapter Field.
;				   +									See Constants.
;                  $iLevel              - [optional] an integer value. Default is Null. The Chapter level to display. Min. 1,
;				   +									Max 10.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oChapField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iChapFrmt not an integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iLevel not an Integer, less than 1o r greater than 10.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iChapFrmt
;				   |								2 = Error setting $iLevel
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Chapter Format Constants: $LOW_FIELD_CHAP_FRMT_NAME(0), The title of the chapter is displayed.
;							$LOW_FIELD_CHAP_FRMT_NUMBER(1), The number including prefix and suffix of the chapter is displayed.
;							$LOW_FIELD_CHAP_FRMT_NAME_NUMBER(2), The title and number, with prefix and suffix of the chapter are
;								displayed.
;							$LOW_FIELD_CHAP_FRMT_NO_PREFIX_SUFFIX(3), The name and number of the chapter are displayed.
;							$LOW_FIELD_CHAP_FRMT_DIGIT(4), The number of the chapter is displayed.
; Related .......: _LOWriter_FieldChapterInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldChapterModify(ByRef $oChapField, $iChapFrmt = Null, $iLevel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiChap[2]

	If Not IsObj($oChapField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iChapFrmt, $iLevel) Then
		__LOWriter_ArrayFill($aiChap, $oChapField.ChapterFormat(), ($oChapField.Level() + 1)) ;Level is 0 Based -- Add 1 to make it like L.O. UI
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiChap)
	EndIf

	If ($iChapFrmt <> Null) Then
		If Not __LOWriter_IntIsBetween($iChapFrmt, $LOW_FIELD_CHAP_FRMT_NAME, $LOW_FIELD_CHAP_FRMT_DIGIT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oChapField.ChapterFormat = $iChapFrmt
		$iError = ($oChapField.ChapterFormat() = $iChapFrmt) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iLevel <> Null) Then
		If Not __LOWriter_IntIsBetween($iLevel, 1, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oChapField.Level = ($iLevel - 1) ;Level is 0 Based
		$iError = ($oChapField.Level() = ($iLevel - 1)) ? $iError : BitOR($iError, 2)
	EndIf

	$oChapField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldChapterModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCombCharInsert
; Description ...: Insert a Combined Character Field.
; Syntax ........: _LOWriter_FieldCombCharInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sCharacters = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sCharacters         - [optional] a string value. Default is Null. The Characters to insert in a combined
;				   +									character field. Max String Length = 6.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sCharacters not a String.
;				   @Error 1 @Extended 6 Return 0 = $sCharacters longer than 6 characters.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.CombinedCharacters" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Combined Character field, returning
;				   +										Combined Character Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldCombCharModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCombCharInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sCharacters = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCombCharField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oCombCharField = $oDoc.createInstance("com.sun.star.text.TextField.CombinedCharacters")
	If Not IsObj($oCombCharField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sCharacters <> Null) Then
		If Not IsString($sCharacters) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If (StringLen($sCharacters) > 6) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oCombCharField.Content = $sCharacters
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oCombCharField, $bOverwrite)

	$oCombCharField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCombCharField)
EndFunc   ;==>_LOWriter_FieldCombCharInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCombCharModify
; Description ...: Set or Retrieve a Combined Character Field's settings.
; Syntax ........: _LOWriter_FieldCombCharModify(Byref $oCombCharField[, $sCharacters = Null])
; Parameters ....: $oCombCharField      - [in/out] an object. A Combined Character field Object from a previous Insert or
;				   +									retrieval function.
;                  $sCharacters         - [optional] a string value. Default is Null. The Characters to insert in a combined
;				   +									character field. Max String Length = 6.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCharacters not a String.
;				   @Error 1 @Extended 3 Return 0 = $sCharacters longer than 6 characters.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $sCharacters
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return String = Success. All optional parameters were set to Null, returning current
;				   +								Combined Characters value.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldCombCharInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCombCharModify(ByRef $oCombCharField, $sCharacters = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oCombCharField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sCharacters) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oCombCharField.Content())

	If Not IsString($sCharacters) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (StringLen($sCharacters) > 6) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oCombCharField.Content = $sCharacters
	$iError = ($oCombCharField.Content() = $sCharacters) ? $iError : BitOR($iError, 1)

	$oCombCharField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldCombCharModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCommentInsert
; Description ...: Insert a Comment field into a document at a cursor's position.
; Syntax ........: _LOWriter_FieldCommentInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sContent = Null[, $sAuthor = Null[, $tDateStruct = Null[, $sInitials = Null[, $sName = Null[, $bResolved = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sContent            - [optional] a string value. Default is Null. The content of the comment.
;                  $sAuthor             - [optional] a string value. Default is Null. The author of the comment.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display for the comment,
;				   +								created previously by _LOWriter_DateStructCreate. If left as Null, the
;				   +								current date is used.
;                  $sInitials           - [optional] a string value. Default is Null. The Initials of the creator.
;				   +								Libre Offive version 4.0 and up only.
;                  $sName               - [optional] a string value. Default is Null. The name of the creator.
;				   +								Libre Offive version 4.0 and up only.
;                  $bResolved           - [optional] a boolean value. Default is Null. If True, the comment is marked as
;				   +								resolved.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sContent not a String.
;				   @Error 1 @Extended 6 Return 0 = $sAuthor not a String.
;				   @Error 1 @Extended 7 Return 0 = $tDateStruct not an Object.
;				   @Error 1 @Extended 8 Return 0 = $sInitials not a String.
;				   @Error 1 @Extended 9 Return 0 = $sName not a String.
;				   @Error 1 @Extended 10 Return 0 = $bResolved not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.Annotation" Object.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office Version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted comment field, returning Comment
;				   +										Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldCommentModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DateStructCreate _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCommentInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sContent = Null, $sAuthor = Null, $tDateStruct = Null, $sInitials = Null, $sName = Null, $bResolved = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCommentField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oCommentField = $oDoc.createInstance("com.sun.star.text.TextField.Annotation")
	If Not IsObj($oCommentField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sContent <> Null) Then
		If Not IsString($sContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oCommentField.Content = $sContent
	Else
		$oCommentField.Content = " " ;If Content is Blank, Comment/Annotation will disappear.
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oCommentField.Author = $sAuthor
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oCommentField.DateTimeValue = $tDateStruct
	Else
		$oCommentField.DateTimeValue = _LOWriter_DateStructCreate()
	EndIf

	If ($sInitials <> Null) Then
		If Not IsString($sInitials) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oCommentField.Initials = $sInitials
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oCommentField.Name = $sName
	EndIf

	If ($bResolved <> Null) Then
		If Not IsBool($bResolved) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oCommentField.Resolved = $bResolved
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oCommentField, $bOverwrite)

	$oCommentField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCommentField)
EndFunc   ;==>_LOWriter_FieldCommentInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCommentModify
; Description ...: Set or retrieve Comment settings.
; Syntax ........: _LOWriter_FieldCommentModify(Byref $oDoc, Byref $oCommentField[, $sContent = Null[, $sAuthor = Null[, $tDateStruct = Null[, $sInitials = Null[, $sName = Null[, $bResolved = Null]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCommentField       - [in/out] an object. A Comment field Object from a previous Insert or retrieval
;				   +									function.
;                  $sContent            - [optional] a string value. Default is Null. The content of the comment.
;                  $sAuthor             - [optional] a string value. Default is Null. The author of the comment.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display for the comment,
;				   +								created previously by _LOWriter_DateStructCreate.
;                  $sInitials           - [optional] a string value. Default is Null. The Initials of the creator.
;				   +								Libre Offive version 4.0 and up only.
;                  $sName               - [optional] a string value. Default is Null. The name of the creator.
;				   +								Libre Offive version 4.0 and up only.
;                  $bResolved           - [optional] a boolean value. Default is Null. If True, the comment is marked as
;				   +								resolved.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCommentField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sContent not a String.
;				   @Error 1 @Extended 4 Return 0 = $sAuthor not a String.
;				   @Error 1 @Extended 5 Return 0 = $tDateStruct not an Object.
;				   @Error 1 @Extended 6 Return 0 = $sInitials not a String.
;				   @Error 1 @Extended 7 Return 0 = $sName not a String.
;				   @Error 1 @Extended 8 Return 0 = $bResolved not a Boolean.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office Version lower than 4.0.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $sContent
;				   |								2 = Error setting $sAuthor
;				   |								4 = Error setting $tDateStruct
;				   |								8 = Error setting $sInitials
;				   |								16 = Error setting $sName
;				   |								32 = Error setting $bResolved
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array If L.O. version is less than 4.0, else a 6
;				   +								Element Array with values in order of function
;				   +								parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldCommentInsert, _LOWriter_FieldsGetList, _LOWriter_DateStructCreate _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCommentModify(ByRef $oDoc, ByRef $oCommentField, $sContent = Null, $sAuthor = Null, $tDateStruct = Null, $sInitials = Null, $sName = Null, $bResolved = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avAnnot[4]
	Local $bRefresh = False

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCommentField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sContent, $sAuthor, $tDateStruct, $sInitials, $sName, $bResolved) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avAnnot, $oCommentField.Content(), $oCommentField.Author(), $oCommentField.DateTimeValue(), $oCommentField.Initials(), _
					$oCommentField.Name(), $oCommentField.Resolved())
		Else
			__LOWriter_ArrayFill($avAnnot, $oCommentField.Content(), $oCommentField.Author(), $oCommentField.DateTimeValue(), $oCommentField.Resolved())
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avAnnot)
	EndIf

	If ($sContent <> Null) Then
		If Not IsString($sContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oCommentField.Content = $sContent
		$iError = ($oCommentField.Content() = $sContent) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oCommentField.Author = $sAuthor
		$iError = ($oCommentField.Author() = $sAuthor) ? $iError : BitOR($iError, 2)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oCommentField.DateTimeValue = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oCommentField.DateTimeValue(), $tDateStruct)) ? $iError : BitOR($iError, 4)
		$bRefresh = True
	EndIf

	If ($sInitials <> Null) Then
		If Not IsString($sInitials) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oCommentField.Initials = $sInitials
		$iError = ($oCommentField.Initials() = $sInitials) ? $iError : BitOR($iError, 8)
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oCommentField.Name = $sName
		$iError = ($oCommentField.Name = $sName) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bResolved <> Null) Then
		If Not IsBool($bResolved) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oCommentField.Resolved = $bResolved
		$iError = ($oCommentField.Resolved() = $bResolved) ? $iError : BitOR($iError, 32)
		$bRefresh = True
	EndIf

	If ($bRefresh = True) Then
;~ $oCommentField = $oDoc.createInstance("com.sun.star.text.TextField.Annotation")
;~ If Not IsObj($oCommentField) Then Return  SetError($__LOW_STATUS_INIT_ERROR,1,0)
		$oDoc.Text.createTextCursorByRange($oCommentField.Anchor()).Text.insertTextContent($oCommentField.Anchor(), $oCommentField, True)
	EndIf



	$oCommentField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldCommentModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCondTextInsert
; Description ...: Insert a Conditional Text Field.
; Syntax ........: _LOWriter_FieldCondTextInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sCondition = Null[, $sThen = Null[, $sElse = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sCondition          - [optional] a string value. Default is Null. The condition to test.
;                  $sThen               - [optional] a string value. Default is Null. The text to display if the condition is
;				   +									true.
;                  $sElse               - [optional] a string value. Default is Null. The text to display if the condition is
;				   +									False.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sCondition not a String.
;				   @Error 1 @Extended 6 Return 0 = $sThen not a String.
;				   @Error 1 @Extended 7 Return 0 = $sElse not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.ConditionalText" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Conditional Text field, returning
;				   +										Conditional Text Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldCondTextModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCondTextInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sCondition = Null, $sThen = Null, $sElse = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCondTextField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oCondTextField = $oDoc.createInstance("com.sun.star.text.TextField.ConditionalText")
	If Not IsObj($oCondTextField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oCondTextField.Condition = $sCondition
	EndIf

	If ($sThen <> Null) Then
		If Not IsString($sThen) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oCondTextField.TrueContent = $sThen
	EndIf

	If ($sElse <> Null) Then
		If Not IsString($sElse) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oCondTextField.FalseContent = $sElse
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oCondTextField, $bOverwrite)

	$oCondTextField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCondTextField)
EndFunc   ;==>_LOWriter_FieldCondTextInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCondTextModify
; Description ...: Set or Retrieve a Conditional Text Field's settings.
; Syntax ........: _LOWriter_FieldCondTextModify(Byref $oCondTextField[, $sCondition = Null[, $sThen = Null[, $sElse = Null]]])
; Parameters ....: $oCondTextField      - [in/out] an object. A Conditional Text field Object from a previous Insert or retrieval
;				   +									function.
;                  $sCondition          - [optional] a string value. Default is Null. The condition to test.
;                  $sThen               - [optional] a string value. Default is Null. The text to display if the condition is
;				   +									 true.
;                  $sElse               - [optional] a string value. Default is Null. The text to display if the condition is
;				   +									False.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCondition not a String.
;				   @Error 1 @Extended 3 Return 0 = $sThen not a String.
;				   @Error 1 @Extended 4 Return 0 = $sElse not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sCondition
;				   |								2 = Error setting $sThen
;				   |								4 = Error setting $sElse
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters,
;				   +								with an additional parameter in the last element to indicate if the
;				   +								condition is evaluated as True or not.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldCondTextInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCondTextModify(ByRef $oCondTextField, $sCondition = Null, $sThen = Null, $sElse = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avCond[4]

	If Not IsObj($oCondTextField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sCondition, $sThen, $sElse) Then
		__LOWriter_ArrayFill($avCond, $oCondTextField.Condition(), $oCondTextField.TrueContent(), $oCondTextField.FalseContent(), _
				($oCondTextField.IsConditionTrue()) ? False : True) ; IsConditionTrue is Backwards.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avCond)
	EndIf

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oCondTextField.Condition = $sCondition
		$iError = ($oCondTextField.Condition() = $sCondition) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sThen <> Null) Then
		If Not IsString($sThen) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oCondTextField.TrueContent = $sThen
		$iError = ($oCondTextField.TrueContent() = $sThen) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sElse <> Null) Then
		If Not IsString($sElse) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oCondTextField.FalseContent = $sElse
		$iError = ($oCondTextField.FalseContent() = $sElse) ? $iError : BitOR($iError, 4)
	EndIf

	$oCondTextField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldCondTextModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldCurrentDisplayGet
; Description ...: Retrieve the current data displayed by a field.
; Syntax ........: _LOWriter_FieldCurrentDisplayGet(Byref $oField)
; Parameters ....: $oField              - [in/out] an object. A Field Object returned from a previous insert or retrieval
;				   +							function.
; Return values .: Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oField not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returning current Field display content in String format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note, a Comment Field will return an empty string, use the Comment Field function to retrieve the current
;					comment content. A DocInfoComments field will work with this function however.
;					Note: This will work for most Fields, but not all. Check and see which will work and which wont.
; Related .......: _LOWriter_FieldsGetList, _LOWriter_FieldsAdvGetList, _LOWriter_FieldsDocInfoGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldCurrentDisplayGet(ByRef $oField)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sPresentation

	If Not IsObj($oField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oField.supportsService("com.sun.star.text.textfield.ConditionalText")) Then ;COnditional Text Fields don't update "CurrentPresentation" setting,
		;so acquire the current display based on whether the condition is true or not.
		$sPresentation = ($oField.IsConditionTrue() = False) ? $oField.TrueContent() : $oField.FalseContent()
	Else
		$sPresentation = $oField.CurrentPresentation()
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, $sPresentation)
EndFunc   ;==>_LOWriter_FieldCurrentDisplayGet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDateTimeInsert
; Description ...: Insert a Date and/or Time Field.
; Syntax ........: _LOWriter_FieldDateTimeInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $tDateStruct = Null[, $bIsDate = Null[, $iOffset = Null[, $iDateFormatKey = Null]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display for the comment,
;				   +								created previously by _LOWriter_DateStructCreate.
;                  $bIsDate             - [optional] a boolean value. Default is Null. If set to True, field is considered as
;				   +									containing a Date, $iOffset will be evaluated in Days. Else False, Field
;				   +									will be considered as containing a Time, $iOffset will be evaluated in
;				   +									minutes.
;                  $iOffset             - [optional] an integer value. Default is Null. The offset to apply to the date, either
;				   +									in Minutes or Days, depending on the current $bIsDate setting.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $tDateStruct not an Object.
;				   @Error 1 @Extended 7 Return 0 = $bIsDate not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $iOffset not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 10 Return 0 = $iDateFormatKey not found in current Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.DateTime" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Date/Time field, returning
;				   +										Date/Time Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDateTimeModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DateStructCreate, _LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDateTimeInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $tDateStruct = Null, $bIsDate = Null, $iOffset = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDateTimeField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDateTimeField = $oDoc.createInstance("com.sun.star.text.TextField.DateTime")
	If Not IsObj($oDateTimeField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDateTimeField.IsFixed = $bIsFixed
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDateTimeField.DateTimeValue = $tDateStruct
	EndIf

	If ($bIsDate <> Null) Then
		If Not IsBool($bIsDate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDateTimeField.IsDate = $bIsDate
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oDateTimeField.Adjust = ($oDateTimeField.IsDate() = True) ? Int((1440 * $iOffset)) : $iOffset
		;If IsDate = True, Then Calculate number of minutes in a day (1440) times number of days to off set the Date/ Value,
		;else, just set it to Number of minutes called.
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oDateTimeField.NumberFormat = $iDateFormatKey
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDateTimeField, $bOverwrite)

	If ($tDateStruct <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If (__LOWriter_DateStructCompare($oDateTimeField.DateTimeValue(), $tDateStruct) = False) And ($oDateTimeField.IsFixed() = True) Then $oDateTimeField.DateTimeValue = $tDateStruct
	EndIf

	If ($oDateTimeField.IsFixed() = False) Then $oDateTimeField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDateTimeField)
EndFunc   ;==>_LOWriter_FieldDateTimeInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDateTimeModify
; Description ...: Set or Retrieve a Date/Time Field's settings.
; Syntax ........: _LOWriter_FieldDateTimeModify(Byref $oDoc, Byref $oDateTimeField[, $bIsFixed = Null[, $tDateStruct = Null[, $bIsDate = Null[, $iOffset = Null[, $iDateFormatKey = Null]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oDateTimeField      - [in/out] an object. A Date/Time field Object from a previous Insert or retrieval
;				   +									function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $tDateStruct         - [optional] a dll struct value. Default is Null. The date to display for the comment,
;				   +								created previously by _LOWriter_DateStructCreate.
;                  $bIsDate             - [optional] a boolean value. Default is Null. If set to True, field is considered as
;				   +									containing a Date, $iOffset will be evaluated in Days. Else False, Field
;				   +									will be considered as containing a Time, $iOffset will be evaluated in
;				   +									minutes.
;                  $iOffset             - [optional] an integer value. Default is Null. The offset to apply to the date, either
;				   +									in Minutes or Days, depending on the current $bIsDate setting.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $tDateStruct not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bIsDate not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iOffset not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iDateFormatKey not found in current Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $tDateStruct
;				   |								4 = Error setting $bIsDate
;				   |								8 = Error setting $iOffset
;				   |								16 = Error setting $iDateFormatKey
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDateTimeInsert, _LOWriter_FieldsGetList, _LOWriter_DateStructCreate,
;					_LOWriter_DateStructModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDateTimeModify(ByRef $oDoc, ByRef $oDateTimeField, $bIsFixed = Null, $tDateStruct = Null, $bIsDate = Null, $iOffset = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avDateTime[5]

	If Not IsObj($oDateTimeField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $tDateStruct, $bIsDate, $iOffset, $iDateFormatKey) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oDateTimeField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avDateTime, $oDateTimeField.IsFixed(), $oDateTimeField.DateTimeValue(), $oDateTimeField.IsDate(), _
				($oDateTimeField.IsDate() = True) ? Int(($oDateTimeField.Adjust() / 1440)) : $oDateTimeField.Adjust(), $iNumberFormat)
		;If IsDate = True, Then Calculate number of minutes in a day (1440) divided by number of days of off set. Otherwise
		;return Number of minutes.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDateTime)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDateTimeField.IsFixed = $bIsFixed
		$iError = ($oDateTimeField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($tDateStruct <> Null) Then
		If Not IsObj($tDateStruct) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDateTimeField.DateTimeValue = $tDateStruct
		$iError = (__LOWriter_DateStructCompare($oDateTimeField.DateTimeValue(), $tDateStruct)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bIsDate <> Null) Then
		If Not IsBool($bIsDate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDateTimeField.IsDate = $bIsDate
		$iError = ($oDateTimeField.IsDate() = $bIsDate) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$iOffset = ($oDateTimeField.IsDate() = True) ? Int((1440 * $iOffset)) : $iOffset
		;If IsDate = True, Then Calculate number of minutes in a day (1440) times number of days to off set the Date/ Value,
		;else, just set it to Number of minutes called.

		$oDateTimeField.Adjust = $iOffset
		$iError = ($oDateTimeField.Adjust() = $iOffset) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDateTimeField.NumberFormat = $iDateFormatKey
		$iError = ($oDateTimeField.NumberFormat() = ($iDateFormatKey)) ? $iError : BitOR($iError, 16)
	EndIf

	If ($oDateTimeField.IsFixed() = False) Then $oDateTimeField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDateTimeModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDelete
; Description ...: Delete a Field from a Document.
; Syntax ........: _LOWriter_FieldDelete(Byref $oDoc, Byref $oField[, $bDeleteMaster = False])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oField              - [in/out] an object. A Field Object from a previous Insert or retrieval function.
;                  $bDeleteMaster       - [optional] a boolean value. Default is False. If True, and the field has a Master
;				   +						Field, the MasterField (With any other dependent fields) will be deleted.
; Return values .: Success: 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bDeleteMaster not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving TextFieldMaster Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Field Master Array of dependent fields.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully deleted field and the Text Master Field.
;				   @Error 0 @Extended 1 Return 1 = Success. Successfully deleted field.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:  _LOWriter_FieldsGetList, _LOWriter_FieldsAdvGetList, _LOWriter_FieldsDocInfoGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDelete(ByRef $oDoc, ByRef $oField, $bDeleteMaster = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFieldMaster
	Local $aoDependents[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bDeleteMaster) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If ($bDeleteMaster = True) And ($oField.TextFieldMaster.Name() <> "") Then
		$oFieldMaster = $oField.TextFieldMaster()
		If Not IsObj($oFieldMaster) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

		$aoDependents = $oFieldMaster.DependentTextFields()
		If Not IsArray($aoDependents) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

		If (UBound($aoDependents) > 0) Then
			For $i = 0 To UBound($aoDependents) - 1
				$aoDependents[$i].Anchor.Text.removeTextContent($aoDependents[$i])
				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
			Next
		EndIf

		$oFieldMaster.dispose()
		Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
	EndIf

	$oField.Anchor.Text.removeTextContent($oField)

	Return SetError($__LOW_STATUS_SUCCESS, 1, 1)
EndFunc   ;==>_LOWriter_FieldDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCommentsInsert
; Description ...: Insert a Document Information Comments Field.
; Syntax ........: _LOWriter_FieldDocInfoCommentsInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sComments = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sComments           - [optional] a string value. Default is Null. The Comments text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sComments not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.Description" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Comments Field.
;				   +											Returning the Document Info Comments Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoCommentsModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCommentsInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sComments = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoCommentField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoCommentField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.Description")
	If Not IsObj($oDocInfoCommentField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoCommentField.IsFixed = $bIsFixed
	EndIf

	If ($sComments <> Null) Then
		If Not IsString($sComments) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoCommentField.Content = $sComments
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoCommentField, $bOverwrite)

	If ($sComments <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oDocInfoCommentField.Content <> $sComments And ($oDocInfoCommentField.IsFixed() = True) Then $oDocInfoCommentField.Content = $sComments
	EndIf

	If ($oDocInfoCommentField.IsFixed() = False) Then $oDocInfoCommentField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoCommentField)
EndFunc   ;==>_LOWriter_FieldDocInfoCommentsInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCommentsModify
; Description ...: Set or Retrieve a Document Information Comments Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoCommentsModify(Byref $oDocInfoCommentField[, $bIsFixed = Null[, $sComments = Null]])
; Parameters ....: $oDocInfoCommentField- [in/out] an object. A Doc Info Comments field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sComments           - [optional] a string value. Default is Null. The Comments text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoCommentField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sComments not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sComments
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoCommentsInsert, _LOWriter_FieldsGetList, _LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCommentsModify(ByRef $oDocInfoCommentField, $bIsFixed = Null, $sComments = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoCom[2]

	If Not IsObj($oDocInfoCommentField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sComments) Then
		__LOWriter_ArrayFill($avDocInfoCom, $oDocInfoCommentField.IsFixed(), $oDocInfoCommentField.Content())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoCom)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoCommentField.IsFixed = $bIsFixed
		$iError = ($oDocInfoCommentField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sComments <> Null) Then
		If Not IsString($sComments) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoCommentField.Content = $sComments
		$iError = ($oDocInfoCommentField.Content() = $sComments) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoCommentField.IsFixed() = False) Then $oDocInfoCommentField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoCommentsModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCreateAuthInsert
; Description ...: Insert a Document Information Create Author Field.
; Syntax ........: _LOWriter_FieldDocInfoCreateAuthInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sAuthor = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sAuthor not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.CreateAuthor" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Created By Author Field.
;				   +											Returning the Document Info Created By Author Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoCreateAuthModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocGenPropCreation
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCreateAuthInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoCreateAuthField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoCreateAuthField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.CreateAuthor")
	If Not IsObj($oDocInfoCreateAuthField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoCreateAuthField.IsFixed = $bIsFixed
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoCreateAuthField.Author = $sAuthor
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoCreateAuthField, $bOverwrite)

	If ($sAuthor <> Null) Then ;Sometimes Author Disappears upon Insertion, make a check to re-set the Author value.
		If $oDocInfoCreateAuthField.Author <> $sAuthor And ($oDocInfoCreateAuthField.IsFixed() = True) Then $oDocInfoCreateAuthField.Author = $sAuthor
	EndIf

	If ($oDocInfoCreateAuthField.IsFixed() = False) Then $oDocInfoCreateAuthField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoCreateAuthField)
EndFunc   ;==>_LOWriter_FieldDocInfoCreateAuthInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCreateAuthModify
; Description ...: Set or Retrieve a Document Information Create Author Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoCreateAuthModify(Byref $oDocInfoCreateAuthField[, $bIsFixed = Null[, $sAuthor = Null]])
; Parameters ....: $oDocInfoCreateAuthField- [in/out] an object. A Created By Author field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoCreateAuthField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sAuthor not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sAuthor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoCreateAuthInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocGenPropCreation
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCreateAuthModify(ByRef $oDocInfoCreateAuthField, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoModAuth[2]

	If Not IsObj($oDocInfoCreateAuthField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sAuthor) Then
		__LOWriter_ArrayFill($avDocInfoModAuth, $oDocInfoCreateAuthField.IsFixed(), $oDocInfoCreateAuthField.Author())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoModAuth)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoCreateAuthField.IsFixed = $bIsFixed
		$iError = ($oDocInfoCreateAuthField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoCreateAuthField.Author = $sAuthor
		$iError = ($oDocInfoCreateAuthField.Author() = $sAuthor) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoCreateAuthField.IsFixed() = False) Then $oDocInfoCreateAuthField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoCreateAuthModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCreateDateTimeInsert
; Description ...: Insert a Document Information Create Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoCreateDateTimeInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iDateFormatKey = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iDateFormatKey not found in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.CreateDateTime" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Created Date/Time Field.
;				   +											Returning the Document Info Created Date/Time Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoCreateDateTimeModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyList, _LOWriter_DocGenPropCreation
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCreateDateTimeInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoCreateDtTmField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoCreateDtTmField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.CreateDateTime")
	If Not IsObj($oDocInfoCreateDtTmField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoCreateDtTmField.IsFixed = $bIsFixed
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDocInfoCreateDtTmField.NumberFormat = $iDateFormatKey
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoCreateDtTmField, $bOverwrite)

	If ($oDocInfoCreateDtTmField.IsFixed() = False) Then $oDocInfoCreateDtTmField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoCreateDtTmField)
EndFunc   ;==>_LOWriter_FieldDocInfoCreateDateTimeInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoCreateDateTimeModify
; Description ...: Set or Retrieve a Document Information Create Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoCreateDateTimeModify(Byref $oDoc, Byref $oDocInfoCreateDtTmField[, $bIsFixed = Null[, $iDateFormatKey = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oDocInfoCreateDtTmField- [in/out] an object. A Created at Date/Time field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oDocInfoCreateDtTmField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iDateFormatKey not found in document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iDateFormatKey
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoCreateDateTimeInsert, _LOWriter_FieldsDocInfoGetList,
;					_LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyList, _LOWriter_DocGenPropCreation
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoCreateDateTimeModify(ByRef $oDoc, ByRef $oDocInfoCreateDtTmField, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avDocInfoCrtDate[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oDocInfoCreateDtTmField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $iDateFormatKey) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000 from
		;the value.
		$iNumberFormat = $oDocInfoCreateDtTmField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avDocInfoCrtDate, $oDocInfoCreateDtTmField.IsFixed(), $iNumberFormat)
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoCrtDate)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoCreateDtTmField.IsFixed = $bIsFixed
		$iError = ($oDocInfoCreateDtTmField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoCreateDtTmField.NumberFormat = $iDateFormatKey
		$iError = ($oDocInfoCreateDtTmField.NumberFormat() = $iDateFormatKey) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoCreateDtTmField.IsFixed() = False) Then $oDocInfoCreateDtTmField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoCreateDateTimeModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoEditTimeInsert
; Description ...: Insert a Document Information Total Editing Time Field.
; Syntax ........: _LOWriter_FieldDocInfoEditTimeInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iTimeFormatKey = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iTimeFormatKey      - [optional] an integer value. Default is Null. A Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iTimeFormatKey not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iTimeFormatKey not found in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.EditTime" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Total Editing Time Field.
;				   +											Returning the Document Info Total Editing Time Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: _LOWriter_FieldDocInfoEditTimeModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyList, _LOWriter_DocGenProp
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoEditTimeInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iTimeFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoEditTimeField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoEditTimeField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.EditTime")
	If Not IsObj($oDocInfoEditTimeField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoEditTimeField.IsFixed = $bIsFixed
	EndIf

	If ($iTimeFormatKey <> Null) Then
		If Not IsInt($iTimeFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iTimeFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDocInfoEditTimeField.NumberFormat = $iTimeFormatKey
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoEditTimeField, $bOverwrite)

	If ($oDocInfoEditTimeField.IsFixed() = False) Then $oDocInfoEditTimeField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoEditTimeField)
EndFunc   ;==>_LOWriter_FieldDocInfoEditTimeInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoEditTimeModify
; Description ...: Set or Retrieve a Document Information Total Editing Time Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoEditTimeModify(Byref $oDoc, Byref $oDocInfoEditTimeField[, $bIsFixed = Null[, $iTimeFormatKey = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oDocInfoEditTimeField- [in/out] an object. A Doc Info Total Editing Time field Object from a previous Insert
;				   +									or retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iTimeFormatKey      - [optional] an integer value. Default is Null. A Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oDocInfoEditTimeField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iTimeFormatKey not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTimeFormatKey not found in document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iTimeFormatKey
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoEditTimeInsert, _LOWriter_FieldsDocInfoGetList,
;					_LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyList, _LOWriter_DocGenProp
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoEditTimeModify(ByRef $oDoc, ByRef $oDocInfoEditTimeField, $bIsFixed = Null, $iTimeFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avDocInfoEditTm[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oDocInfoEditTimeField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $iTimeFormatKey) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oDocInfoEditTimeField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avDocInfoEditTm, $oDocInfoEditTimeField.IsFixed(), $iNumberFormat)
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoEditTm)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoEditTimeField.IsFixed = $bIsFixed
		$iError = ($oDocInfoEditTimeField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTimeFormatKey <> Null) Then
		If Not IsInt($iTimeFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not IsInt($iTimeFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoEditTimeField.NumberFormat = $iTimeFormatKey
		$iError = ($oDocInfoEditTimeField.NumberFormat() = $iTimeFormatKey) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoEditTimeField.IsFixed() = False) Then $oDocInfoEditTimeField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoEditTimeModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoKeywordsInsert
; Description ...: Insert a Document Information Keywords Field.
; Syntax ........: _LOWriter_FieldDocInfoKeywordsInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sKeywords = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sKeywords           - [optional] a string value. Default is Null. The Keywords text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sKeywords not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.Keywords" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Keywords Field.
;				   +											Returning the Document Info Keywords Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoKeywordsModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoKeywordsInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sKeywords = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoKeywordField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoKeywordField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.KeyWords")
	If Not IsObj($oDocInfoKeywordField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoKeywordField.IsFixed = $bIsFixed
	EndIf

	If ($sKeywords <> Null) Then
		If Not IsString($sKeywords) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoKeywordField.Content = $sKeywords
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoKeywordField, $bOverwrite)

	If ($sKeywords <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oDocInfoKeywordField.Content <> $sKeywords And ($oDocInfoKeywordField.IsFixed() = True) Then $oDocInfoKeywordField.Content = $sKeywords
	EndIf

	If ($oDocInfoKeywordField.IsFixed() = False) Then $oDocInfoKeywordField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoKeywordField)
EndFunc   ;==>_LOWriter_FieldDocInfoKeywordsInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoKeywordsModify
; Description ...: Set or Retrieve a Document Information Keywords Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoKeywordsModify(Byref $oDocInfoKeywordField[, $bIsFixed = Null[, $sKeywords = Null]])
; Parameters ....: $oDocInfoKeywordField- [in/out] an object. A Doc Info Keywords field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sKeywords           - [optional] a string value. Default is Null. The Keywords text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoKeywordField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sKeywords not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sKeywords
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoKeywordsInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoKeywordsModify(ByRef $oDocInfoKeywordField, $bIsFixed = Null, $sKeywords = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoKyWrd[2]

	If Not IsObj($oDocInfoKeywordField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sKeywords) Then
		__LOWriter_ArrayFill($avDocInfoKyWrd, $oDocInfoKeywordField.IsFixed(), $oDocInfoKeywordField.Content())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoKyWrd)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoKeywordField.IsFixed = $bIsFixed
		$iError = ($oDocInfoKeywordField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sKeywords <> Null) Then
		If Not IsString($sKeywords) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoKeywordField.Content = $sKeywords
		$iError = ($oDocInfoKeywordField.Content() = $sKeywords) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoKeywordField.IsFixed() = False) Then $oDocInfoKeywordField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoKeywordsModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoModAuthInsert
; Description ...: Insert a Document Information Modification Author Field.
; Syntax ........: _LOWriter_FieldDocInfoModAuthInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sAuthor = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;				   $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sAuthor not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.ChangeAuthor" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Modified By Author Field.
;				   +											Returning the Document Info Modified By Author Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoModAuthModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocGenPropModification
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoModAuthInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoModAuthField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoModAuthField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.ChangeAuthor")
	If Not IsObj($oDocInfoModAuthField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoModAuthField.IsFixed = $bIsFixed
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoModAuthField.Author = $sAuthor
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoModAuthField, $bOverwrite)

	If ($sAuthor <> Null) Then ;Sometimes Author Disappears upon Insertion, make a check to re-set the Author value.
		If $oDocInfoModAuthField.Author <> $sAuthor And ($oDocInfoModAuthField.IsFixed() = True) Then $oDocInfoModAuthField.Author = $sAuthor
	EndIf

	If ($oDocInfoModAuthField.IsFixed() = False) Then $oDocInfoModAuthField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoModAuthField)
EndFunc   ;==>_LOWriter_FieldDocInfoModAuthInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoModAuthModify
; Description ...: Set or Retrieve a Document Information Modification Author Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoModAuthModify(Byref $oDocInfoModAuthField[, $bIsFixed = Null[, $sAuthor = Null]])
; Parameters ....: $oDocInfoModAuthField- [in/out] an object. A Modified By Author field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoModAuthField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sAuthor not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sAuthor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoModAuthInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocGenPropModification
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoModAuthModify(ByRef $oDocInfoModAuthField, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoModAuth[2]

	If Not IsObj($oDocInfoModAuthField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sAuthor) Then
		__LOWriter_ArrayFill($avDocInfoModAuth, $oDocInfoModAuthField.IsFixed(), $oDocInfoModAuthField.Author())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoModAuth)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoModAuthField.IsFixed = $bIsFixed
		$iError = ($oDocInfoModAuthField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoModAuthField.Author = $sAuthor
		$iError = ($oDocInfoModAuthField.Author() = $sAuthor) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoModAuthField.IsFixed() = False) Then $oDocInfoModAuthField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoModAuthModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoModDateTimeInsert
; Description ...: Insert a Document Information Modification Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoModDateTimeInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iDateFormatKey = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iDateFormatKey not found in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.ChangeDateTime" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Modified Date/Time Field.
;				   +											Returning the Document Info Modified Date/Time Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoModDateTimeModify, _LOWriter_DateFormatKeyCreate,
;					_LOWriter_DateFormatKeyList, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocGenPropModification
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoModDateTimeInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoModDtTmField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoModDtTmField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.ChangeDateTime")
	If Not IsObj($oDocInfoModDtTmField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoModDtTmField.IsFixed = $bIsFixed
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDocInfoModDtTmField.NumberFormat = $iDateFormatKey
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoModDtTmField, $bOverwrite)

	If ($oDocInfoModDtTmField.IsFixed() = False) Then $oDocInfoModDtTmField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoModDtTmField)
EndFunc   ;==>_LOWriter_FieldDocInfoModDateTimeInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoModDateTimeModify
; Description ...: Set or Retrieve a Document Information Modification Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoModDateTimeModify(Byref $oDoc, Byref $oDocInfoModDtTmField[, $bIsFixed = Null[, $iDateFormatKey = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oDocInfoModDtTmField- [in/out] an object. A Modified at Date/Time field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oDocInfoPrintAuthField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iDateFormatKey not found in document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iDateFormatKey
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoModDateTimeInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DateFormatKeyCreate,
;					_LOWriter_DateFormatKeyList, _LOWriter_DocGenPropModification
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoModDateTimeModify(ByRef $oDoc, ByRef $oDocInfoModDtTmField, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avDocInfoModDate[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oDocInfoModDtTmField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $iDateFormatKey) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oDocInfoModDtTmField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avDocInfoModDate, $oDocInfoModDtTmField.IsFixed(), $iNumberFormat)
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoModDate)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoModDtTmField.IsFixed = $bIsFixed
		$iError = ($oDocInfoModDtTmField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoModDtTmField.NumberFormat = $iDateFormatKey
		$iError = ($oDocInfoModDtTmField.NumberFormat() = $iDateFormatKey) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoModDtTmField.IsFixed() = False) Then $oDocInfoModDtTmField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoModDateTimeModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoPrintAuthInsert
; Description ...: Insert a Document Information Last Print Author Field.
; Syntax ........: _LOWriter_FieldDocInfoPrintAuthInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sAuthor = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sAuthor not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.PrintAuthor" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Printed By Author Field.
;				   +											Returning the Document Info Printed By Author Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoPrintAuthModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocGenPropPrint
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoPrintAuthInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoPrintAuthField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoPrintAuthField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.PrintAuthor")
	If Not IsObj($oDocInfoPrintAuthField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoPrintAuthField.IsFixed = $bIsFixed
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoPrintAuthField.Author = $sAuthor
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoPrintAuthField, $bOverwrite)

	If ($sAuthor <> Null) Then ;Sometimes Author Disappears upon Insertion, make a check to re-set the Author value.
		If $oDocInfoPrintAuthField.Author <> $sAuthor And ($oDocInfoPrintAuthField.IsFixed() = True) Then $oDocInfoPrintAuthField.Author = $sAuthor
	EndIf

	If ($oDocInfoPrintAuthField.IsFixed() = False) Then $oDocInfoPrintAuthField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoPrintAuthField)
EndFunc   ;==>_LOWriter_FieldDocInfoPrintAuthInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoPrintAuthModify
; Description ...: Set or Retrieve a Document Information Last Print Author Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoPrintAuthModify(Byref $oDocInfoPrintAuthField[, $bIsFixed = Null[, $sAuthor = Null]])
; Parameters ....: $oDocInfoPrintAuthField- [in/out] an object. A Printed By Author field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sAuthor             - [optional] a string value. Default is Null. The Author's name, note, $bIsFixed but be
;				   +									set to True in order for this to remain as set.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoPrintAuthField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sAuthor not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sAuthor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoPrintAuthInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocGenPropPrint
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoPrintAuthModify(ByRef $oDocInfoPrintAuthField, $bIsFixed = Null, $sAuthor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoModAuth[2]

	If Not IsObj($oDocInfoPrintAuthField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sAuthor) Then
		__LOWriter_ArrayFill($avDocInfoModAuth, $oDocInfoPrintAuthField.IsFixed(), $oDocInfoPrintAuthField.Author())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoModAuth)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoPrintAuthField.IsFixed = $bIsFixed
		$iError = ($oDocInfoPrintAuthField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sAuthor <> Null) Then
		If Not IsString($sAuthor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoPrintAuthField.Author = $sAuthor
		$iError = ($oDocInfoPrintAuthField.Author() = $sAuthor) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoPrintAuthField.IsFixed() = False) Then $oDocInfoPrintAuthField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoPrintAuthModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoPrintDateTimeInsert
; Description ...: Insert a Document Information Last Print Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoPrintDateTimeInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iDateFormatKey = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iDateFormatKey not found in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.PrintDateTime" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Printed Date/Time Field.
;				   +											Returning the Document Info Printed Date/Time Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoPrintDateTimeModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DateFormatKeyCreate, _LOWriter_DateFormatKeyList, _LOWriter_DocGenPropPrint
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoPrintDateTimeInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoPrintDtTmField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoPrintDtTmField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.PrintDateTime")
	If Not IsObj($oDocInfoPrintDtTmField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoPrintDtTmField.IsFixed = $bIsFixed
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDocInfoPrintDtTmField.NumberFormat = $iDateFormatKey
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoPrintDtTmField, $bOverwrite)

	If ($oDocInfoPrintDtTmField.IsFixed() = False) Then $oDocInfoPrintDtTmField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoPrintDtTmField)
EndFunc   ;==>_LOWriter_FieldDocInfoPrintDateTimeInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoPrintDateTimeModify
; Description ...: Set or Retrieve a Document Information Last Print Date/Time Field.
; Syntax ........: _LOWriter_FieldDocInfoPrintDateTimeModify(Byref $oDoc, Byref $oDocInfoPrintDtTmField[, $bIsFixed = Null[, $iDateFormatKey = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oDocInfoPrintDtTmField- [in/out] an object. A Printed at Date/Time field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iDateFormatKey      - [optional] an integer value. Default is Null. A Date or Time Format Key returned from
;				   +									a previous _LOWriter_DateFormatKeyCreate or _LOWriter_DateFormatKeyList
;				   +									function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oDocInfoPrintDtTmField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iDateFormatKey not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iDateFormatKey not found in document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iDateFormatKey
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoPrintDateTimeInsert,  _LOWriter_FieldsDocInfoGetList, _LOWriter_DateFormatKeyCreate,
;					_LOWriter_DateFormatKeyList, _LOWriter_DocGenPropPrint
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoPrintDateTimeModify(ByRef $oDoc, ByRef $oDocInfoPrintDtTmField, $bIsFixed = Null, $iDateFormatKey = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avDocInfoPrntDate[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oDocInfoPrintDtTmField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $iDateFormatKey) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oDocInfoPrintDtTmField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avDocInfoPrntDate, $oDocInfoPrintDtTmField.IsFixed(), $iNumberFormat)
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoPrntDate)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoPrintDtTmField.IsFixed = $bIsFixed
		$iError = ($oDocInfoPrintDtTmField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iDateFormatKey <> Null) Then
		If Not IsInt($iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not _LOWriter_DateFormatKeyExists($oDoc, $iDateFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoPrintDtTmField.NumberFormat = $iDateFormatKey
		$iError = ($oDocInfoPrintDtTmField.NumberFormat() = $iDateFormatKey) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoPrintDtTmField.IsFixed() = False) Then $oDocInfoPrintDtTmField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoPrintDateTimeModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoRevNumInsert
; Description ...: Insert a Document Information Revision Number Field.
; Syntax ........: _LOWriter_FieldDocInfoRevNumInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iRevNum = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iRevNum             - [optional] a Integer value. Default is Null. The Revision Number Integer to display,
;				   +									note, $bIsFixed must be True for this to be displayed.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iRevNum not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.Revision" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Revision Number Field.
;				   +											Returning the Document Info Revision Number Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoRevNumModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocGenProp
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoRevNumInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iRevNum = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoRevNumField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoRevNumField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.Revision")
	If Not IsObj($oDocInfoRevNumField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoRevNumField.IsFixed = $bIsFixed
	EndIf

	If ($iRevNum <> Null) Then
		If Not IsInt($iRevNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoRevNumField.Revision = $iRevNum
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoRevNumField, $bOverwrite)

	If ($iRevNum <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oDocInfoRevNumField.Revision <> $iRevNum And ($oDocInfoRevNumField.IsFixed() = True) Then $oDocInfoRevNumField.Revision = $iRevNum
	EndIf

	If ($oDocInfoRevNumField.IsFixed() = False) Then $oDocInfoRevNumField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoRevNumField)
EndFunc   ;==>_LOWriter_FieldDocInfoRevNumInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoRevNumModify
; Description ...: Set or Retrieve a Document Information Revision Number Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoRevNumModify(Byref $oDocInfoRevNumField[, $bIsFixed = Null[, $iRevNum = Null]])
; Parameters ....: $oDocInfoRevNumField - [in/out] an object. A Doc Info Revision Number field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $iRevNum             - [optional] a Integer value. Default is Null. The Revision Number Integer to display,
;				   +									note, $bIsFixed must be True for this to be displayed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoRevNumField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $iRevNum not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iRevNum
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoRevNumInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocGenProp
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoRevNumModify(ByRef $oDocInfoRevNumField, $bIsFixed = Null, $iRevNum = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoRev[2]

	If Not IsObj($oDocInfoRevNumField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $iRevNum) Then
		__LOWriter_ArrayFill($avDocInfoRev, $oDocInfoRevNumField.IsFixed(), $oDocInfoRevNumField.Revision())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoRev)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoRevNumField.IsFixed = $bIsFixed
		$iError = ($oDocInfoRevNumField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRevNum <> Null) Then
		If Not IsInt($iRevNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoRevNumField.Revision = $iRevNum
		$iError = ($oDocInfoRevNumField.Revision() = $iRevNum) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoRevNumField.IsFixed() = False) Then $oDocInfoRevNumField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoRevNumModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoSubjectInsert
; Description ...: Insert a Document Information Subject Field.
; Syntax ........: _LOWriter_FieldDocInfoSubjectInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sSubject = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sSubject            - [optional] a string value. Default is Null. The Subject text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sSubject not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.Subject" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Subject Field.
;				   +											Returning the Document Info Subject Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoSubjectModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoSubjectInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sSubject = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoSubField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoSubField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.Subject")
	If Not IsObj($oDocInfoSubField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoSubField.IsFixed = $bIsFixed
	EndIf

	If ($sSubject <> Null) Then
		If Not IsString($sSubject) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoSubField.Content = $sSubject
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoSubField, $bOverwrite)

	If ($sSubject <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oDocInfoSubField.Content <> $sSubject And ($oDocInfoSubField.IsFixed() = True) Then $oDocInfoSubField.Content = $sSubject
	EndIf

	If ($oDocInfoSubField.IsFixed() = False) Then $oDocInfoSubField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoSubField)
EndFunc   ;==>_LOWriter_FieldDocInfoSubjectInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoSubjectModify
; Description ...: Set or Retrieve a Document Information Subject Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoSubjectModify(Byref $oDocInfoSubField[, $bIsFixed = Null[, $sSubject = Null]])
; Parameters ....: $oDocInfoSubField    - [in/out] an object. A Doc Info Subject field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sSubject            - [optional] a string value. Default is Null. The Subject text to display, note,
;				   +									$bIsFixed must be True for this to be displayed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoSubField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sSubject not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sSubject
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoSubjectInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoSubjectModify(ByRef $oDocInfoSubField, $bIsFixed = Null, $sSubject = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoSub[2]

	If Not IsObj($oDocInfoSubField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sSubject) Then
		__LOWriter_ArrayFill($avDocInfoSub, $oDocInfoSubField.IsFixed(), $oDocInfoSubField.Content())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoSub)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoSubField.IsFixed = $bIsFixed
		$iError = ($oDocInfoSubField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sSubject <> Null) Then
		If Not IsString($sSubject) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoSubField.Content = $sSubject
		$iError = ($oDocInfoSubField.Content() = $sSubject) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoSubField.IsFixed() = False) Then $oDocInfoSubField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoSubjectModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoTitleInsert
; Description ...: Insert a Document Information Title Field.
; Syntax ........: _LOWriter_FieldDocInfoTitleInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sTitle = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sTitle              - [optional] a string value. Default is Null. The Title text to display, note, $bIsFixed
;				   +									 must be True for this to be displayed.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sTitle not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.textfield.docinfo.Title" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Document Info Title Field.
;				   +											Returning the Document Info Title Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldDocInfoTitleModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoTitleInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sTitle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oDocInfoTitleField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oDocInfoTitleField = $oDoc.createInstance("com.sun.star.text.textfield.docinfo.Title")
	If Not IsObj($oDocInfoTitleField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDocInfoTitleField.IsFixed = $bIsFixed
	EndIf

	If ($sTitle <> Null) Then
		If Not IsString($sTitle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDocInfoTitleField.Content = $sTitle
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oDocInfoTitleField, $bOverwrite)

	If ($sTitle <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oDocInfoTitleField.Content <> $sTitle And ($oDocInfoTitleField.IsFixed() = True) Then $oDocInfoTitleField.Content = $sTitle
	EndIf

	If ($oDocInfoTitleField.IsFixed() = False) Then $oDocInfoTitleField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDocInfoTitleField)
EndFunc   ;==>_LOWriter_FieldDocInfoTitleInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldDocInfoTitleModify
; Description ...: Set or Retrieve a Document Information Title Field's settings.
; Syntax ........: _LOWriter_FieldDocInfoTitleModify(Byref $oDocInfoTitleField[, $bIsFixed = Null[, $sTitle = Null]])
; Parameters ....: $oDocInfoTitleField  - [in/out] an object. A Doc Info Title field Object from a previous Insert or
;				   +									retrieval function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sTitle              - [optional] a string value. Default is Null. The Title text to display, note, $bIsFixed
;				   +									 must be True for this to be displayed.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDocInfoTitleField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sTitle not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sTitle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldDocInfoTitleInsert, _LOWriter_FieldsDocInfoGetList, _LOWriter_DocDescription
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldDocInfoTitleModify(ByRef $oDocInfoTitleField, $bIsFixed = Null, $sTitle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDocInfoTitle[2]

	If Not IsObj($oDocInfoTitleField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sTitle) Then
		__LOWriter_ArrayFill($avDocInfoTitle, $oDocInfoTitleField.IsFixed(), $oDocInfoTitleField.Content())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDocInfoTitle)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDocInfoTitleField.IsFixed = $bIsFixed
		$iError = ($oDocInfoTitleField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sTitle <> Null) Then
		If Not IsString($sTitle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDocInfoTitleField.Content = $sTitle
		$iError = ($oDocInfoTitleField.Content() = $sTitle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($oDocInfoTitleField.IsFixed() = False) Then $oDocInfoTitleField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldDocInfoTitleModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFileNameInsert
; Description ...: Insert a File Name Field.
; Syntax ........: _LOWriter_FieldFileNameInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $iFormat = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;				   $iFormat             - [optional] an integer value. Default is Null. The Data Format to  display. See
;				   +									Constants.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iFormat not an Integer, Less than 0, or greater than 3. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.FileName" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted File Name field, returning
;				   +										File Name Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Until at least L.O. Version 7.3.4.2, there is a bug where the wrong Path Format type is displayed when the
;						content is set to Fixed = True. For example, $LOW_FIELD_FILENAME_NAME_AND_EXT, displays in the format
;							of $LOW_FIELD_FILENAME_NAME.
;File Name Constants: $LOW_FIELD_FILENAME_FULL_PATH(0), The content of the URL is completely displayed.
;						$LOW_FIELD_FILENAME_PATH(1), Only the path of the file is displayed.
;						$LOW_FIELD_FILENAME_NAME(2), Only the name of the file without the file extension is displayed.
;						$LOW_FIELD_FILENAME_NAME_AND_EXT(3), The file name including the file extension is displayed.
; Related .......: _LOWriter_FieldFileNameModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFileNameInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $iFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFileNameField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oFileNameField = $oDoc.createInstance("com.sun.star.text.TextField.FileName")
	If Not IsObj($oFileNameField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFileNameField.IsFixed = $bIsFixed
	EndIf

	If ($iFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iFormat, $LOW_FIELD_FILENAME_FULL_PATH, $LOW_FIELD_FILENAME_NAME_AND_EXT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFileNameField.FileFormat = $iFormat
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oFileNameField, $bOverwrite)

	If ($oFileNameField.IsFixed() = False) Then $oFileNameField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFileNameField)
EndFunc   ;==>_LOWriter_FieldFileNameInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFileNameModify
; Description ...: Set or Retrieve a File Name Field's settings.
; Syntax ........: _LOWriter_FieldFileNameModify(Byref $oFileNameField[, $bIsFixed = Null[, $iFormat = Null]])
; Parameters ....: $oFileNameField      - [in/out] an object. A File Name field Object from a previous Insert or retrieval
;				   +									function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;				   $iFormat             - [optional] an integer value. Default is Null. The Data Format to  display. See
;				   +									Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFileNameField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $iFormat not an Integer, Less than 0, or greater than 3. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $iFormat
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Until at least L.O. Version 7.3.4.2, there is a bug where the wrong Path Format type is displayed when the
;						content is set to Fixed = True. For example, $LOW_FIELD_FILENAME_NAME_AND_EXT, displays in the format
;							of $LOW_FIELD_FILENAME_NAME.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;File Name Constants: $LOW_FIELD_FILENAME_FULL_PATH(0), The content of the URL is completely displayed.
;						$LOW_FIELD_FILENAME_PATH(1), Only the path of the file is displayed.
;						$LOW_FIELD_FILENAME_NAME(2), Only the name of the file without the file extension is displayed.
;						$LOW_FIELD_FILENAME_NAME_AND_EXT(3), The file name including the file extension is displayed.
; Related .......: _LOWriter_FieldFileNameInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFileNameModify(ByRef $oFileNameField, $bIsFixed = Null, $iFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFileName[2]

	If Not IsObj($oFileNameField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iFormat, $bIsFixed) Then
		__LOWriter_ArrayFill($avFileName, $oFileNameField.IsFixed(), $oFileNameField.FileFormat())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFileName)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFileNameField.IsFixed = $bIsFixed
		$iError = ($oFileNameField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iFormat, $LOW_FIELD_FILENAME_FULL_PATH, $LOW_FIELD_FILENAME_NAME_AND_EXT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFileNameField.FileFormat = $iFormat
		$iError = ($oFileNameField.FileFormat() = $iFormat) ? $iError : BitOR($iError, 1)
	EndIf

	If ($oFileNameField.IsFixed() = False) Then $oFileNameField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldFileNameModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncHiddenParInsert
; Description ...: Insert a Hidden Paragraph Field.
; Syntax ........: _LOWriter_FieldFuncHiddenParInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sCondition = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sCondition          - [optional] a string value. Default is Null. The condition to evaluate.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sCondition not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.HiddenParagraph" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Hidden Paragraph Field. Returning
;				   +											the Hidden Paragraph Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldFuncHiddenParModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncHiddenParInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sCondition = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oHidParField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oHidParField = $oDoc.createInstance("com.sun.star.text.TextField.HiddenParagraph")
	If Not IsObj($oHidParField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oHidParField.Condition = $sCondition
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oHidParField, $bOverwrite)

	$oHidParField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oHidParField)
EndFunc   ;==>_LOWriter_FieldFuncHiddenParInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncHiddenParModify
; Description ...: Set or Retrieve a Hidden Paragraph Field's settings.
; Syntax ........: _LOWriter_FieldFuncHiddenParModify(Byref $oHidParField[, $sCondition = Null])
; Parameters ....: $oHidParField        - [in/out] an object. A Hidden Paragraph field Object from a previous Insert or retrieval
;				   +									function.
;                  $sCondition          - [optional] a string value. Default is Null. The condition to evaluate.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oHidParField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCondition not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $sCondition
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
;				   +								The second Element is a boolean whether the Paragraph is Hidden(True) or
;				   +								Visible(False).
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldFuncHiddenParInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncHiddenParModify(ByRef $oHidParField, $sCondition = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avHidPar[2]

	If Not IsObj($oHidParField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sCondition) Then
		__LOWriter_ArrayFill($avHidPar, $oHidParField.Condition(), ($oHidParField.IsHidden()) ? False : True) ;"IsHidden" Is Backwards
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avHidPar)
	EndIf

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oHidParField.Condition = $sCondition
		$iError = ($oHidParField.Condition() = $sCondition) ? $iError : BitOR($iError, 1)
	EndIf

	$oHidParField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldFuncHiddenParModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncHiddenTextInsert
; Description ...: Insert a Hidden Text Field.
; Syntax ........: _LOWriter_FieldFuncHiddenTextInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sCondition = Null[, $sText = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sCondition          - [optional] a string value. Default is Null. The Condition to evaluate.
;                  $sText               - [optional] a string value. Default is Null. The Text to show or hide.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sCondition not a String.
;				   @Error 1 @Extended 6 Return 0 = $sText not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.HiddenText" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Hidden Text Field. Returning
;				   +											the Hidden Text Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldFuncHiddenTextModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncHiddenTextInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sCondition = Null, $sText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oHidTxtField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oHidTxtField = $oDoc.createInstance("com.sun.star.text.TextField.HiddenText")
	If Not IsObj($oHidTxtField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oHidTxtField.Condition = $sCondition
	EndIf

	If ($sText <> Null) Then
		If Not IsString($sText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oHidTxtField.Content = $sText
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oHidTxtField, $bOverwrite)

	$oHidTxtField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oHidTxtField)
EndFunc   ;==>_LOWriter_FieldFuncHiddenTextInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncHiddenTextModify
; Description ...: Set or Retrieve a Hidden Text Field's settings.
; Syntax ........: _LOWriter_FieldFuncHiddenTextModify(Byref $oHidTxtField[, $sCondition = Null[, $sText = Null]])
; Parameters ....: $oHidTxtField        - [in/out] an object. A Hidden Text field Object from a previous Insert or retrieval
;				   +									function.
;                  $sCondition          - [optional] a string value. Default is Null. The Condition to evaluate.
;                  $sText               - [optional] a string value. Default is Null. The Text to show or hide.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oHidTxtField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCondition not a String.
;				   @Error 1 @Extended 3 Return 0 = $sText not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sCondition
;				   |								2 = Error setting $sText
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
;				   +								The Third Element is a boolean whether the Text is Hidden(True) Or
;				   +								Visible(False).
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldFuncHiddenTextInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncHiddenTextModify(ByRef $oHidTxtField, $sCondition = Null, $sText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avHidPar[3]

	If Not IsObj($oHidTxtField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sCondition, $sText) Then
		__LOWriter_ArrayFill($avHidPar, $oHidTxtField.Condition(), $oHidTxtField.Content(), ($oHidTxtField.IsHidden()) ? False : True) ;"IsHidden" Is Backwards
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avHidPar)
	EndIf

	If ($sCondition <> Null) Then
		If Not IsString($sCondition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oHidTxtField.Condition = $sCondition
		$iError = ($oHidTxtField.Condition() = $sCondition) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sText <> Null) Then
		If Not IsString($sText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oHidTxtField.Content = $sText
		$iError = ($oHidTxtField.Content() = $sText) ? $iError : BitOR($iError, 2)
	EndIf

	$oHidTxtField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldFuncHiddenTextModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncInputInsert
; Description ...: Insert a Input Field.
; Syntax ........: _LOWriter_FieldFuncInputInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $sReference = Null[, $sText = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sReference          - [optional] a string value. Default is Null. The Reference to display for the input
;				   +								field.
;                  $sText               - [optional] a string value. Default is Null. The Text to insert in the Input Field.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sReference not a String.
;				   @Error 1 @Extended 6 Return 0 = $sText not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.Input" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Input Field. Returning
;				   +											the Input Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldFuncInputModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncInputInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sReference = Null, $sText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oInputField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oInputField = $oDoc.createInstance("com.sun.star.text.TextField.Input")
	If Not IsObj($oInputField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sReference <> Null) Then
		If Not IsString($sReference) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oInputField.Hint = $sReference
	EndIf

	If ($sText <> Null) Then
		If Not IsString($sText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oInputField.Content = $sText
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oInputField, $bOverwrite)

	$oInputField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oInputField)
EndFunc   ;==>_LOWriter_FieldFuncInputInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncInputModify
; Description ...: Set or Retrieve a Input Field's settings.
; Syntax ........: _LOWriter_FieldFuncInputModify(Byref $oInputField[, $sReference = Null[, $sText = Null]])
; Parameters ....: $oInputField         - [in/out] an object. A Input field Object from a previous Insert or retrieval
;				   +									function.
;                  $sReference          - [optional] a string value. Default is Null. The Reference to display for the input
;				   +								field.
;                  $sText               - [optional] a string value. Default is Null. The Text to insert in the Input Field.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oHidTxtField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sReference not a String.
;				   @Error 1 @Extended 3 Return 0 = $sText not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sReference
;				   |								2 = Error setting $sText
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldFuncInputInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncInputModify(ByRef $oInputField, $sReference = Null, $sText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $asInput[2]

	If Not IsObj($oInputField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sReference, $sText) Then
		__LOWriter_ArrayFill($asInput, $oInputField.Hint(), $oInputField.Content())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $asInput)
	EndIf

	If ($sReference <> Null) Then
		If Not IsString($sReference) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oInputField.Hint = $sReference
		$iError = ($oInputField.Hint() = $sReference) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sText <> Null) Then
		If Not IsString($sText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oInputField.Content = $sText
		$iError = ($oInputField.Content() = $sText) ? $iError : BitOR($iError, 2)
	EndIf

	$oInputField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldFuncInputModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncPlaceholderInsert
; Description ...: Insert a Placeholder Field.
; Syntax ........: _LOWriter_FieldFuncPlaceholderInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $iPHolderType = Null[, $sPHolderName = Null[, $sReference = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iPHolderType        - [optional] an integer value. Default is Null. The type of Placeholder to insert. See
;				   +									Constants.
;                  $sPHolderName        - [optional] a string value. Default is Null. The Placeholder's name.
;                  $sReference          - [optional] a string value. Default is Null. A Reference to display when the mouse
;				   +									hovers the Placeholder.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iPHolderType not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $sPHolderName not a String.
;				   @Error 1 @Extended 7 Return 0 = $sReference not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.JumpEdit" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Placeholder Field. Returning
;				   +											the Placeholder Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Placehold Type Constants: $LOW_FIELD_PLACEHOLD_TYPE_TEXT(0), The field represents a piece of text.
;							$LOW_FIELD_PLACEHOLD_TYPE_TABLE(1), The field initiates the insertion of a text table.
;							$LOW_FIELD_PLACEHOLD_TYPE_FRAME(2), The field initiates the insertion of a text frame.
;							$LOW_FIELD_PLACEHOLD_TYPE_GRAPHIC(3), The field initiates the insertion of a graphic object.
;							$LOW_FIELD_PLACEHOLD_TYPE_OBJECT(4), The field initiates the insertion of an embedded object.
; Related .......: _LOWriter_FieldFuncPlaceholderModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncPlaceholderInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $iPHolderType = Null, $sPHolderName = Null, $sReference = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPHolderField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oPHolderField = $oDoc.createInstance("com.sun.star.text.TextField.JumpEdit")
	If Not IsObj($oPHolderField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iPHolderType <> Null) Then
		If Not __LOWriter_IntIsBetween($iPHolderType, $LOW_FIELD_PLACEHOLD_TYPE_TEXT, $LOW_FIELD_PLACEHOLD_TYPE_OBJECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPHolderField.PlaceHolderType = $iPHolderType
	EndIf

	If ($sPHolderName <> Null) Then
		If Not IsString($sPHolderName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPHolderField.PlaceHolder = $sPHolderName
	EndIf

	If ($sReference <> Null) Then
		If Not IsString($sReference) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPHolderField.Hint = $sReference
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oPHolderField, $bOverwrite)

	$oPHolderField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPHolderField)
EndFunc   ;==>_LOWriter_FieldFuncPlaceholderInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldFuncPlaceholderModify
; Description ...: Set or Retrieve a Placeholder Field's settings.
; Syntax ........: _LOWriter_FieldFuncPlaceholderModify(Byref $oPHolderField[, $iPHolderType = Null[, $sPHolderName = Null[, $sReference = Null]]])
; Parameters ....: $oPHolderField       - [in/out] an object. A Placeholder field Object from a previous Insert or retrieval
;				   +									function.
;                  $iPHolderType        - [optional] an integer value. Default is Null. The type of Placeholder to insert. See
;				   +									Constants.
;                  $sPHolderName        - [optional] a string value. Default is Null. The Placeholder's name.
;                  $sReference          - [optional] a string value. Default is Null. A Reference to display when the mouse
;				   +									hovers the Placeholder.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPHolderField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iPHolderType not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $sPHolderName not a String.
;				   @Error 1 @Extended 4 Return 0 = $sReference not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iPHolderType
;				   |								2 = Error setting $sPHolderName
;				   |								4 = Error setting $sReference
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Placehold Type Constants: $LOW_FIELD_PLACEHOLD_TYPE_TEXT(0), The field represents a piece of text.
;							$LOW_FIELD_PLACEHOLD_TYPE_TABLE(1), The field initiates the insertion of a text table.
;							$LOW_FIELD_PLACEHOLD_TYPE_FRAME(2), The field initiates the insertion of a text frame.
;							$LOW_FIELD_PLACEHOLD_TYPE_GRAPHIC(3), The field initiates the insertion of a graphic object.
;							$LOW_FIELD_PLACEHOLD_TYPE_OBJECT(4), The field initiates the insertion of an embedded object.
; Related .......: _LOWriter_FieldFuncPlaceholderInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldFuncPlaceholderModify(ByRef $oPHolderField, $iPHolderType = Null, $sPHolderName = Null, $sReference = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $asPHolder[3]

	If Not IsObj($oPHolderField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iPHolderType, $sPHolderName, $sReference) Then
		__LOWriter_ArrayFill($asPHolder, $oPHolderField.PlaceHolderType(), $oPHolderField.PlaceHolder(), $oPHolderField.Hint())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $asPHolder)
	EndIf

	If ($iPHolderType <> Null) Then
		If Not __LOWriter_IntIsBetween($iPHolderType, $LOW_FIELD_PLACEHOLD_TYPE_TEXT, $LOW_FIELD_PLACEHOLD_TYPE_OBJECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oPHolderField.PlaceHolderType = $iPHolderType
		$iError = ($oPHolderField.PlaceHolderType() = $iPHolderType) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sPHolderName <> Null) Then
		If Not IsString($sPHolderName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPHolderField.PlaceHolder = $sPHolderName
		$iError = ($oPHolderField.PlaceHolder() = $sPHolderName) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sReference <> Null) Then
		If Not IsString($sReference) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPHolderField.Hint = $sReference
		$iError = ($oPHolderField.Hint() = $sReference) ? $iError : BitOR($iError, 4)
	EndIf

	$oPHolderField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldFuncPlaceholderModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldGetAnchor
; Description ...: Retrieve the Anchor Cursor Object for a Field inserted in a document.
; Syntax ........: _LOWriter_FieldGetAnchor(Byref $oField)
; Parameters ....: $oField              - [in/out] an object. A Field Object returned from a previous Insert or Retrieve
;				   +						function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oField not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Field anchor Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Returning requested Field Anchor Cursor Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldsGetList, _LOWriter_FieldsAdvGetList, _LOWriter_FieldsDocInfoGetList, _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldGetAnchor(ByRef $oField)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFieldAnchor

	If Not IsObj($oField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oFieldAnchor = $oField.Anchor.Text.createTextCursorByRange($oField.Anchor())
	If Not IsObj($oFieldAnchor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFieldAnchor)
EndFunc   ;==>_LOWriter_FieldGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldInputListInsert
; Description ...: Insert a Input List Field.
; Syntax ........: _LOWriter_FieldInputListInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $asItems = Null[, $sName = Null[, $sSelectedItem = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $asItems             - [optional] an array of strings. Default is Null. A single column Array of Strings to
;				   +									colonize the List with.
;                  $sName               - [optional] a string value. Default is Null. The name of the Input List Field.
;                  $sSelectedItem       - [optional] a string value. Default is Null. The Item in the list to be currently
;				   +									selected. Defaults to "" if Item is not found.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $asItems not an Array.
;				   @Error 1 @Extended 6 Return 0 = $sName not a String.
;				   @Error 1 @Extended 7 Return 0 = $sSelectedItem not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.DropDown" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Input List field, returning
;				   +										Input List Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldInputListModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldInputListInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $asItems = Null, $sName = Null, $sSelectedItem = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oInputField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oInputField = $oDoc.createInstance("com.sun.star.text.TextField.DropDown")
	If Not IsObj($oInputField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($asItems <> Null) Then
		If Not IsArray($asItems) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oInputField.Items = $asItems
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oInputField.Name = $sName
	EndIf

	If ($sSelectedItem <> Null) Then
		If Not IsString($sSelectedItem) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oInputField.SelectedItem = $sSelectedItem
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oInputField, $bOverwrite)

	$oInputField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oInputField)
EndFunc   ;==>_LOWriter_FieldInputListInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldInputListModify
; Description ...: Set or Retrieve a Input List Field's settings.
; Syntax ........: _LOWriter_FieldInputListModify(Byref $oInputField[, $asItems = Null[, $sName = Null[, $sSelectedItem = Null]]])
; Parameters ....: $oInputField         - [in/out] an object. A Input List field Object from a previous Insert or retrieval
;				   +									function.
;                  $asItems             - [optional] an array of strings. Default is Null. A single column Array of Strings to
;				   +									colonize the List with.
;                  $sName               - [optional] a string value. Default is Null. The name of the Input List Field.
;                  $sSelectedItem       - [optional] a string value. Default is Null. The Item in the list to be currently
;				   +									selected. Defaults to "" if Item is not found.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oInputField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $asItems not an Array.
;				   @Error 1 @Extended 3 Return 0 = $sName not a String.
;				   @Error 1 @Extended 4 Return 0 = $sSelectedItem not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $asItems
;				   |								2 = Error setting $sName
;				   |								4 = Error setting $sSelectedItem
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldInputListInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldInputListModify(ByRef $oInputField, $asItems = Null, $sName = Null, $sSelectedItem = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avDropDwn[3]

	If Not IsObj($oInputField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($asItems, $sName, $sSelectedItem) Then
		__LOWriter_ArrayFill($avDropDwn, $oInputField.Items(), $oInputField.Name(), $oInputField.SelectedItem())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avDropDwn)
	EndIf

	If ($asItems <> Null) Then
		If Not IsArray($asItems) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oInputField.Items = $asItems
		$iError = (UBound($oInputField.Items()) = UBound($asItems)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oInputField.Name = $sName
		$iError = ($oInputField.Name() = $sName) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sSelectedItem <> Null) Then
		If Not IsString($sSelectedItem) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oInputField.SelectedItem = $sSelectedItem
		$iError = ($oInputField.SelectedItem() = $sSelectedItem) ? $iError : BitOR($iError, 4)
	EndIf

	$oInputField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldInputListModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldPageNumberInsert
; Description ...: Insert a Page number field.
; Syntax ........: _LOWriter_FieldPageNumberInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $iNumFormat = Null[, $iOffset = Null[, $iPageNumType = Null[, $sUserText = Null]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iNumFormat          - [optional] an integer value. Default is Null. The numbering format to use for Page
;				   +						numbering. See Constants.
;                  $iOffset             - [optional] an integer value. Default is Null. The number of pages to minus or add to
;				   +									the page Number.
;                  $iPageNumType        - [optional] an integer value. Default is Null. The Page Number type, either previous,
;				   +									current or next page. See Constants.
;                  $sUserText           - [optional] a string value. Default is Null. The custom User text to display. Only valid
;				   +									if $iNumFormat is set to $LOW_NUM_STYLE_CHAR_SPECIAL(6).
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iNumFormat not an Integer, less than 0 or greater than 71. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iOffset not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iPageNumType not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $sUserText not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.PageNumber" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Page Number field, returning Page Num.
;				   +										Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
;Page Number Type Constants: $LOW_PAGE_NUM_TYPE_PREV(0), The Previous Page's page number.
;								$LOW_PAGE_NUM_TYPE_CURRENT(1), The current page number.
;								$LOW_PAGE_NUM_TYPE_NEXT(2), The Next Page's page number.
; Related .......: _LOWriter_FieldPageNumberModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldPageNumberInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $iNumFormat = Null, $iOffset = Null, $iPageNumType = Null, $sUserText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oPageField = $oDoc.createInstance("com.sun.star.text.TextField.PageNumber")
	If Not IsObj($oPageField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageField.NumberingType = $iNumFormat
	Else
		$oPageField.NumberingType = $LOW_NUM_STYLE_PAGE_DESCRIPTOR
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageField.Offset = $iOffset
	EndIf

	If ($iPageNumType <> Null) Then
		If Not __LOWriter_IntIsBetween($iPageNumType, $LOW_PAGE_NUM_TYPE_PREV, $LOW_PAGE_NUM_TYPE_NEXT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageField.SubType = $iPageNumType

		If ($iPageNumType = $LOW_PAGE_NUM_TYPE_PREV) Then
			$oPageField.Offset = ($oPageField.Offset() - 1) ;If SubType is Set to Prev. Set offset to minus 1 of current value
		ElseIf ($iPageNumType = $LOW_PAGE_NUM_TYPE_NEXT) Then
			$oPageField.Offset = ($oPageField.Offset() + 1) ;If SubType is Set to Next. Set offset to plus 1 of current value
		EndIf
	Else
		$oPageField.SubType = $LOW_PAGE_NUM_TYPE_CURRENT ;If not set, page number Sub Type is auto set to Prev. Instead of current.
	EndIf

	If ($sUserText <> Null) Then
		If Not IsString($sUserText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oPageField.UserText = $sUserText
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oPageField, $bOverwrite)

	$oPageField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPageField)
EndFunc   ;==>_LOWriter_FieldPageNumberInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldPageNumberModify
; Description ...: Set or Retrieve Page NUmber Field settings.
; Syntax ........: _LOWriter_FieldPageNumberModify(Byref $oDoc, Byref $oPageNumField[, $iNumFormat = Null[, $iOffset = Null[, $iPageNumType = Null[, $sUserText = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageNumField       - [in/out] an object. A Page Number field Object from a previous Insert or retrieval
;				   +									function.
;                  $iNumFormat          - [optional] an integer value. Default is Null. The numbering format to use for Page
;				   +						numbering. See Constants.
;                  $iOffset             - [optional] an integer value. Default is Null. The number of pages to minus or add to
;				   +									the page Number.
;                  $iPageNumType        - [optional] an integer value. Default is Null. The Page Number type, either previous,
;				   +									current or next page. See Constants.
;                  $sUserText           - [optional] a string value. Default is Null. The custom User text to display. Only valid
;				   +									if $iNumFormat is set to $LOW_NUM_STYLE_CHAR_SPECIAL(6).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageNumField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $iNumFormat not an Integer, less than 0 or greater than 71. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iOffset not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iPageNumType not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $sUserText not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.PageNumber" Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iNumFormat
;				   |								2 = Error setting $iOffset
;				   |								4 = Error setting $iPageNumType
;				   |								8 = Error setting $sUserText
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
;Page Number Type Constants: $LOW_PAGE_NUM_TYPE_PREV(0), The Previous Page's page number.
;								$LOW_PAGE_NUM_TYPE_CURRENT(1), The current page number.
;								$LOW_PAGE_NUM_TYPE_NEXT(2), The Next Page's page number.
; Related .......: _LOWriter_FieldPageNumberInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldPageNumberModify(ByRef $oDoc, ByRef $oPageNumField, $iNumFormat = Null, $iOffset = Null, $iPageNumType = Null, $sUserText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $avField[4]
	Local $iError = 0
	Local $oNewPageNumField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageNumField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iNumFormat, $iOffset, $iPageNumType, $sUserText) Then
		__LOWriter_ArrayFill($avField, $oPageNumField.NumberingType(), $oPageNumField.Offset(), $oPageNumField.SubType(), $oPageNumField.UserText())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avField)
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

		$oNewPageNumField = $oDoc.createInstance("com.sun.star.text.TextField.PageNumber")
		If Not IsObj($oNewPageNumField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

		;It doesn't work to just set a new Numbering type for an already inserted Page Number, so I have to create a new one and
		;then insert it.
		With $oNewPageNumField
			.NumberingType = $iNumFormat
			.Offset = $oPageNumField.Offset()
			.SubType = $oPageNumField.SubType()
			.UserText = $oPageNumField.UserText()
		EndWith

		$oDoc.Text.createTextCursorByRange($oPageNumField.Anchor()).Text.insertTextContent($oPageNumField.Anchor(), $oNewPageNumField, True)

		;Update the Old Page nUmber Field Object to the new one.
		$oPageNumField = $oNewPageNumField

		$iError = ($oPageNumField.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageNumField.Offset = $iOffset
		$iError = ($oPageNumField.Offset() = $iOffset) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iPageNumType <> Null) Then
		If Not __LOWriter_IntIsBetween($iPageNumType, $LOW_PAGE_NUM_TYPE_PREV, $LOW_PAGE_NUM_TYPE_NEXT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageNumField.SubType = $iPageNumType
		$iError = ($oPageNumField.SubType() = $iPageNumType) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sUserText <> Null) Then
		If Not IsString($sUserText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageNumField.UserText = $sUserText
		$iError = ($oPageNumField.UserText() = $sUserText) ? $iError : BitOR($iError, 8)
	EndIf

	$oPageNumField.Update()



	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldPageNumberModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefBookMarkInsert
; Description ...: Insert a Bookmark Reference Field.
; Syntax ........: _LOWriter_FieldRefBookMarkInsert(Byref $oDoc, Byref $oCursor, $sBookmarkName[, $bOverwrite = False[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $sBookmarkName       - a string value. The Bookmark name to Reference.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iRefUsing            - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the bookmark, see Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $sBookmarkName not a String.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = Document does not contain a Bookmark by the same name as called in
;				   +									$sBookmarkName.
;				   @Error 1 @Extended 7 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.GetReference" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Bookmark Reference Field. Returning
;				   +											the Bookmark Reference Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefBookMarkModify, _LOWriter_DocBookmarkInsert, _LOWriter_DocBookmarksList,
;					 _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefBookMarkInsert(ByRef $oDoc, ByRef $oCursor, $sBookmarkName, $bOverwrite = False, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oBookmarkRefField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	If Not _LOWriter_DocBookmarksHasName($oDoc, $sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oBookmarkRefField = $oDoc.createInstance("com.sun.star.text.TextField.GetReference")
	If Not IsObj($oBookmarkRefField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oBookmarkRefField.SourceName = $sBookmarkName
	$oBookmarkRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_BOOKMARK

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oBookmarkRefField.ReferenceFieldPart = $iRefUsing
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oBookmarkRefField, $bOverwrite)

	$oBookmarkRefField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oBookmarkRefField)
EndFunc   ;==>_LOWriter_FieldRefBookMarkInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefBookMarkModify
; Description ...: Set or Retrieve a Bookmark Reference Field's settings.
; Syntax ........: _LOWriter_FieldRefBookMarkModify(Byref $oDoc, Byref $oBookmarkRefField[, $sBookmarkName = Null[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oBookmarkRefField   - [in/out] an object. A Bookmark Reference field Object from a previous Insert or
;				   +									retrieval function.
;                  $sBookmarkName       - [optional] a string value. Default is Null. The Bookmark name to Reference.
;                  $iRefUsing            - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the bookmark, see Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oBookmarkRefField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sBookmarkName not a String.
;				   @Error 1 @Extended 4 Return 0 = Document does not contain a Bookmark by the same name as called in
;				   +									$sBookmarkName.
;				   @Error 1 @Extended 5 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sBookmarkName
;				   |								2 = Error setting $iRefUsing
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefBookMarkInsert, _LOWriter_DocBookmarkInsert, _LOWriter_DocBookmarksList,
;					_LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefBookMarkModify(ByRef $oDoc, ByRef $oBookmarkRefField, $sBookmarkName = Null, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avBook[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oBookmarkRefField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sBookmarkName, $iRefUsing) Then
		__LOWriter_ArrayFill($avBook, $oBookmarkRefField.SourceName(), $oBookmarkRefField.ReferenceFieldPart())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avBook)
	EndIf

	If ($sBookmarkName <> Null) Then
		If Not IsString($sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If Not _LOWriter_DocBookmarksHasName($oDoc, $sBookmarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oBookmarkRefField.SourceName = $sBookmarkName
		$oBookmarkRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_BOOKMARK ;Set Type to Bookmark in case input field Obj is a diff type.
		$iError = ($oBookmarkRefField.SourceName = $sBookmarkName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oBookmarkRefField.ReferenceFieldPart = $iRefUsing
		$iError = ($oBookmarkRefField.ReferenceFieldPart = $iRefUsing) ? $iError : BitOR($iError, 2)
	EndIf

	$oBookmarkRefField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefBookMarkModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefEndnoteInsert
; Description ...: Insert a Endnote Reference Field.
; Syntax ........: _LOWriter_FieldRefEndnoteInsert(Byref $oDoc, Byref $oCursor, Byref $oEndNote[, $bOverwrite = False[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $oEndNote            - [in/out] an object. The Endnote Object returned from a previous Insert or Retrieve
;				   +						function, to reference.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iRefUsing           - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the Endnote, see Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $oEndNote not an Object.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.GetReference" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Endnote Reference Field. Returning
;				   +											the Endnote Reference Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefEndnoteModify, _LOWriter_EndnoteInsert, _LOWriter_EndnotesGetList,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefEndnoteInsert(ByRef $oDoc, ByRef $oCursor, ByRef $oEndNote, $bOverwrite = False, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oENoteRefField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$oENoteRefField = $oDoc.createInstance("com.sun.star.text.TextField.GetReference")
	If Not IsObj($oENoteRefField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oENoteRefField.SourceName = ""
	$oENoteRefField.SequenceNumber = $oEndNote.ReferenceId()
	$oENoteRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_ENDNOTE

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oENoteRefField.ReferenceFieldPart = $iRefUsing
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oENoteRefField, $bOverwrite)

	$oENoteRefField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oENoteRefField)
EndFunc   ;==>_LOWriter_FieldRefEndnoteInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefEndnoteModify
; Description ...: Set or Retrieve a Endnote Reference Field's settings.
; Syntax ........: _LOWriter_FieldRefEndnoteModify(Byref $oDoc, Byref $oEndNoteRefField[, $oEndNote = Null[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oEndNoteRefField    - [in/out] an object. A Endnote Reference field Object from a previous Insert or
;				   +									retrieval function.
;                  $oEndNote            - [optional] an object. Default is Null. The Endnote Object returned from a previous
;				   +						Insert or Retrieve function, to reference.
;                  $iRefUsing           - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the Endnote, see Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oEndNoteRefField not an Object.
;				   @Error 1 @Extended 3 Return 0 = Optional Parameters set to null, but $oEndNoteRefField object is not a
;				   +									listed as a Endnote Reference type field.
;				   @Error 1 @Extended 4 Return 0 = $oEndNote not an Object.
;				   @Error 1 @Extended 5 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Endnote Object for setting return.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $oEndNote
;				   |								2 = Error setting $iRefUsing
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefEndnoteInsert, _LOWriter_EndnoteInsert, _LOWriter_EndnotesGetList, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefEndnoteModify(ByRef $oDoc, ByRef $oEndNoteRefField, $oEndNote = Null, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iSourceSeq
	Local $avFoot[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oEndNoteRefField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($oEndNote, $iRefUsing) Then
		If Not ($oEndNoteRefField.ReferenceFieldSource() = $LOW_FIELD_REF_TYPE_ENDNOTE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If $oDoc.Endnotes.hasElements() Then
			$iSourceSeq = $oEndNoteRefField.SequenceNumber()
			For $i = 0 To $oDoc.Endnotes.Count() - 1 ;Locate referenced Endnote.
				If ($oDoc.Endnotes.getByIndex($i).ReferenceId() = $iSourceSeq) Then
					__LOWriter_ArrayFill($avFoot, $oDoc.Endnotes.getByIndex($i), $oEndNoteRefField.ReferenceFieldPart())
					Return SetError($__LOW_STATUS_SUCCESS, 1, $avFoot)
				EndIf
				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
			Next

		EndIf
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Error retrieving ENote Obj
	EndIf

	If ($oEndNote <> Null) Then
		If Not IsObj($oEndNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oEndNoteRefField.SourceName = ""
		$oEndNoteRefField.SequenceNumber = $oEndNote.ReferenceId()
		$oEndNoteRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_ENDNOTE ;Set Type to Endnote in case input field Obj is a diff type.
		$iError = ($oEndNoteRefField.SequenceNumber = $oEndNote.ReferenceId()) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oEndNoteRefField.ReferenceFieldPart = $iRefUsing
		$iError = ($oEndNoteRefField.ReferenceFieldPart = $iRefUsing) ? $iError : BitOR($iError, 2)
	EndIf

	$oEndNoteRefField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefEndnoteModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefFootnoteInsert
; Description ...: Insert a Footnote Reference Field.
; Syntax ........: _LOWriter_FieldRefFootnoteInsert(Byref $oDoc, Byref $oCursor, Byref $oFootNote[, $bOverwrite = False[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $oFootNote           - [in/out] an object. The Footnote Object returned from a previous Insert or Retrieve
;				   +						function, to reference.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iRefUsing            - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the Footnote, see Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $oFootNote not an Object.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.GetReference" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Footnote Reference Field. Returning
;				   +											the Footnote Reference Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefFootnoteModify, _LOWriter_FootnoteInsert, _LOWriter_FootnotesGetList,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefFootnoteInsert(ByRef $oDoc, ByRef $oCursor, ByRef $oFootNote, $bOverwrite = False, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFNoteRefField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$oFNoteRefField = $oDoc.createInstance("com.sun.star.text.TextField.GetReference")
	If Not IsObj($oFNoteRefField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$oFNoteRefField.SourceName = ""
	$oFNoteRefField.SequenceNumber = $oFootNote.ReferenceId()
	$oFNoteRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_FOOTNOTE

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFNoteRefField.ReferenceFieldPart = $iRefUsing
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oFNoteRefField, $bOverwrite)

	$oFNoteRefField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFNoteRefField)
EndFunc   ;==>_LOWriter_FieldRefFootnoteInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefFootnoteModify
; Description ...: Set or Retrieve a Footnote Reference Field's settings.
; Syntax ........: _LOWriter_FieldRefFootnoteModify(Byref $oDoc, Byref $oFootNoteRefField[, $oFootNote = Null[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFootNoteRefField   - [in/out] an object. A Footnote Reference field Object from a previous Insert or
;				   +									retrieval function.
;                  $oFootNote           - [optional] an object. Default is Null. The Footnote Object returned from a previous
;				   +						Insert or Retrieve function, to reference.
;                  $iRefUsing           - [optional] an integer value. Default is Null. The Type of reference to use to
;				   +									reference the Footnote, see Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFootNoteRefField not an Object.
;				   @Error 1 @Extended 3 Return 0 = Optional Parameters set to null, but $oFootNoteRefField object is not a
;				   +									listed as a Footnote Reference type field.
;				   @Error 1 @Extended 4 Return 0 = $oFootNote not an Object.
;				   @Error 1 @Extended 5 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving Footnote Object for setting return.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $oFootNote
;				   |								2 = Error setting $iRefUsing
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefFootnoteInsert, _LOWriter_FootnoteInsert, _LOWriter_FootnotesGetList,
;					_LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefFootnoteModify(ByRef $oDoc, ByRef $oFootNoteRefField, $oFootNote = Null, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iSourceSeq
	Local $avFoot[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFootNoteRefField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($oFootNote, $iRefUsing) Then
		If Not ($oFootNoteRefField.ReferenceFieldSource() = $LOW_FIELD_REF_TYPE_FOOTNOTE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If $oDoc.Footnotes.hasElements() Then
			$iSourceSeq = $oFootNoteRefField.SequenceNumber()
			For $i = 0 To $oDoc.Footnotes.Count() - 1 ;Locate referenced Footnote.
				If ($oDoc.Footnotes.getByIndex($i).ReferenceId() = $iSourceSeq) Then
					__LOWriter_ArrayFill($avFoot, $oDoc.Footnotes.getByIndex($i), $oFootNoteRefField.ReferenceFieldPart())
					Return SetError($__LOW_STATUS_SUCCESS, 1, $avFoot)
				EndIf
				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
			Next

		EndIf
		Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Error retrieving FNote Obj
	EndIf

	If ($oFootNote <> Null) Then
		If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFootNoteRefField.SourceName = ""
		$oFootNoteRefField.SequenceNumber = $oFootNote.ReferenceId()
		$oFootNoteRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_FOOTNOTE ;Set Type to Footnote in case input field Obj is a diff type.
		$iError = ($oFootNoteRefField.SequenceNumber = $oFootNote.ReferenceId()) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFootNoteRefField.ReferenceFieldPart = $iRefUsing
		$iError = ($oFootNoteRefField.ReferenceFieldPart = $iRefUsing) ? $iError : BitOR($iError, 2)
	EndIf

	$oFootNoteRefField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefFootnoteModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefGetType
; Description ...: Retrieve the type of Data a Reference Field is Referencing.
; Syntax ........: _LOWriter_FieldRefGetType(Byref $oRefField)
; Parameters ....: $oRefField           - [in/out] an object. a Reference Field Object from a previous Insert or Retrieve
;				   +						function.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oRefField not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer = Success. Returning the Data Type Source for the reference Field.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: A Reference Field can be referencing multiple different types of Data, such as a Reference Mark, or Bookmark,
;					etc.
;Reference Type Constants: $LOW_FIELD_REF_TYPE_REF_MARK(0), The source is referencing a reference mark.
;							$LOW_FIELD_REF_TYPE_SEQ_FIELD(1), The source is referencing a number sequence field. Such as a
;															Number range variable, numbered Paragraph, etc.
;							$LOW_FIELD_REF_TYPE_BOOKMARK(2), The source is referencing a bookmark.
;							$LOW_FIELD_REF_TYPE_FOOTNOTE(3), The source is referencing a footnote.
;							$LOW_FIELD_REF_TYPE_ENDNOTE(4), The source is referencing an endnote.
; Related .......: _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefGetType(ByRef $oRefField)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oRefField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oRefField.ReferenceFieldSource())
EndFunc   ;==>_LOWriter_FieldRefGetType

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefInsert
; Description ...: Insert a Reference Field.
; Syntax ........: _LOWriter_FieldRefInsert(Byref $oDoc, Byref $oCursor, $sRefMarkName[, $bOverwrite = False[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $sRefMarkName        - a string value. The Reference Mark Name to Reference.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iRefUsing           - [optional] an integer value. Default is Null. The Type of reference to insert, see
;				   +									Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $sRefMarkName not a String.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = Document does not contain a Reference Mark by the same name as called in
;				   +									$sRefMarkName.
;				   @Error 1 @Extended 7 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Reference Marks Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to create "com.sun.star.text.TextField.GetReference" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Reference Field. Returning the
;				   +											Reference Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefModify, _LOWriter_FieldRefMarkSet, _LOWriter_FieldRefMarkList,
;					_LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefInsert(ByRef $oDoc, ByRef $oCursor, $sRefMarkName, $bOverwrite = False, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMarks, $oMarkRefField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sRefMarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$oRefMarks = $oDoc.getReferenceMarks()
	If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If Not $oRefMarks.hasByName($sRefMarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oMarkRefField = $oDoc.createInstance("com.sun.star.text.TextField.GetReference")
	If Not IsObj($oMarkRefField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oMarkRefField.SourceName = $sRefMarkName
	$oMarkRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_REF_MARK

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oMarkRefField.ReferenceFieldPart = $iRefUsing
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oMarkRefField, $bOverwrite)

	$oMarkRefField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oMarkRefField)
EndFunc   ;==>_LOWriter_FieldRefInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefMarkDelete
; Description ...: Delete a Reference Mark by name.
; Syntax ........: _LOWriter_FieldRefMarkDelete(Byref $oDoc, $sName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sName               - a string value. The Reference Mark name to delete.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sName not a String.
;				   @Error 1 @Extended 3 Return 0 = Document does not contain a Reference Mark named the same as called in
;				   +								$sName
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Reference Marks Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Reference Mark object called in $sName.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to delete Reference Mark, but document still contains a
;				   +									Reference Mark by that name.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully deleted requested Reference Mark.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldRefMarkSet, _LOWriter_FieldRefMarkList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefMarkDelete(ByRef $oDoc, $sName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMark, $oRefMarks

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oRefMarks = $oDoc.getReferenceMarks()
	If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If Not $oRefMarks.hasByName($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oRefMark = $oRefMarks.getByName($sName)
	If Not IsObj($oRefMark) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oRefMark.dispose()

	Return ($oRefMarks.hasByName($sName)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefMarkDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefMarkGetAnchor
; Description ...: Retrieve the Anchor Cursor Object of a Reference Mark by Name.
; Syntax ........: _LOWriter_FieldRefMarkGetAnchor(Byref $oDoc, $sName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sName               - a string value. The Reference Mark name to retrieve the anchor for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sName not a String.
;				   @Error 1 @Extended 3 Return 0 = Document does not contain a Reference Mark named the same as called in
;				   +								$sName
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Reference Marks Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Reference Mark object called in $sName.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Returning requested Reference Mark Anchor Cursor Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldRefMarkList, _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefMarkGetAnchor(ByRef $oDoc, $sName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMark, $oRefMarks

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oRefMarks = $oDoc.getReferenceMarks()
	If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If Not $oRefMarks.hasByName($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oRefMark = $oRefMarks.getByName($sName)
	If Not IsObj($oRefMark) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oRefMark.Anchor.Text.createTextCursorByRange($oRefMark.Anchor()))
EndFunc   ;==>_LOWriter_FieldRefMarkGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefMarkList
; Description ...: Retrieve an Array of Reference Mark names.
; Syntax ........: _LOWriter_FieldRefMarkList(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Reference Marks Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Array of Reference Mark Names.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully searched for Reference Marks, but document does
;				   +											not contain any.
;				   @Error 0 @Extended ? Return Array = Success. Successfully searched for Reference Marks, returning Array of
;				   +												Reference Mark Names, with @Extended set to number
;				   +												of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldRefMarkDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefMarkList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMarks
	Local $asRefMarks[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oRefMarks = $oDoc.getReferenceMarks()
	If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$asRefMarks = $oRefMarks.getElementNames()
	If Not IsArray($asRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	Return (UBound($asRefMarks) > 0) ? SetError($__LOW_STATUS_SUCCESS, UBound($asRefMarks), $asRefMarks) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefMarkList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefMarkSet
; Description ...: Create and Insert a Reference Mark at a Cursor position.
; Syntax ........: _LOWriter_FieldRefMarkSet(Byref $oDoc, Byref $oCursor, $sName[, $bOverwrite = False])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $sName               - a string value. The name of the Reference Mark to create.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $sName not a String.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = Document already contains a Reference Mark by the same name as called in
;				   +									$sName.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Reference Marks Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.text.ReferenceMark" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1. = Success. Successfully created a Reference Mark.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldRefMarkDelete, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefMarkSet(ByRef $oDoc, ByRef $oCursor, $sName, $bOverwrite = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMark, $oRefMarks

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$oRefMarks = $oDoc.getReferenceMarks()
	If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If $oRefMarks.hasByName($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oRefMark = $oDoc.createInstance("com.sun.star.text.ReferenceMark")
	If Not IsObj($oRefMark) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oRefMark.Name = $sName

	$oCursor.Text.insertTextContent($oCursor, $oRefMark, $bOverwrite)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefMarkSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldRefModify
; Description ...: Set or Retrieve a Reference Field's settings.
; Syntax ........: _LOWriter_FieldRefModify(Byref $oDoc, Byref $oRefField[, $sRefMarkName = Null[, $iRefUsing = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oRefField           - [in/out] an object. A Reference field Object from a previous Insert or retrieval
;				   +									function.
;                  $sRefMarkName        - [optional] a string value. Default is Null. The Reference Mark Name to Reference.
;                  $iRefUsing           - [optional] an integer value. Default is Null. The Type of reference to insert, see
;				   +									Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oRefField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sRefMarkName not a String.
;				   @Error 1 @Extended 4 Return 0 = Document does not contain a Reference Mark by the same name as called in
;				   +									$sRefMarkName.
;				   @Error 1 @Extended 6 Return 0 = $iRefUsing not an Integer, Less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Reference Marks Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sRefMarkName
;				   |								2 = Error setting $iRefUsing
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Refer Using Constants: $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED(0), The page number is displayed using Arabic numbers.
;							$LOW_FIELD_REF_USING_CHAPTER(1), The number of the chapter is displayed.
;							$LOW_FIELD_REF_USING_REF_TEXT(2), The reference text is displayed.
;							$LOW_FIELD_REF_USING_ABOVE_BELOW(3), The reference is displayed as one of the words, "above" or
;								"below".
;							$LOW_FIELD_REF_USING_PAGE_NUM_STYLED(4), The page number is displayed using the numbering type
;								defined in the page style of the reference position.
; Related .......: _LOWriter_FieldRefInsert, _LOWriter_FieldsGetList, _LOWriter_FieldRefMarkSet, _LOWriter_FieldRefMarkList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldRefModify(ByRef $oDoc, ByRef $oRefField, $sRefMarkName = Null, $iRefUsing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRefMarks
	Local $iError = 0
	Local $avRef[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oRefField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sRefMarkName, $iRefUsing) Then
		__LOWriter_ArrayFill($avRef, $oRefField.SourceName(), $oRefField.ReferenceFieldPart())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avRef)
	EndIf

	If ($sRefMarkName <> Null) Then
		If Not IsString($sRefMarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oRefMarks = $oDoc.getReferenceMarks()
		If Not IsObj($oRefMarks) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
		If Not $oRefMarks.hasByName($sRefMarkName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oRefField.SourceName = $sRefMarkName
		$oRefField.ReferenceFieldSource = $LOW_FIELD_REF_TYPE_REF_MARK ;Set Type to RefMark in case input field Obj is a diff type.
		$iError = ($oRefField.SourceName = $sRefMarkName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRefUsing <> Null) Then
		If Not __LOWriter_IntIsBetween($iRefUsing, $LOW_FIELD_REF_USING_PAGE_NUM_UNSTYLED, $LOW_FIELD_REF_USING_PAGE_NUM_STYLED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oRefField.ReferenceFieldPart = $iRefUsing
		$iError = ($oRefField.ReferenceFieldPart = $iRefUsing) ? $iError : BitOR($iError, 2)
	EndIf

	$oRefField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldRefModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldsAdvGetList
; Description ...: Retrieve an Array of Advanced Field Objects contained in a document.
; Syntax ........: _LOWriter_FieldsAdvGetList(Byref $oDoc[, $iType = $LOW_FIELDADV_TYPE_ALL[, $bSupportedServices = True[, $bFieldType = True[, $bFieldTypeNum = True]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iType               - [optional] an integer value. Default is $LOW_FIELDADV_TYPE_ALL. The type of Field to
;				   +						search for. See Constants. Can be BitOr'd together.
;                  $bSupportedServices  - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the supported service String for that particular Field, To assist in identifying
;				   +						the Field type.
;                  $bFieldType          - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type String for that particular Field as described by Libre Office.
;				   +						To assist in identifying the Field type.
;                  $bFieldTypeNum       - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type Constant Integer for that particular Field, to assist in
;				   +						identifying the Field type.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iType not an Integer, less than 1 or greater than 1023. (The total of
;				   +									all Constants added together.) See Constants.
;				   @Error 1 @Extended 3 Return 0 = $bSupportedServices not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bFieldType not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bFieldTypeNum not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $avFieldTypes passed to internal function not an Array. UDF needs fixed.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error converting Field type Constants.
;				   @Error 2 @Extended 2 Return 0 = Failed to create enumeration of fields in document.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning Array of Text Field Objects with @Extended set to
;				   +										number of results. See Remarks for Array sizing.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:The Array can vary in the number of columns, if $bSupportedServices, $bFieldType, and $bFieldTypeNum are set
;					to False, the Array will be a single column. With each of the above listed options being set to True, a
;					column will be added in the order they are listed in the UDF parameters. The First column will always be the
;					Field Object.
;					Setting $bSupportedServices to True will add a Supported Service String column for the found Field.
;					Setting $bFieldType to True will add a Field type column for the found Field.
;					Setting $bFieldTypeNum to True will add a Field type Number column, matching the below constants, for the
;						found Field.
;					Note: For simplicity, and also due to certain Bit limitations I have broken the different Field types into
;						three different categories, Regular Fields, ($LWFieldType), Advanced(Complex) Fields, ($LWFieldAdvType),
;						and Document Information fields (Found in the Document Information Tab in L.O. Fields dialog),
;						($LWFieldDocInfoType). Just because a field is listed in the constants below, does not necessarily mean
;						that I have made a function to create/modify it, you may still be able to update or delete it using the
;						Field Update, or Field Delete function, though. Some Fields are too complex to create a function for,
;						and others are literally impossible.
;Advanced Field Type Constants: $LOW_FIELDADV_TYPE_ALL = 1, All of the below listed Fields will be returned.
;								$LOW_FIELDADV_TYPE_BIBLIOGRAPHY, A Bibliography Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DATABASE, A Database Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DATABASE_SET_NUM, A Database Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DATABASE_NAME, A Database Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DATABASE_NEXT_SET, A Database Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DATABASE_NAME_OF_SET, A Database Field, found in Fields dialog, Database tab.
;								$LOW_FIELDADV_TYPE_DDE, A DDE Field, found in Fields dialog, Variables tab.
;								$LOW_FIELDADV_TYPE_INPUT_USER, ?
;								$LOW_FIELDADV_TYPE_USER, A User Field, found in Fields dialog, Variables tab.
; Related .......: _LOWriter_FieldsDocInfoGetList, _LOWriter_FieldsGetList, _LOWriter_FieldDelete, _LOWriter_FieldGetAnchor,
;					_LOWriter_FieldUpdate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldsAdvGetList(ByRef $oDoc, $iType = $LOW_FIELDADV_TYPE_ALL, $bSupportedServices = True, $bFieldType = True, $bFieldTypeNum = True)
	Local $avFieldTypes[0][0]
	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IntIsBetween($iType, $LOW_FIELDADV_TYPE_ALL, 1023) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	;1023 is all possible Consts added together
	If Not IsBool($bSupportedServices) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bFieldType) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bFieldTypeNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$avFieldTypes = __LOWriter_FieldTypeServices($iType, True, False)
	If @error > 0 Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$vReturn = __LOWriter_FieldsGetList($oDoc, $bSupportedServices, $bFieldType, $bFieldTypeNum, $avFieldTypes)

	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FieldsAdvGetList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldsDocInfoGetList
; Description ...: Retrieve an Array of Document Information Field Objects contained in a document.
; Syntax ........: _LOWriter_FieldsDocInfoGetList(Byref $oDoc[, $iType = $LOW_FIELD_DOCINFO_TYPE_ALL[, $bSupportedServices = True[, $bFieldType = True[, $bFieldTypeNum = True]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iType               - [optional] an integer value. Default is $LOW_FIELD_DOCINFO_TYPE_ALL. The type of Field
;				   +						to search for. See Constants. Can be BitOr'd together.
;                  $bSupportedServices  - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the supported service String for that particular Field, To assist in identifying
;				   +						the Field type.
;                  $bFieldType          - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type String for that particular Field as described by Libre Office.
;				   +						To assist in identifying the Field type.
;                  $bFieldTypeNum       - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type Constant Integer for that particular Field, to assist in
;				   +						identifying the Field type.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iType not an Integer, less than 1 or greater than 16383. (The total of
;				   +									all Constants added together.) See Constants.
;				   @Error 1 @Extended 3 Return 0 = $bSupportedServices not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bFieldType not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bFieldTypeNum not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $avFieldTypes passed to internal function not an Array. UDF needs fixed.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error converting Field type Constants.
;				   @Error 2 @Extended 2 Return 0 = Failed to create enumeration of fields in document.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning Array of Text Field Objects with @Extended set to
;				   +										number of results. See Remarks for Array sizing.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:The Array can vary in the number of columns, if $bSupportedServices, $bFieldType, and $bFieldTypeNum are set
;					to False, the Array will be a single column. With each of the above listed options being set to True, a
;					column will be added in the order they are listed in the UDF parameters. The First column will always be the
;					Field Object.
;					Setting $bSupportedServices to True will add a Supported Service String column for the found Field.
;					Setting $bFieldType to True will add a Field type column for the found Field.
;					Setting $bFieldTypeNum to True will add a Field type Number column, matching the below constants, for the
;						found Field.
;					Note: For simplicity, and also due to certain Bit limitations I have broken the different Field types into
;						three different categories, Regular Fields, ($LWFieldType), Advanced(Complex) Fields, ($LWFieldAdvType),
;						and Document Information fields (Found in the Document Information Tab in L.O. Fields dialog),
;						($LWFieldDocInfoType). Just because a field is listed in the constants below, does not necessarily mean
;						that I have made a function to create/modify it, you may still be able to update or delete it using the
;						Field Update, or Field Delete function, though. Some Fields are too complex to create a function for,
;						and others are literally impossible.
;Doc Info Field Type Constants: $LOW_FIELD_DOCINFO_TYPE_ALL = 1, Returns a list of all field types listed below.
;									$LOW_FIELD_DOCINFO_TYPE_MOD_AUTH, A Modified By Author Field, found in Fields dialog,
;																	DocInformation Tab, Modified Type.
;									$LOW_FIELD_DOCINFO_TYPE_MOD_DATE_TIME,  A Modified Date/Time Field, found in Fields dialog,
;																	DocInformation Tab, Modified Type.
;									$LOW_FIELD_DOCINFO_TYPE_CREATE_AUTH, A Created By Author Field, found in Fields dialog,
;																	DocInformation Tab, Created Type.
;									$LOW_FIELD_DOCINFO_TYPE_CREATE_DATE_TIME, A Created Date/Time Field, found in Fields dialog,
;																	DocInformation Tab, Created Type.
;									$LOW_FIELD_DOCINFO_TYPE_CUSTOM, A Custom Field, found in Fields dialog, DocInformation Tab.
;									$LOW_FIELD_DOCINFO_TYPE_COMMENTS, A Comments Field, found in Fields dialog, DocInformation
;																	Tab.
;									$LOW_FIELD_DOCINFO_TYPE_EDIT_TIME, A Total Editing Time Field, found in Fields dialog,
;																	DocInformation Tab.
;									$LOW_FIELD_DOCINFO_TYPE_KEYWORDS, A Keywords Field, found in Fields dialog, DocInformation
;																	Tab.
;									$LOW_FIELD_DOCINFO_TYPE_PRINT_AUTH, A Printed By Author Field, found in Fields dialog,
;																	DocInformation Tab, Last Printed Type.
;									$LOW_FIELD_DOCINFO_TYPE_PRINT_DATE_TIME,  A Printed Date/Time Field, found in Fields dialog,
;																	DocInformation Tab, Last Printed Type.
;									$LOW_FIELD_DOCINFO_TYPE_REVISION, A Revision Number Field, found in Fields dialog,
;																	DocInformation Tab.
;									$LOW_FIELD_DOCINFO_TYPE_SUBJECT, A Subject Field, found in Fields dialog, DocInformation
;																	Tab.
;									$LOW_FIELD_DOCINFO_TYPE_TITLE, A Title Field, found in Fields dialog, DocInformation Tab.
; Related .......: _LOWriter_FieldsAdvGetList, _LOWriter_FieldsGetList, _LOWriter_FieldDelete, _LOWriter_FieldGetAnchor,
;					_LOWriter_FieldUpdate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldsDocInfoGetList(ByRef $oDoc, $iType = $LOW_FIELD_DOCINFO_TYPE_ALL, $bSupportedServices = True, $bFieldType = True, $bFieldTypeNum = True)
	Local $avFieldTypes[0][0]
	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IntIsBetween($iType, $LOW_FIELDADV_TYPE_ALL, 16383) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	;16383 is all possible Consts added together
	If Not IsBool($bSupportedServices) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bFieldType) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bFieldTypeNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$avFieldTypes = __LOWriter_FieldTypeServices($iType, False, True)
	If @error > 0 Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$vReturn = __LOWriter_FieldsGetList($oDoc, $bSupportedServices, $bFieldType, $bFieldTypeNum, $avFieldTypes)

	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FieldsDocInfoGetList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSenderInsert
; Description ...: Insert a Sender Field.
; Syntax ........: _LOWriter_FieldSenderInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bIsFixed = Null[, $sContent = Null[, $iDataType = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sContent            - [optional] a string value. Default is Null. The Content to Display, only valid if
;				   +									$bIsFixed is set to True.
;                  $iDataType           - [optional] an integer value. Default is Null. The Data Type to display. See Constants.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $sContent not a String.
;				   @Error 1 @Extended 7 Return 0 = $iDataType not an Integer, less than 0 or greater than 14. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.ExtendedUser" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Sender field, returning
;				   +										Sender Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Sender Data Type Constants: $LOW_FIELD_USER_DATA_COMPANY(0), The field shows the company name.
;								$LOW_FIELD_USER_DATA_FIRST_NAME(1), The field shows the first name.
;								$LOW_FIELD_USER_DATA_NAME(2), The field shows the name.
;								$LOW_FIELD_USER_DATA_SHORTCUT(3), The field shows the initials.
;								$LOW_FIELD_USER_DATA_STREET(4), The field shows the street.
;								$LOW_FIELD_USER_DATA_COUNTRY(5), The field shows the country.
;								$LOW_FIELD_USER_DATA_ZIP(6), The field shows the zip code.
;								$LOW_FIELD_USER_DATA_CITY(7), The field shows the city.
;								$LOW_FIELD_USER_DATA_TITLE(8), The field shows the title.
;								$LOW_FIELD_USER_DATA_POSITION(9), The field shows the position.
;								$LOW_FIELD_USER_DATA_PHONE_PRIVATE(10), The field shows the number of the private phone.
;								$LOW_FIELD_USER_DATA_PHONE_COMPANY(11), The field shows the number of the business phone.
;								$LOW_FIELD_USER_DATA_FAX(12), The field shows the fax number.
;								$LOW_FIELD_USER_DATA_EMAIL(13), The field shows the e-Mail.
;								$LOW_FIELD_USER_DATA_STATE(14), The field shows the state.
; Related .......: _LOWriter_FieldSenderModify,  _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSenderInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bIsFixed = Null, $sContent = Null, $iDataType = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSenderField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oSenderField = $oDoc.createInstance("com.sun.star.text.TextField.ExtendedUser")
	If Not IsObj($oSenderField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSenderField.IsFixed = $bIsFixed
	EndIf

	If ($sContent <> Null) Then
		If Not IsString($sContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSenderField.Content = $sContent
	EndIf

	If ($iDataType <> Null) Then
		If Not __LOWriter_IntIsBetween($iDataType, $LOW_FIELD_USER_DATA_COMPANY, $LOW_FIELD_USER_DATA_STATE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oSenderField.UserDataType = $iDataType
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oSenderField, $bOverwrite)

	If ($sContent <> Null) Then ;Sometimes Content Disappears upon Insertion, make a check to re-set the Content value.
		If $oSenderField.Content <> $sContent And ($oSenderField.IsFixed() = True) Then $oSenderField.Content = $sContent
	EndIf

	If ($oSenderField.IsFixed() = False) Then $oSenderField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oSenderField)
EndFunc   ;==>_LOWriter_FieldSenderInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSenderModify
; Description ...: Set or Retrieve a Sender Field's settings.
; Syntax ........: _LOWriter_FieldSenderModify(Byref $oSenderField[, $bIsFixed = Null[, $sContent = Null[, $iDataType = Null]]])
; Parameters ....: $oSenderField        - [in/out] an object. A Sender field Object from a previous Insert or retrieval
;				   +									function.
;                  $bIsFixed            - [optional] a boolean value. Default is Null. If True, the value is static, this is the
;				   +								value does not update if the source changes or all fields are updated.
;                  $sContent            - [optional] a string value. Default is Null. The Content to Display, only valid if
;				   +									$bIsFixed is set to True.
;                  $iDataType           - [optional] an integer value. Default is Null. The Data Type to display. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSenderField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsFixed not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $sContent not a String.
;				   @Error 1 @Extended 4 Return 0 = $iDataType not an Integer, less than 0 or greater than 14. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bIsFixed
;				   |								2 = Error setting $sContent
;				   |								4 = Error setting $iDataType
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Sender Data Type Constants:  $LOW_FIELD_USER_DATA_COMPANY(0), The field shows the company name.
;								$LOW_FIELD_USER_DATA_FIRST_NAME(1), The field shows the first name.
;								$LOW_FIELD_USER_DATA_NAME(2), The field shows the name.
;								$LOW_FIELD_USER_DATA_SHORTCUT(3), The field shows the initials.
;								$LOW_FIELD_USER_DATA_STREET(4), The field shows the street.
;								$LOW_FIELD_USER_DATA_COUNTRY(5), The field shows the country.
;								$LOW_FIELD_USER_DATA_ZIP(6), The field shows the zip code.
;								$LOW_FIELD_USER_DATA_CITY(7), The field shows the city.
;								$LOW_FIELD_USER_DATA_TITLE(8), The field shows the title.
;								$LOW_FIELD_USER_DATA_POSITION(9), The field shows the position.
;								$LOW_FIELD_USER_DATA_PHONE_PRIVATE(10), The field shows the number of the private phone.
;								$LOW_FIELD_USER_DATA_PHONE_COMPANY(11), The field shows the number of the business phone.
;								$LOW_FIELD_USER_DATA_FAX(12), The field shows the fax number.
;								$LOW_FIELD_USER_DATA_EMAIL(13), The field shows the e-Mail.
;								$LOW_FIELD_USER_DATA_STATE(14), The field shows the state.
; Related .......: _LOWriter_FieldSenderInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSenderModify(ByRef $oSenderField, $bIsFixed = Null, $sContent = Null, $iDataType = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avExtUser[3]

	If Not IsObj($oSenderField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bIsFixed, $sContent, $iDataType) Then
		__LOWriter_ArrayFill($avExtUser, $oSenderField.IsFixed(), $oSenderField.Content(), $oSenderField.UserDataType())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avExtUser)
	EndIf

	If ($bIsFixed <> Null) Then
		If Not IsBool($bIsFixed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oSenderField.IsFixed = $bIsFixed
		$iError = ($oSenderField.IsFixed() = $bIsFixed) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sContent <> Null) Then
		If Not IsString($sContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oSenderField.Content = $sContent
		$iError = ($oSenderField.Content() = $sContent) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iDataType <> Null) Then
		If Not __LOWriter_IntIsBetween($iDataType, $LOW_FIELD_USER_DATA_COMPANY, $LOW_FIELD_USER_DATA_STATE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSenderField.UserDataType = $iDataType
		$iError = ($oSenderField.UserDataType() = $iDataType) ? $iError : BitOR($iError, 4)
	EndIf

	If ($oSenderField.IsFixed() = False) Then $oSenderField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldSenderModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarInsert
; Description ...: Insert a Set Variable Field.
; Syntax ........: _LOWriter_FieldSetVarInsert(Byref $oDoc, Byref $oCursor, $sName, $sValue[, $bOverwrite = False[, $iNumFormatKey = Null[, $bIsVisible = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $sName               - a string value. The name of the Set Variable Field to Create, If the name matches an
;				   +						already existing Set Variable Master Field, that Master will be used, else a new
;				   +						Set Variable Masterfield will be created.
;                  $sValue              - a string value. The Set Variable Field's value.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iNumFormatKey          - [optional] an integer value. Default is Null. The Number Format Key to use for
;				   +									displaying this variable.
;                  $bIsVisible          - [optional] a boolean value. Default is Null. If False, the Set Variable Field is
;				   +									invisible. L.O.'s default is True.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $sName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sValue not a String.
;				   @Error 1 @Extended 6 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iNumFormatKeyKey not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iNumFormatKeyKey not equal to -1 and Number Format key called in
;				   +									$iNumFormatKeyKey not found in document.
;				   @Error 1 @Extended 9 Return 0 = $bIsVisible not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.SetExpression" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Set Variable field, returning
;				   +										Set Variable Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldSetVarModify,  _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_FormatKeyCreate _LOWriter_FormatKeyList, _LOWriter_FieldSetVarMasterCreate,
;					_LOWriter_FieldSetVarMasterList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarInsert(ByRef $oDoc, ByRef $oCursor, $sName, $sValue, $bOverwrite = False, $iNumFormatKey = Null, $bIsVisible = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSetVarField, $oSetVarMaster
	Local $iExtended = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsString($sValue) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oSetVarField = $oDoc.createInstance("com.sun.star.text.TextField.SetExpression")
	If Not IsObj($oSetVarField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If _LOWriter_FieldSetVarMasterExists($oDoc, $sName) Then
		$oSetVarMaster = _LOWriter_FieldSetVarMasterGetObj($oDoc, $sName)
		$iExtended = 1 ;1 = Master already existed.
	Else
		$oSetVarMaster = _LOWriter_FieldSetVarMasterCreate($oDoc, $sName)
	EndIf

	If Not IsObj($oSetVarMaster) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oSetVarField.Content = $sValue

	If ($iNumFormatKey <> Null) Then
		If Not IsInt($iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If ($iNumFormatKey <> -1) And Not _LOWriter_FormatKeyExists($oDoc, $iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oSetVarField.NumberFormat = $iNumFormatKey
	Else
		$oSetVarField.NumberFormat = 0 ; If No Input, set to General
	EndIf

	If ($bIsVisible <> Null) Then
		If Not IsBool($bIsVisible) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oSetVarField.IsVisible = $bIsVisible
	EndIf

	$oSetVarField.attachTextFieldMaster($oSetVarMaster)

	$oCursor.Text.insertTextContent($oCursor, $oSetVarField, $bOverwrite)

	$oSetVarField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, $iExtended, $oSetVarField)
EndFunc   ;==>_LOWriter_FieldSetVarInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterCreate
; Description ...: Create a Set Variable Master Field.
; Syntax ........: _LOWriter_FieldSetVarMasterCreate(Byref $oDoc, $sMasterFieldName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sMasterFieldName    - a string value. The Set Variable Master Field name to create.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sMasterFieldName not a String.
;				   @Error 1 @Extended 3 Return 0 = Document already contains a MasterField by the name called in
;				   +									$sMasterFieldName
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve MasterFields Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to Create MasterField Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully created the MasterField, returning MasterField
;				   +												Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldSetVarMasterDelete, _LOWriter_FieldSetVarInsert
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterCreate(ByRef $oDoc, $sMasterFieldName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oMasterFields, $oMasterfield
	Local $sFullFieldName
	Local $sField = "com.sun.star.text.fieldmaster.SetExpression"

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sMasterFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$sFullFieldName = $sField & "." & $sMasterFieldName
	$oMasterFields = $oDoc.getTextFieldMasters()
	If Not IsObj($oMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If $oMasterFields.hasByName($sFullFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oMasterfield = $oDoc.createInstance($sField)
	If Not IsObj($oMasterfield) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oMasterfield.Name = $sMasterFieldName

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oMasterfield)
EndFunc   ;==>_LOWriter_FieldSetVarMasterCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterDelete
; Description ...: Delete a Set Variable Master Field.
; Syntax ........: _LOWriter_FieldSetVarMasterDelete(Byref $oDoc, $vMasterField)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $vMasterField        - a variant value. The Set Variable Master Field name to delete.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $vMasterField not a String and not an Object.
;				   @Error 1 @Extended 3 Return 0 = $vMasterField is a String, but document does not contain a Masterfield by
;				   +									that name.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve MasterFields Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve MasterField object called in $vMasterField.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to delete MasterField, but document still contains a MasterField
;				   +									by that name.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully deleted requested MasterField.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldSetVarMasterCreate, _LOWriter_FieldSetVarMasterGetObj, _LOWriter_FieldSetVarMasterList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterDelete(ByRef $oDoc, $vMasterField)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oMasterFields, $oMasterfield
	Local $sFullFieldName
	Local $sField = "com.sun.star.text.fieldmaster.SetExpression"

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($vMasterField) And Not IsObj($vMasterField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oMasterFields = $oDoc.getTextFieldMasters()
	If Not IsObj($oMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If IsObj($vMasterField) Then
		$sFullFieldName = $sField & "." & $vMasterField.Name()
		$oMasterfield = $vMasterField
	Else
		$sFullFieldName = $sField & "." & $vMasterField
		If Not $oMasterFields.hasByName($sFullFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oMasterfield = $oMasterFields.getByName($sFullFieldName)
	EndIf

	If Not IsObj($oMasterfield) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oMasterfield.dispose()

	Return ($oMasterFields.hasByName($sFullFieldName)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldSetVarMasterDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterExists
; Description ...: Check if a document contains a Set Variable Master Field by name.
; Syntax ........: _LOWriter_FieldSetVarMasterExists(Byref $oDoc, $sMasterFieldName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sMasterFieldName    - a string value. The Set Variable Master Field name to look for.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sMasterFieldName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve MasterFields Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. If the document contains a MasterField by the called name,
;				   +												then True is returned, Else false.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterExists(ByRef $oDoc, $sMasterFieldName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oMasterFields
	Local $sFullFieldName = "com.sun.star.text.fieldmaster.SetExpression" & "."

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sMasterFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$sFullFieldName &= $sMasterFieldName

	$oMasterFields = $oDoc.getTextFieldMasters()
	If Not IsObj($oMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If $oMasterFields.hasByName($sFullFieldName) Then Return SetError($__LOW_STATUS_SUCCESS, 1, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_FieldSetVarMasterExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterGetObj
; Description ...: Retrieve a Set Variable Master Field Object.
; Syntax ........: _LOWriter_FieldSetVarMasterGetObj(Byref $oDoc, $sMasterFieldName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sMasterFieldName    - a string value. The Set Variable Master Field to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sMasterFieldName not an Object.
;				   @Error 1 @Extended 3 Return 0 = Document does not contain FieldMaster named as called in $sMasterFieldName.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve MasterFields Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve requested FieldMaster Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully retrieved requested FieldMaster Object. Returning
;				   +												requested Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldSetVarMasterList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterGetObj(ByRef $oDoc, $sMasterFieldName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oMasterFields, $oMasterfield
	Local $sFullFieldName = "com.sun.star.text.fieldmaster.SetExpression" & "."

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sMasterFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$sFullFieldName &= $sMasterFieldName

	$oMasterFields = $oDoc.getTextFieldMasters()
	If Not IsObj($oMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If Not $oMasterFields.hasByName($sFullFieldName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oMasterfield = $oMasterFields.getByName($sFullFieldName)
	If Not IsObj($oMasterfield) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oMasterfield)
EndFunc   ;==>_LOWriter_FieldSetVarMasterGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterList
; Description ...: Retrieve a List of current Set Variable Master Fields in a document.
; Syntax ........: _LOWriter_FieldSetVarMasterList(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve MasterFields Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Array of MasterField Objects.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Successfully retrieved Array of Set Variable MasterField Names,
;				   +												returning Array of Set Variable MasterField Names with
;				   +												@Extended set to number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Note: This function includes in the list about 5 built-in Master Fields from Libre Office, namely:
;					Illustration, Table, Text, Drawing, and Figure.
; Related .......: _LOWriter_FieldSetVarMasterGetObj, _LOWriter_FieldSetVarMasterDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oMasterFields
	Local $asMasterFields[0], $asSetVarMasters[0]
	Local $iCount = 0
	Local $sField = "com.sun.star.text.fieldmaster.SetExpression"

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oMasterFields = $oDoc.getTextFieldMasters()
	If Not IsObj($oMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$asMasterFields = $oMasterFields.getElementNames()
	If Not IsArray($asMasterFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	ReDim $asSetVarMasters[UBound($asMasterFields)]

	For $i = 0 To UBound($asMasterFields) - 1
		If ($oMasterFields.getByName($asMasterFields[$i]).supportsService($sField)) Then
			$asSetVarMasters[$iCount] = $oMasterFields.getByName($asMasterFields[$i]).Name()
			$iCount += 1
		EndIf

		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next

	ReDim $asSetVarMasters[$iCount]

	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $asSetVarMasters)
EndFunc   ;==>_LOWriter_FieldSetVarMasterList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarMasterListFields
; Description ...: Return an Array of Objects of dependent fields for a specific Master Field.
; Syntax ........: _LOWriter_FieldSetVarMasterListFields(Byref $oDoc, Byref $oMasterfield)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oMasterfield        - [in/out] an object. The Set Variable Master Field Object returned from a previous
;				   +						Create or retrieval function.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oMasterfield not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve dependent fields Array.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully searched for dependent fields, but MasterField does
;				   +											not contain any.
;				   @Error 0 @Extended ? Return Array = Success. Successfully searched for dependent fields, returning Array of
;				   +												dependent SetVariable Fields, with @Extended set to number
;				   +												of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Dependent Fields are SetVariable Fields that are referencing the Master field.
; Related .......: _LOWriter_FieldSetVarMasterGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarMasterListFields(ByRef $oDoc, ByRef $oMasterfield)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aoDependFields[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oMasterfield) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$aoDependFields = $oMasterfield.DependentTextFields()
	If Not IsArray($aoDependFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return (UBound($aoDependFields) > 0) ? SetError($__LOW_STATUS_SUCCESS, UBound($aoDependFields), $aoDependFields) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldSetVarMasterListFields

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldSetVarModify
; Description ...: Set or Retrieve a Set Variable Field's settings.
; Syntax ........: _LOWriter_FieldSetVarModify(Byref $oDoc, Byref $oSetVarField[, $sValue = Null[, $iNumFormatKey = Null[, $bIsVisible = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oSetVarField        - [in/out] an object. A Set Variable field Object from a previous Insert or retrieval
;				   +									function.
;                  $sValue              - [optional] a string value. Default is Null. The Set Variable Field's value.
;                  $iNumFormatKey       - [optional] an integer value. Default is Null. The Number Format Key to use for
;				   +									displaying this variable.
;                  $bIsVisible          - [optional] a boolean value. Default is Null. If False, the Set Variable Field is
;				   +									invisible. L.O.'s default is True.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSetVarField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sValue not a String.
;				   @Error 1 @Extended 4 Return 0 = $iNumFormatKeyKey not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iNumFormatKeyKey not equal to -1 and Number Format key called in
;				   +									$iNumFormatKeyKey not found in document.
;				   @Error 1 @Extended 6 Return 0 = $bIsVisible not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sValue
;				   |								2 = Error setting $iNumFormatKey
;				   |								4 = Error setting $bIsVisible
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   +								The fourth element is the Variable Name.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldSetVarInsert, _LOWriter_FieldsGetList, _LOWriter_FormatKeyCreate _LOWriter_FormatKeyList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldSetVarModify(ByRef $oDoc, ByRef $oSetVarField, $sValue = Null, $iNumFormatKey = Null, $bIsVisible = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avSetVar[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oSetVarField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sValue, $iNumFormatKey, $bIsVisible) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oSetVarField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avSetVar, $oSetVarField.Content(), $iNumberFormat, $oSetVarField.IsVisible(), $oSetVarField.VariableName())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avSetVar)
	EndIf

	If ($sValue <> Null) Then
		If Not IsString($sValue) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oSetVarField.Content = $sValue
		$iError = ($oSetVarField.Content() = $sValue) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iNumFormatKey <> Null) Then
		If Not IsInt($iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If ($iNumFormatKey <> -1) And Not _LOWriter_FormatKeyExists($oDoc, $iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSetVarField.NumberFormat = $iNumFormatKey
		$iError = ($oSetVarField.NumberFormat() = $iNumFormatKey) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bIsVisible <> Null) Then
		If Not IsBool($bIsVisible) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oSetVarField.IsVisible = $bIsVisible
		$iError = ($oSetVarField.IsVisible() = $bIsVisible) ? $iError : BitOR($iError, 4)
	EndIf

	$oSetVarField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldSetVarModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldsGetList
; Description ...: Retrieve an Array of Field Objects contained in a document.
; Syntax ........: _LOWriter_FieldsGetList(Byref $oDoc[, $iType = $LOW_FIELD_TYPE_ALL[, $bSupportedServices = True[, $bFieldType = True[, $bFieldTypeNum = True]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iType               - [optional] an integer value. Default is $LOW_FIELD_TYPE_ALL. The type of Field to
;				   +						search for. See Constants. Can be BitOr'd together.
;                  $bSupportedServices  - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the supported service String for that particular Field, To assist in identifying
;				   +						the Field type.
;                  $bFieldType          - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type String for that particular Field as described by Libre Office.
;				   +						To assist in identifying the Field type.
;                  $bFieldTypeNum       - [optional] a boolean value. Default is True. If True, adds a column to the array that
;				   +						has the Field Type Constant Integer for that particular Field, to assist in
;				   +						identifying the Field type.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iType not an Integer, less than 1 or greater than 2147483647. (The total of
;				   +									all Constants added together.) See Constants.
;				   @Error 1 @Extended 3 Return 0 = $bSupportedServices not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bFieldType not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bFieldTypeNum not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $avFieldTypes passed to internal function not an Array. UDF needs fixed.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error converting Field type Constants.
;				   @Error 2 @Extended 2 Return 0 = Failed to create enumeration of fields in document.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning Array of Text Field Objects with @Extended set to
;				   +										number of results. See Remarks for Array sizing.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The Array can vary in the number of columns, if $bSupportedServices, $bFieldType, and $bFieldTypeNum are set
;					to False, the Array will be a single column. With each of the above listed options being set to True, a
;					column will be added in the order they are listed in the UDF parameters. The First column will always be the
;					Field Object.
;					Setting $bSupportedServices to True will add a Supported Service String column for the found Field.
;					Setting $bFieldType to True will add a Field type column for the found Field.
;					Setting $bFieldTypeNum to True will add a Field type Number column, matching the below constants, for the
;						found Field.
;					Note: For simplicity, and also due to certain Bit limitations I have broken the different Field types into
;						three different categories, Regular Fields, ($LWFieldType), Advanced(Complex) Fields, ($LWFieldAdvType),
;						and Document Information fields (Found in the Document Information Tab in L.O. Fields dialog),
;						($LWFieldDocInfoType). Just because a field is listed in the constants below, does not necessarily mean
;						that I have made a function to create/modify it, you may still be able to update or delete it using the
;						Field Update, or Field Delete function, though. Some Fields are too complex to create a function for,
;						and others are literally impossible.
;Field Type Constants: $LOW_FIELD_TYPE_ALL = 1, Returns a list of all field types listed below.
;						$LOW_FIELD_TYPE_COMMENT, A Comment Field. As Found at Insert > Comment
;						$LOW_FIELD_TYPE_AUTHOR, A Author field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_CHAPTER, A Chapter field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_CHAR_COUNT, A Character Count field, found in the Fields Dialog, Document tab,
;							Statistics Type.
;						$LOW_FIELD_TYPE_COMBINED_CHAR, A Combined Character field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_COND_TEXT, A Conditional Text field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_DATE_TIME, A Date/Time field, found in the Fields Dialog, Document tab, Date Type and
;							Time Type.
;						$LOW_FIELD_TYPE_INPUT_LIST,  A Input List field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_EMB_OBJ_COUNT,  A Object Count field, found in the Fields Dialog, Document tab,
;							Statistics Type.
;						$LOW_FIELD_TYPE_SENDER, A Sender field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_FILENAME,  A File Name field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_SHOW_VAR, A Show Variable field, found in the Fields Dialog, Variables tab.
;						$LOW_FIELD_TYPE_INSERT_REF,  A Insert Reference field, found in the Fields Dialog, Cross-References tab,
;													including: "Insert Reference", "Headings", "Numbered Paragraphs", "Drawing",
;													"Bookmarks", "Footnotes", "Endnotes", etc.
;						$LOW_FIELD_TYPE_IMAGE_COUNT, A Image Count field, found in the Fields Dialog, Document tab, Statistics
;							Type.
;						$LOW_FIELD_TYPE_HIDDEN_PAR, A Hidden Paragraph field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_HIDDEN_TEXT, A Hidden Text field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_INPUT, A Input field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_PLACEHOLDER, A Placeholder field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_MACRO, A Execute Macro field, found in the Fields Dialog, Functions tab.
;						$LOW_FIELD_TYPE_PAGE_COUNT, A Page Count field, found in the Fields Dialog, Document tab, Statistics
;							Type.
;						$LOW_FIELD_TYPE_PAGE_NUM,  A Page Number (Unstyled) field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_PAR_COUNT, A Paragraph Count field, found in the Fields Dialog, Document tab, Statistics
;							Type.
;						$LOW_FIELD_TYPE_SHOW_PAGE_VAR, A Show Page Variable field, found in the Fields Dialog, Variables tab.
;						$LOW_FIELD_TYPE_SET_PAGE_VAR, A Set Page Variable field, found in the Fields Dialog, Variables tab.
;						$LOW_FIELD_TYPE_SCRIPT,
;						$LOW_FIELD_TYPE_SET_VAR, A Set Variable field, found in the Fields Dialog, Variables tab.
;						$LOW_FIELD_TYPE_TABLE_COUNT, A Table Count field, found in the Fields Dialog, Document tab, Statistics
;							Type.
;						$LOW_FIELD_TYPE_TEMPLATE_NAME, A Templates field, found in the Fields Dialog, Document tab.
;						$LOW_FIELD_TYPE_URL,
;						$LOW_FIELD_TYPE_WORD_COUNT, A Word Count field, found in the Fields Dialog, Document tab, Statistics
;							Type.
; Related .......: _LOWriter_FieldsAdvGetList, _LOWriter_FieldsDocInfoGetList, _LOWriter_FieldDelete, _LOWriter_FieldGetAnchor,
;					_LOWriter_FieldUpdate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldsGetList(ByRef $oDoc, $iType = $LOW_FIELD_TYPE_ALL, $bSupportedServices = True, $bFieldType = True, $bFieldTypeNum = True)
	Local $avFieldTypes[0][0]
	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IntIsBetween($iType, $LOW_FIELD_TYPE_ALL, 2147483647) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	;2147483647 is all possible Consts added together
	If Not IsBool($bSupportedServices) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bFieldType) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bFieldTypeNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$avFieldTypes = __LOWriter_FieldTypeServices($iType)
	If (@error > 0) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$vReturn = __LOWriter_FieldsGetList($oDoc, $bSupportedServices, $bFieldType, $bFieldTypeNum, $avFieldTypes)

	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FieldsGetList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldShowVarInsert
; Description ...: Insert a Show Variable Field.
; Syntax ........: _LOWriter_FieldShowVarInsert(Byref $oDoc, Byref $oCursor, $sSetVarName[, $bOverwrite = False[, $iNumFormatKey = Null[, $bShowName = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $sSetVarName         - a string value. The Set Variable name to show the value of.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iNumFormatKey       - [optional] an integer value. Default is Null. The Number Format Key to display the
;				   +						content in
;                  $bShowName           - [optional] a boolean value. Default is Null. If True, the Set Variable name is
;				   +						displayed, rather than its value.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sSetVarName not a String.
;				   @Error 1 @Extended 6 Return 0 = Did not find a Set Var Field Master with same name as $sSetVarName.
;				   @Error 1 @Extended 7 Return 0 = $iNumFormatKey not an Integer.
;				   @Error 1 @Extended 8 Return 0 = Number Format key called in $iNumFormatKey not found in document.
;				   @Error 1 @Extended 9 Return 0 = $bShowName not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating "com.sun.star.text.TextField.GetExpression" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully inserted Show Variable field, returning
;				   +										Show Variable Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: This function checks if there is a Set Variable matching the name called in $sSetVarName.
; Related .......: _LOWriter_FieldShowVarModify, _LOWriter_FieldSetVarInsert, _LOWriter_FieldsGetList,
;					_LOWriter_FormatKeyCreate _LOWriter_FormatKeyList, _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					 _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldShowVarInsert(ByRef $oDoc, ByRef $oCursor, $sSetVarName, $bOverwrite = False, $iNumFormatKey = Null, $bShowName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oShowVarField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oShowVarField = $oDoc.createInstance("com.sun.star.text.TextField.GetExpression")
	If Not IsObj($oShowVarField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If Not IsString($sSetVarName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not _LOWriter_FieldSetVarMasterExists($oDoc, $sSetVarName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	$oShowVarField.Content = $sSetVarName

	If ($iNumFormatKey <> Null) Then
		If Not IsInt($iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not _LOWriter_FormatKeyExists($oDoc, $iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oShowVarField.NumberFormat = $iNumFormatKey
	EndIf

	If ($bShowName <> Null) Then
		If Not IsBool($bShowName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oShowVarField.IsShowFormula = $bShowName
		If ($bShowName = True) Then $oShowVarField.NumberFormat = -1
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oShowVarField, $bOverwrite)

	$oShowVarField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oShowVarField)
EndFunc   ;==>_LOWriter_FieldShowVarInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldShowVarModify
; Description ...:Set or Retrieve a Show Variable Field's settings.
; Syntax ........: _LOWriter_FieldShowVarModify(Byref $oDoc, Byref $oShowVarField[, $sSetVarName = Null[, $iNumFormatKey = Null[, $bShowName = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oShowVarField       - [in/out] an object. A Show Variable field Object from a previous Insert or retrieval
;				   +									function.
;                  $sSetVarName         - [optional] a string value. Default is Null. The Set Variable name to show the value of.
;                  $iNumFormatKey       - [optional] an integer value. Default is Null. The Number Format Key to display the
;				   +						content in
;                  $bShowName           - [optional] a boolean value. Default is Null. If True, the Set Variable name is
;				   +						displayed, rather than its value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oShowVarField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sSetVarName not a String.
;				   @Error 1 @Extended 4 Return 0 = Did not find a Set Var Field Master with same name as $sSetVarName.
;				   @Error 1 @Extended 5 Return 0 = $iNumFormatKey not an Integer.
;				   @Error 1 @Extended 6 Return 0 = Number Format key called in $iNumFormatKey not found in document.
;				   @Error 1 @Extended 7 Return 0 = $bShowName not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sSetVarName
;				   |								2 = Error setting $iNumFormatKey
;				   |								4 = Error setting $bShowName
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					 Note: This function checks if there is a Set Variable matching the name called in $sSetVarName.
; Related .......: _LOWriter_FieldShowVarInsert, _LOWriter_FieldsGetList, _LOWriter_FormatKeyCreate,  _LOWriter_FormatKeyList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldShowVarModify(ByRef $oDoc, ByRef $oShowVarField, $sSetVarName = Null, $iNumFormatKey = Null, $bShowName = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iNumberFormat
	Local $avShowVar[3]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oShowVarField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sSetVarName, $iNumFormatKey, $bShowName) Then
		;Libre Office Seems to insert its Number formats by adding 10,000 to the number, but if I insert that same value, it
		;fails/causes the wrong format to be used, so, If the Number format is greater than or equal to 10,000, Minus 10,000
		;from the value.
		$iNumberFormat = $oShowVarField.NumberFormat()
		$iNumberFormat = ($iNumberFormat >= 10000) ? ($iNumberFormat - 10000) : $iNumberFormat

		__LOWriter_ArrayFill($avShowVar, $oShowVarField.Content(), $iNumberFormat, $oShowVarField.IsShowFormula())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShowVar)
	EndIf

	If ($sSetVarName <> Null) Then
		If Not IsString($sSetVarName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If Not _LOWriter_FieldSetVarMasterExists($oDoc, $sSetVarName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oShowVarField.Content = $sSetVarName
		$iError = ($oShowVarField.Content() = $sSetVarName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iNumFormatKey <> Null) Then
		If Not IsInt($iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not _LOWriter_FormatKeyExists($oDoc, $iNumFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oShowVarField.NumberFormat = $iNumFormatKey
		$iError = ($oShowVarField.NumberFormat() = ($iNumFormatKey)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bShowName <> Null) Then
		If Not IsBool($bShowName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oShowVarField.IsShowFormula = $bShowName
		$iError = ($oShowVarField.IsShowFormula() = $bShowName) ? $iError : BitOR($iError, 4)
	EndIf

	$oShowVarField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldShowVarModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldStatCountInsert
; Description ...: Insert a Count Field.
; Syntax ........: _LOWriter_FieldStatCountInsert(Byref $oDoc, Byref $oCursor, $iCountType[, $bOverwrite = False[, $iNumFormat = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $iCountType          - an integer value. The Type of Data to Count. See Constants.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for Count
;				   +						field numbering. See Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $iCountType not an integer, less than 0 or greater than 6. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iNumFormat not an integer, less than 0 or greater than 71. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create requested Count Field Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve Field Count Service Type. Check Constants.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Count Field. Returning
;				   +											the Count Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: After insertion there seems to be a necessary delay before the value to display is available, thus when a
;						new count field is inserted, the value will be "0". If you call a _LOWriter_FieldUpdate for this
;						field after a few seconds, the value should appear.
;Field Count Type Constants: $LOW_FIELD_COUNT_TYPE_CHARACTERS(0), Count field is a Character Count type field.
;								$LOW_FIELD_COUNT_TYPE_IMAGES(1), Count field is an Image Count type field.
;								$LOW_FIELD_COUNT_TYPE_OBJECTS(2),  Count field is an Object Count type field._
;								$LOW_FIELD_COUNT_TYPE_PAGES(3), Count field is a Page Count type field.
;								$LOW_FIELD_COUNT_TYPE_PARAGRAPHS(4), Count field is a Paragraph Count type field.
;								$LOW_FIELD_COUNT_TYPE_TABLES(5), Count field is a Table Count type field.
;								$LOW_FIELD_COUNT_TYPE_WORDS(6), Count field is a Word Count type field.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_FieldStatCountModify, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldStatCountInsert(ByRef $oDoc, ByRef $oCursor, $iCountType, $bOverwrite = False, $iNumFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCountField
	Local $sFieldType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IntIsBetween($iCountType, $LOW_FIELD_COUNT_TYPE_CHARACTERS, $LOW_FIELD_COUNT_TYPE_WORDS) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$sFieldType = __LOWriter_FieldCountType($iCountType)
	If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oCountField = $oDoc.createInstance($sFieldType)
	If Not IsObj($oCountField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oCountField.NumberingType = $iNumFormat
	Else
		$oCountField.NumberingType = $LOW_NUM_STYLE_PAGE_DESCRIPTOR
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oCountField, $bOverwrite)

	$oCountField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oCountField)
EndFunc   ;==>_LOWriter_FieldStatCountInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldStatCountModify
; Description ...: Set or Retrieve a Count Field's settings.
; Syntax ........: _LOWriter_FieldStatCountModify(Byref $oDoc, Byref $oCountField[, $iCountType = Null[, $iNumFormat = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCountField         - [in/out] an object. A Count field Object from a previous Insert or retrieval
;				   +									function.
;                  $iCountType          - [optional] an integer value. Default is Null. The Type of Data to Count. See Constants.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for Count
;				   +						field numbering. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCountField not an Object.
;				   @Error 1 @Extended 3 Return 0 = $iCountType not an integer, less than 0 or greater than 6. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iNumFormat not an integer, less than 0 or greater than 71. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create requested Count Field Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve Field Count Service Type. Check Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iCountType
;				   |								2 = Error setting $iNumFormat
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					 After changing the Count type there may be a delay before the value to display is available,
;						thus when the count field is inserted, the value will be "0". If you call a _LOWriter_FieldUpdate for
;						this field after a few seconds, the value should appear.
;Field Count Type Constants: $LOW_FIELD_COUNT_TYPE_CHARACTERS(0), Count field is a Character Count type field.
;								$LOW_FIELD_COUNT_TYPE_IMAGES(1), Count field is an Image Count type field.
;								$LOW_FIELD_COUNT_TYPE_OBJECTS(2),  Count field is an Object Count type field._
;								$LOW_FIELD_COUNT_TYPE_PAGES(3), Count field is a Page Count type field.
;								$LOW_FIELD_COUNT_TYPE_PARAGRAPHS(4), Count field is a Paragraph Count type field.
;								$LOW_FIELD_COUNT_TYPE_TABLES(5), Count field is a Table Count type field.
;								$LOW_FIELD_COUNT_TYPE_WORDS(6), Count field is a Word Count type field.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_FieldStatCountInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldStatCountModify(ByRef $oDoc, ByRef $oCountField, $iCountType = Null, $iNumFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avCountField[2]
	Local $oNewCountField
	Local $sFieldType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCountField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iNumFormat) Then
		__LOWriter_ArrayFill($avCountField, __LOWriter_FieldCountType($oCountField), $oCountField.NumberingType())
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avCountField)
	EndIf

	If ($iCountType <> Null) Then
		If Not __LOWriter_IntIsBetween($iCountType, $LOW_FIELD_COUNT_TYPE_CHARACTERS, $LOW_FIELD_COUNT_TYPE_WORDS) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$sFieldType = __LOWriter_FieldCountType($iCountType)
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		If Not $oCountField.supportsService($sFieldType) Then ;If the Field is already that type, skip this and do nothing.

			$oNewCountField = $oDoc.createInstance($sFieldType)
			If Not IsObj($oNewCountField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

			;It doesn't work to just set a new Count type for an already inserted Count Field, so I have to create a new one and then
			;insert it.
			$oNewCountField.NumberingType = $oCountField.NumberingType()

			$oDoc.Text.createTextCursorByRange($oCountField.Anchor()).Text.insertTextContent($oCountField.Anchor(), $oNewCountField, True)

			;Update the Old Count Field Object to the new one.
			$oCountField = $oNewCountField

			$oCountField.Update()

			$iError = ($oCountField.supportsService($sFieldType)) ? $iError : BitOR($iError, 1)
		EndIf
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oCountField.NumberingType = $iNumFormat
		$iError = ($oCountField.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 2)
	EndIf

	$oCountField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldStatCountModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldStatTemplateInsert
; Description ...: Insert a Template Field.
; Syntax ........: _LOWriter_FieldStatTemplateInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $iFormat = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iFormat             - [optional] an integer value. Default is Null. The Format to display the Template data
;				   +									in. See Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iFormat not an integer, less than 0 or greater than 5. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.TemplateName" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Template Field. Returning
;				   +											the Template Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;File Name Constants: $LOW_FIELD_FILENAME_FULL_PATH(0), The content of the URL is completely displayed.
;						$LOW_FIELD_FILENAME_PATH(1), Only the path of the file is displayed.
;						$LOW_FIELD_FILENAME_NAME(2), Only the name of the file without the file extension is displayed.
;						$LOW_FIELD_FILENAME_NAME_AND_EXT(3), The file name including the file extension is displayed.
;						$LOW_FIELD_FILENAME_CATEGORY(4), The Category of the Template is displayed.
;						$LOW_FIELD_FILENAME_TEMPLATE_NAME(5), The Template Name is displayed.
; Related .......: _LOWriter_FieldStatTemplateModify, _LOWriter_DocGenPropTemplate,  _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldStatTemplateInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $iFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTemplateField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oTemplateField = $oDoc.createInstance("com.sun.star.text.TextField.TemplateName")
	If Not IsObj($oTemplateField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iFormat, $LOW_FIELD_FILENAME_FULL_PATH, $LOW_FIELD_FILENAME_TEMPLATE_NAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTemplateField.FileFormat = $iFormat
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oTemplateField, $bOverwrite)

	$oTemplateField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTemplateField)
EndFunc   ;==>_LOWriter_FieldStatTemplateInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldStatTemplateModify
; Description ...: Set or Retrieve a Template Field's settings.
; Syntax ........: _LOWriter_FieldStatTemplateModify(Byref $oTemplateField[, $iFormat = Null])
; Parameters ....: $oTemplateField      - [in/out] an object. A Template field Object from a previous Insert or retrieval
;				   +									function.
;                  $iFormat             - [optional] an integer value. Default is Null. The Format to display the Template data
;				   +									in. See Constants.
; Return values .: Success: 1 or Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTemplateField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormat not an integer, less than 0 or greater than 5. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iFormat
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning current
;				   +								Template Format Type setting, in Integer format. See File Name Constants.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;File Name Constants: $LOW_FIELD_FILENAME_FULL_PATH(0), The content of the URL is completely displayed.
;						$LOW_FIELD_FILENAME_PATH(1), Only the path of the file is displayed.
;						$LOW_FIELD_FILENAME_NAME(2), Only the name of the file without the file extension is displayed.
;						$LOW_FIELD_FILENAME_NAME_AND_EXT(3), The file name including the file extension is displayed.
;						$LOW_FIELD_FILENAME_CATEGORY(4), The Category of the Template is displayed.
;						$LOW_FIELD_FILENAME_TEMPLATE_NAME(5), The Template Name is displayed.
; Related .......: _LOWriter_FieldStatTemplateInsert, _LOWriter_DocGenPropTemplate, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldStatTemplateModify(ByRef $oTemplateField, $iFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oTemplateField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iFormat) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oTemplateField.FileFormat())

	If Not __LOWriter_IntIsBetween($iFormat, $LOW_FIELD_FILENAME_FULL_PATH, $LOW_FIELD_FILENAME_TEMPLATE_NAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTemplateField.FileFormat = $iFormat
	$iError = ($oTemplateField.FileFormat() = $iFormat) ? $iError : BitOR($iError, 1)

	$oTemplateField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldStatTemplateModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldUpdate
; Description ...: Update a Field or all fields in a document.
; Syntax ........: _LOWriter_FieldUpdate(Byref $oDoc[, $oField = Null[, $bForceUpdate = False]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oField              - [optional] an object. Default is Null. A Field Object returned from a previous Insert
;				   +						or Retrieve function. If left as Null, all Fields will be updated.
;                  $bForceUpdate        - [optional] a boolean value. Default is False. If True, Field(s) will be updated whether
;				   +						it(they) is(are) fixed or not. See remarks.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object
;				   @Error 1 @Extended 2 Return 0 = $oField not set to Null, and not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bForceUpdate not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve enumeration of all fields.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully updated requested field.
;				   @Error 0 @Extended 1 Return 1 = Success. Requested field is set to Fixed and $bForceUpdate is set to false,
;				   +									Field was not updated.
;				   @Error 0 @Extended ? Return 1 = Success. Successfully updated all fields, @Extended set to number of fields
;				   +											updated.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Updating a fixed field will usually erase any user-provided content, such as an author name, creation date
;						etc. If a Field is fixed, the field wont be updated unless $bForceUpdate is set to true.
; Related .......: _LOWriter_FieldsGetList _LOWriter_FieldsAdvGetList _LOWriter_FieldsDocInfoGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldUpdate(ByRef $oDoc, $oField = Null, $bForceUpdate = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextFields, $oTextField
	Local $iCount = 0, $iUpdated = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If $oField <> Null And Not IsObj($oField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bForceUpdate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If ($oField <> Null) Then
		If ($oField.getPropertySetInfo.hasPropertyByName("IsFixed") = True) Then
			If ($oField.IsFixed() = True) And ($bForceUpdate = False) Then Return SetError($__LOW_STATUS_SUCCESS, 1, 1) ;Updating a fixed field, causes its content to be removed.
		EndIf
		$oField.Update()
		Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
	EndIf

	;Update All Fields.
	$oTextFields = $oDoc.getTextFields.createEnumeration()
	If Not IsObj($oTextFields) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	While $oTextFields.hasMoreElements()
		$oTextField = $oTextFields.nextElement()

		If ($bForceUpdate = False) Then
			If ($oTextField.getPropertySetInfo.hasPropertyByName("IsFixed") = True) Then
				If ($oTextField.IsFixed() = False) Then
					$oTextField.Update()
					$iUpdated += 1
				EndIf ;Updating a fixed field, causes its content to be removed.
			Else
				$oTextField.Update()
				$iUpdated += 1
			EndIf


		Else
			$oTextField.Update()
			$iUpdated += 1
		EndIf

		$iCount += 1
		Sleep((IsInt($iCount / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	WEnd

	Return SetError($__LOW_STATUS_SUCCESS, $iUpdated, 1)
EndFunc   ;==>_LOWriter_FieldUpdate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldVarSetPageInsert
; Description ...: Insert a Set Page Variable Field.
; Syntax ........: _LOWriter_FieldVarSetPageInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $bRefOn = Null[, $iOffset = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $bRefOn              - [optional] a boolean value. Default is Null. If True, Reference point is enabled, else
;				   +									disabled.
;                  $iOffset             - [optional] an integer value. Default is Null. The offset the start the page count from.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bRefOn not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iOffset not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.ReferencePageSet" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Set Page Variable Field. Returning
;				   +											the Set Page Variable Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FieldVarSetPageModify, _LOWriter_DocGetViewCursor,	_LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldVarSetPageInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $bRefOn = Null, $iOffset = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageVarSetField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oPageVarSetField = $oDoc.createInstance("com.sun.star.text.TextField.ReferencePageSet")
	If Not IsObj($oPageVarSetField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bRefOn <> Null) Then
		If Not IsBool($bRefOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageVarSetField.On = $bRefOn
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageVarSetField.Offset = $iOffset
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oPageVarSetField, $bOverwrite)

	$oPageVarSetField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPageVarSetField)
EndFunc   ;==>_LOWriter_FieldVarSetPageInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldVarSetPageModify
; Description ...: Set or retrieve a Set Page Variable Field's settings.
; Syntax ........: _LOWriter_FieldVarSetPageModify(Byref $oPageVarSetField[, $bRefOn = Null[, $iOffset = Null]]])
; Parameters ....: $oPageVarSetField    - [in/out] an object. A Set Page Variable field Object from a previous Insert or
;				   +									retrieval function.
;                  $bRefOn              - [optional] a boolean value. Default is Null. If True, Reference point is enabled, else
;				   +									disabled.
;                  $iOffset             - [optional] an integer value. Default is Null. The offset the start the page count from.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageVarSetField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bRefOn not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $iOffset not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bRefOn
;				   |								2 = Error setting $iOffset
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FieldVarSetPageInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldVarSetPageModify(ByRef $oPageVarSetField, $bRefOn = Null, $iOffset = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avPage[2]

	If Not IsObj($oPageVarSetField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bRefOn, $iOffset) Then
		__LOWriter_ArrayFill($avPage, $oPageVarSetField.On(), $oPageVarSetField.Offset())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPage)
	EndIf

	If ($bRefOn <> Null) Then
		If Not IsBool($bRefOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oPageVarSetField.On = $bRefOn
		$iError = ($oPageVarSetField.On() = $bRefOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iOffset <> Null) Then
		If Not IsInt($iOffset) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageVarSetField.Offset = $iOffset
		$iError = ($oPageVarSetField.Offset() = $iOffset) ? $iError : BitOR($iError, 2)
	EndIf

	$oPageVarSetField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldVarSetPageModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldVarShowPageInsert
; Description ...: Insert a Show Page Variable Field.
; Syntax ........: _LOWriter_FieldVarShowPageInsert(Byref $oDoc, Byref $oCursor[, $bOverwrite = False[, $iNumFormat = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for Show
;				   +						Page Variable numbering. See Constants.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, not supported.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iNumFormat not an integer, less than 0 or greater than 71. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextField.ReferencePageGet" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully Inserted a Show Page Variable Field. Returning
;				   +											the Show Page Variable Field Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_FieldVarShowPageModify, _LOWriter_DocGetViewCursor,	_LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldVarShowPageInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $iNumFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageShowField

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oPageShowField = $oDoc.createInstance("com.sun.star.text.TextField.ReferencePageGet")
	If Not IsObj($oPageShowField) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageShowField.NumberingType = $iNumFormat
	Else
		$oPageShowField.NumberingType = $LOW_NUM_STYLE_PAGE_DESCRIPTOR
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oPageShowField, $bOverwrite)

	$oPageShowField.Update()

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPageShowField)
EndFunc   ;==>_LOWriter_FieldVarShowPageInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FieldVarShowPageModify
; Description ...: Set or Retrieve a Show Page Variable Field's settings.
; Syntax ........: _LOWriter_FieldVarShowPageModify(Byref $oPageShowField[, $iNumFormat = Null])
; Parameters ....: $oPageShowField      - [in/out] an object. A Show Page Variable field Object from a previous Insert or
;				   +									retrieval function.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for Show
;				   +						Page Variable numbering. See Constants.
; Return values .: Success: 1 or Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageShowField not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iNumFormat not an integer, less than 0 or greater than 71. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iNumFormat
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning current
;				   +								Numbering Type setting, in Integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_FieldVarShowPageInsert, _LOWriter_FieldsGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FieldVarShowPageModify(ByRef $oPageShowField, $iNumFormat = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oPageShowField) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iNumFormat) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oPageShowField.NumberingType())

	If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oPageShowField.NumberingType = $iNumFormat
	$iError = ($oPageShowField.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 1)

	$oPageShowField.Update()

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FieldVarShowPageModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyAlignment
; Description ...: Modify or Add Find Format Alignment Settings.
; Syntax ........: _LOWriter_FindFormatModifyAlignment(Byref $atFormat[, $iHorAlign = Null[, $iVertAlign = Null[, $iLastLineAlign = Null[, $bExpandSingleWord = Null[, $bSnapToGrid = Null[, $iTxtDirection = Null]]]]]])
; Parameters ....: $atFormat            - [in/out] an array of dll structs. A Find Format Array of Settings to modify. Array
;				   +						will be directly modified.
;                  $iHorAlign           - [optional] an integer value. Default is Null. The Horizontal alignment of the
;				   +						paragraph. See Constants below.
;                  $iVertAlign          - [optional] an integer value. Default is Null. The Vertical alignment of the paragraph.
;				   +						See Constants below. In my personal testing, searching for the Vertical Alignment
;				   +						setting using this parameter causes any results matching the searched for string to
;				   +						be replaced, whether they contain the Vert. Align format or not, this is supposed
;				   +						to be fixed in L.O. 7.6.
;                  $iLastLineAlign      - [optional] an integer value. Default is Null. Specify the alignment for the last line
;				   +						in the paragraph. See Constants below.
;                  $bExpandSingleWord   - [optional] a boolean value. Default is Null. If the last line of a justified paragraph
;				   +						consists of one word, the word is stretched to the width of the paragraph.
;                  $bSnapToGrid         - [optional] a boolean value. Default is Null. If True, Aligns the paragraph to a text
;				   +						grid (if one is active).
;                  $iTxtDirection       - [optional] an integer value. Default is Null. The Text Writing Direction. See
;				   +						Constants below. [Libre Office Default is 4] In my personal testing, searching for
;				   +						the Text Direction setting using this parameter alone, without using other
;				   +						parameters, causes any results matching the searched for string to be replaced,
;				   +						whether they contain the Text Direction format or not, this is supposed to be
;				   +						fixed in L.O. 7.6.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iHorAlign not an integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iVertAlign not an integer, less than 0 or more than 4. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iLastLineAlign not an integer, less than 0 or more than 3. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $bExpandSingleWord not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bSnapToGrid not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iTxtDirection not an Integer, less than 0 or greater than 5, See Constants.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					Note: $iTxtDirection constants 2,3, and 5 may not be available depending on your language settings.
; Horizontal Alignment Constants: $LOW_PAR_ALIGN_HOR_LEFT(0); The Paragraph is left-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_RIGHT(1); The Paragraph is right-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_ALIGN_HOR_CENTER(3); The Paragraph is centered between the left and right borders.
; Vertical Alignment Constants: $LOW_PAR_ALIGN_VERT_AUTO(0); In automatic mode, horizontal text is aligned to the baseline. The
;										same applies to text that is rotated 90°. Text that is rotated 270 ° is aligned to the
;										center.
;									$LOW_PAR_ALIGN_VERT_BASELINE(1); The text is aligned to the baseline.
;									$LOW_PAR_ALIGN_VERT_TOP(2); The text is aligned to the top.
;									$LOW_PAR_ALIGN_VERT_CENTER(3); The text is aligned to the center.
;									$LOW_PAR_ALIGN_VERT_BOTTOM(4); The text is aligned to bottom.
; Last Line Alignment Constants: $LOW_PAR_LAST_LINE_START(0); The Paragraph is aligned either to the Left border or the right,
;										depending on the current text direction.
;									$LOW_PAR_LAST_LINE_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_LAST_LINE_CENTER(3); The Paragraph is centered between the left and right borders.
; Text Direction Constants: $LOW_TXT_DIR_LR_TB(0), — text within lines is written left-to-right. Lines and blocks are placed
;								top-to-bottom. Typically, this is the writing mode for normal "alphabetic" text.
;							$LOW_TXT_DIR_RL_TB(1), — text within a line are written right-to-left. Lines and blocks are placed
;								top-to-bottom. Typically, this writing mode is used in Arabic and Hebrew text.
;							$LOW_TXT_DIR_TB_RL(2), — text within a line is written top-to-bottom. Lines and blocks are placed
;								right-to-left. Typically, this writing mode is used in Chinese and Japanese text.
;							$LOW_TXT_DIR_TB_LR(3), — text within a line is written top-to-bottom. Lines and blocks are placed
;								left-to-right. Typically, this writing mode is used in Mongolian text.
;							$LOW_TXT_DIR_CONTEXT(4), — obtain actual writing mode from the context of the object.
;							$LOW_TXT_DIR_BT_LR(5), — text within a line is written bottom-to-top. Lines and blocks are placed
;								left-to-right. (LibreOffice 6.3)
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyAlignment(ByRef $atFormat, $iHorAlign = Null, $iVertAlign = Null, $iLastLineAlign = Null, $bExpandSingleWord = Null, $bSnapToGrid = Null, $iTxtDirection = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iHorAlign <> Null) Then
		If ($iHorAlign = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaAdjust")
		Else
			If Not __LOWriter_IntIsBetween($iHorAlign, $LOW_PAR_ALIGN_HOR_LEFT, $LOW_PAR_ALIGN_HOR_CENTER) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaAdjust", $iHorAlign))
		EndIf
	EndIf

	If ($iVertAlign <> Null) Then
		If ($iVertAlign = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaVertAlignment")
		Else
			If Not __LOWriter_IntIsBetween($iVertAlign, $LOW_PAR_ALIGN_VERT_AUTO, $LOW_PAR_ALIGN_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaVertAlignment", $iVertAlign))
		EndIf
	EndIf

	If ($iLastLineAlign <> Null) Then
		If ($iLastLineAlign = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaLastLineAdjust")
		Else
			If Not __LOWriter_IntIsBetween($iLastLineAlign, $LOW_PAR_LAST_LINE_JUSTIFIED, $LOW_PAR_LAST_LINE_CENTER, "", $LOW_PAR_LAST_LINE_START) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaLastLineAdjust", $iLastLineAlign))
		EndIf
	EndIf

	If ($bExpandSingleWord <> Null) Then
		If ($bExpandSingleWord = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaExpandSingleWord")
		Else
			If Not IsBool($bExpandSingleWord) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaExpandSingleWord", $bExpandSingleWord))
		EndIf
	EndIf

	If ($bSnapToGrid <> Null) Then
		If ($bSnapToGrid = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "SnapToGrid")
		Else
			If Not IsBool($bSnapToGrid) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("SnapToGrid", $bSnapToGrid))
		EndIf
	EndIf

	If ($iTxtDirection <> Null) Then
		If ($iTxtDirection = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "WritingMode")
		Else
			If Not __LOWriter_IntIsBetween($iTxtDirection, $LOW_TXT_DIR_LR_TB, $LOW_TXT_DIR_BT_LR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("WritingMode", $iTxtDirection))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyAlignment

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyEffects
; Description ...: Modify or Add Find Format Effects Settings.
; Syntax ........: _LOWriter_FindFormatModifyEffects(Byref $atFormat[,$iRelief  = Null[, $iCase = Null[, $bOutline = Null[, $bShadow = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iRelief             - [optional] an integer value. Default is Null. The Character Relief style. See
;				   +						Constants below. Min. 0, Max 2. In my personal testing, searching for the Relief
;				   +						setting using this parameter causes any results matching the searched for string to
;				   +						be replaced, whether they contain the Relief format or not, this is supposed to be
;				   +						fixed in L.O. 7.6.
;                  $iCase               - [optional] an integer value. Default is Null. The Character Case Style. See Constants
;				   +						below. Min. 0, Max 4.
;                  $bOutline            - [optional] a boolean value. Default is Null. Whether the characters have an outline
;				   +						around the outside.
;                  $bShadow             - [optional] a boolean value. Default is Null. Whether the characters have a shadow.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iRelief not an integer or less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iCase not an integer or less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $bOutline not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bShadow not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
; Case Constants : 	$LOW_CASEMAP_NONE(0); The case of the characters is unchanged.
;						$LOW_CASEMAP_UPPER(1); All characters are put in upper case.
;						$LOW_CASEMAP_LOWER(2); All characters are put in lower case.
;						$LOW_CASEMAP_TITLE(3); The first character of each word is put in upper case.
;						$LOW_CASEMAP_SM_CAPS(4); All characters are put in upper case, but with a smaller font height.
; Relief Constants: $LOW_RELIEF_NONE(0); no relief is used.
;						$LOW_RELIEF_EMBOSSED(1); the font relief is embossed.
;						$LOW_RELIEF_ENGRAVED(2); the font relief is engraved.
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyEffects(ByRef $atFormat, $iRelief = Null, $iCase = Null, $bOutline = Null, $bShadow = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iRelief <> Null) Then
		If ($iRelief = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharRelief")
		Else
			If Not __LOWriter_IntIsBetween($iRelief, $LOW_RELIEF_NONE, $LOW_RELIEF_ENGRAVED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharRelief", $iRelief))
		EndIf
	EndIf

	If ($iCase <> Null) Then
		If ($iCase = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharCaseMap")
		Else
			If Not __LOWriter_IntIsBetween($iCase, $LOW_CASEMAP_NONE, $LOW_CASEMAP_SM_CAPS) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharCaseMap", $iCase))
		EndIf
	EndIf

	If ($bOutline <> Null) Then
		If ($bOutline = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharContoured")
		Else
			If Not IsBool($bOutline) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharContoured", $bOutline))
		EndIf
	EndIf

	If ($bShadow <> Null) Then
		If ($bShadow = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharShadowed")
		Else
			If Not IsBool($bShadow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharShadowed", $bShadow))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyEffects

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyFont
; Description ...: Modify or Add Find Format Font Settings.
; Syntax ........: _LOWriter_FindFormatModifyFont(Byref $oDoc, Byref $atFormat[, $sFontName = Null[, $iFontSize = Null[, $iFontWeight = Null[, $iFontPosture = Null[, $iFontColor = Null[, $iTransparency = Null[, $iHighlight = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified. See Remarks.
;                  $sFontName           - [optional] a string value. Default is Null. The Font name to search for.
;                  $iFontSize           - [optional] an integer value. Default is Null. The Font size to search for.
;                  $iFontWeight         - [optional] an integer value. Default is Null. The Font weight to search for. See
;				   +						Constants.
;                  $iFontPosture        - [optional] an integer value. Default is Null. The Font Posture(Italic etc.,) See
;				   +						Constants.
;                  $iFontColor          - [optional] an integer value. Default is Null. The Font Color in Long Integer format,
;				   +						Min. $LOW_COLOR_OFF(-1), Max $LOW_COLOR_WHITE(16777215). See some preset values
;				   +						in Constants below.
;                  $iTransparency       - [optional] an integer value. Default is Null. The percentage of Transparency, Min. 0,
;				   +						Max 100. 0 is not visible, 100 is fully visible. Seems to require a color entered
;				   +						in $iFontColor before transparency can be searched for. Libre Office 7.0 and Up.
;                  $iHighlight          - [optional] an integer value. Default is Null. The Highlight color to search for, in
;				   +						 Long Integer format, min. $LOW_COLOR_OFF(-1), Max $LOW_COLOR_WHITE(16777215),
;				   +						See some preset values in Color Constants below.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 3 Return 0 = $sFontName not a String.
;				   @Error 1 @Extended 4 Return 0 = Font defined in $sFontName not found in current Document.
;				   @Error 1 @Extended 5 Return 0 = $iFontSize not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iFontWeight not an Integer, less than 50 but not 0, or more than 200. See
;				   +									Constants.
;				   @Error 1 @Extended 7 Return 0 = $iFontPosture not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iFontColor not an Integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 9 Return 0 = $iTransparency not an Integer, Less than 0 or greater than 100.
;				   @Error 1 @Extended 10 Return 0 = $iHighlight not an Integer, less than -1 or greater than 16777215.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
; Weight Constants : $LOW_WEIGHT_DONT_KNOW(0); The font weight is not specified/known.
;						$LOW_WEIGHT_THIN(50); specifies a 50% font weight.
;						$LOW_WEIGHT_ULTRA_LIGHT(60); specifies a 60% font weight.
;						$LOW_WEIGHT_LIGHT(75); specifies a 75% font weight.
;						$LOW_WEIGHT_SEMI_LIGHT(90); specifies a 90% font weight.
;						$LOW_WEIGHT_NORMAL(100); specifies a normal font weight.
;						$LOW_WEIGHT_SEMI_BOLD(110); specifies a 110% font weight.
;						$LOW_WEIGHT_BOLD(150); specifies a 150% font weight.
;						$LOW_WEIGHT_ULTRA_BOLD(175); specifies a 175% font weight.
;						$LOW_WEIGHT_BLACK(200); specifies a 200% font weight.
; Slant/Posture Constants : $LOW_POSTURE_NONE(0); specifies a font without slant.
;							$LOW_POSTURE_OBLIQUE(1); specifies an oblique font (slant not designed into the font).
;							$LOW_POSTURE_ITALIC(2); specifies an italic font (slant designed into the font).
;							$LOW_POSTURE_DontKnow(3); specifies a font with an unknown slant.
;							$LOW_POSTURE_REV_OBLIQUE(4); specifies a reverse oblique font (slant not designed into the font).
;							$LOW_POSTURE_REV_ITALIC(5); specifies a reverse italic font (slant designed into the font).
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,_LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll _LOWriter_DocReplaceAllInRange,
;					_LOWriter_FontsList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyFont(ByRef $oDoc, ByRef $atFormat, $sFontName = Null, $iFontSize = Null, $iFontWeight = Null, $iFontPosture = Null, $iFontColor = Null, $iTransparency = Null, $iHighlight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $UBOUND_COLUMNS = 2

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($sFontName <> Null) Then
		If ($sFontName = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharFontName")
		Else
			If Not IsString($sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			If Not _LOWriter_FontExists($oDoc, $sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharFontName", $sFontName))
		EndIf
	EndIf

	If ($iFontSize <> Null) Then
		If ($iFontSize = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharHeight")
		Else
			If Not IsInt($iFontSize) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharHeight", $iFontSize))
		EndIf
	EndIf

	If ($iFontWeight <> Null) Then
		If ($iFontWeight = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharWeight")
		Else
			If Not __LOWriter_IntIsBetween($iFontWeight, $LOW_WEIGHT_THIN, $LOW_WEIGHT_BLACK, "", $LOW_WEIGHT_DONT_KNOW) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharWeight", $iFontWeight))
		EndIf
	EndIf

	If ($iFontPosture <> Null) Then
		If ($iFontPosture = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharPosture")
		Else
			If Not __LOWriter_IntIsBetween($iFontPosture, $LOW_POSTURE_NONE, $LOW_POSTURE_ITALIC) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharPosture", $iFontPosture))
		EndIf
	EndIf

	If ($iFontColor <> Null) Then
		If ($iFontColor = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharColor")
		Else
			If Not __LOWriter_IntIsBetween($iFontColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharColor", $iFontColor))
		EndIf
	EndIf

	If ($iTransparency <> Null) Then
		If ($iTransparency = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharTransparence")
		Else
			If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
			If Not __LOWriter_VersionCheck(7.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharTransparence", $iTransparency))
		EndIf
	EndIf

	If ($iHighlight <> Null) Then
		If ($iHighlight = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharBackColor")
			If __LOWriter_VersionCheck(4.2) Then __LOWriter_FindFormatDeleteSetting($atFormat, "CharHighlight")
		Else
			If Not __LOWriter_IntIsBetween($iHighlight, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
			;CharHighlight; same as CharBackColor---Libre seems to use back color for highlighting.
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharBackColor", $iHighlight))
			If __LOWriter_VersionCheck(4.2) Then __LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharHighlight", $iHighlight))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyFont

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyHyphenation
; Description ...: Modify or Add Find Format Hyphenation Settings. See Remarks.
; Syntax ........: _LOWriter_FindFormatModifyHyphenation(Byref $atFormat[, $bAutoHyphen = Null[, $bHyphenNoCaps = Null[, $iMaxHyphens = Null[, $iMinLeadingChar = Null[, $iMinTrailingChar = Null]]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $bAutoHyphen         - [optional] a boolean value. Default is Null. Whether  automatic hyphenation is applied.
;                  $bHyphenNoCaps       - [optional] a boolean value. Default is Null. Setting to true will disable
;				   +						hyphenation of words written in CAPS for this paragraph. Libre 6.4 and up.
;                  $iMaxHyphens         - [optional] an integer value. Default is Null. The maximum number of consecutive
;				   +						hyphens. Min 0, Max 99.
;                  $iMinLeadingChar     - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain before the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
;                  $iMinTrailingChar    - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain after the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $bAutoHyphen not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bHyphenNoCaps not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iMaxHyphens not an Integer, less than 0, or greater than 99.
;				   @Error 1 @Extended 5 Return 0 = $iMinLeadingChar not an Integer, less than 2 or greater than 9.
;				   @Error 1 @Extended 6 Return 0 = $iMinTrailingChar not an Integer, less than 2 or greater than 9.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 6.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: In my personal testing, searching for any of these hyphenation formatting settings causes any results
;						matching the searched for string to be replaced, whether they contain these formatting settings or not,
;						I am unsure why.
;					Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyHyphenation(ByRef $atFormat, $bAutoHyphen = Null, $bHyphenNoCaps = Null, $iMaxHyphens = Null, $iMinLeadingChar = Null, $iMinTrailingChar = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bAutoHyphen <> Null) Then
		If ($bAutoHyphen = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaIsHyphenation")
		Else
			If Not IsBool($bAutoHyphen) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaIsHyphenation", $bAutoHyphen))
		EndIf
	EndIf

	If ($bHyphenNoCaps <> Null) Then
		If ($bHyphenNoCaps = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaHyphenationNoCaps")
		Else
			If Not IsBool($bHyphenNoCaps) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			If Not __LOWriter_VersionCheck(6.4) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaHyphenationNoCaps", $bHyphenNoCaps))
		EndIf
	EndIf

	If ($iMaxHyphens <> Null) Then
		If ($iMaxHyphens = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaHyphenationMaxHyphens")
		Else
			If Not __LOWriter_IntIsBetween($iMaxHyphens, 0, 99) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaHyphenationMaxHyphens", $iMaxHyphens))
		EndIf
	EndIf

	If ($iMinLeadingChar <> Null) Then
		If ($iMinLeadingChar = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaHyphenationMaxLeadingChars")
		Else
			If Not __LOWriter_IntIsBetween($iMinLeadingChar, 2, 9) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaHyphenationMaxLeadingChars", $iMinLeadingChar))
		EndIf
	EndIf

	If ($iMinTrailingChar <> Null) Then
		If ($iMinTrailingChar = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaHyphenationMaxTrailingChars")
		Else
			If Not __LOWriter_IntIsBetween($iMinTrailingChar, 2, 9) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaHyphenationMaxTrailingChars", $iMinTrailingChar))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyHyphenation

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyIndent
; Description ...: Modify or Add Find Format Indent Settings.
; Syntax ........: _LOWriter_FindFormatModifyIndent(Byref $atFormat[, $iBeforeText = Null[, $iAfterText = Null[, $iFirstLine = Null[, $bAutoFirstLine = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iBeforeText         - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						indent the paragraph from the page margin. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094. Both $iBeforeText and $iAfterText must be set to perform a search for
;				   +						either.
;                  $iAfterText          - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						indent the paragraph from the page margin. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094. Both $iBeforeText and $iAfterText must be set to perform a search for
;				   +						either.
;                  $iFirstLine          - [optional] an integer value. Default is Null. Indentation distance of the first line
;				   +						of a paragraph, Set in MicroMeters(uM) Min. -57785, Max.17094. Both $iBeforeText and
;				   +						$iAfterText must be set to perform a search for $iFirstLine.
;                  $bAutoFirstLine      - [optional] a boolean value. Default is Null. Whether the first line should be indented
;				   +						automatically. Both $iBeforeText and $iAfterText must be set to perform a search
;				   +						for $bAutoFirstLine.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iBeforeText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 3 Return 0 = $iAfterText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 4 Return 0 = $iFirstLine not an integer, less than -57785 or more than 17094 uM.
;				   @Error 1 @Extended 5 Return 0 = $bAutoFirstLine not a Boolean.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					Note: $iFirstLine Indent cannot be set if $bAutoFirstLine is set to True.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyIndent(ByRef $atFormat, $iBeforeText = Null, $iAfterText = Null, $iFirstLine = Null, $bAutoFirstLine = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	;Min: -9998989;Max: 17094
	If ($iBeforeText <> Null) Then
		If ($iBeforeText = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaLeftMargin")
		Else
			If Not __LOWriter_IntIsBetween($iBeforeText, -9998989, 17094) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaLeftMargin", $iBeforeText))
		EndIf
	EndIf

	If ($iAfterText <> Null) Then
		If ($iAfterText = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaRightMargin")
		Else
			If Not __LOWriter_IntIsBetween($iAfterText, -9998989, 17094) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaRightMargin", $iAfterText))
		EndIf
	EndIf

	;mx 17094min;-57785
	If ($iFirstLine <> Null) Then
		If ($iFirstLine = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaFirstLineIndent")
		Else
			If Not __LOWriter_IntIsBetween($iFirstLine, -57785, 17094) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaFirstLineIndent", $iFirstLine))
		EndIf
	EndIf

	If ($bAutoFirstLine <> Null) Then
		If ($bAutoFirstLine = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaIsAutoFirstLineIndent")
		Else
			If Not IsBool($bAutoFirstLine) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaIsAutoFirstLineIndent", $bAutoFirstLine))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyIndent

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyOverline
; Description ...: Modify or Add Find Format Overline Settings.
; Syntax ........: _LOWriter_FindFormatModifyOverline(Byref $atFormat[, $iOverLineStyle = Null[, $bWordOnly = Null[, $bOLHasColor = Null[, $iOLColor = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iOverLineStyle      - [optional] an integer value. Default is Null. The style of the Overline line, see
;				   +						constants listed below, Underline Constants are used for Overline line style.
;				   +						Overline style must be set before any of the other parameters can be searched for.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not Overlined.
;				   +						See remarks.
;                  $bOLHasColor         - [optional] a boolean value. Default is Null. Whether the Overline is colored, must
;				   +						be set to true in order to set the Overline color.
;                  $iOLColor            - [optional] an integer value. Default is Null. The color of the Overline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value.
;				   +						$LOW_COLOR_OFF(-1) is automatic color mode.  Min. -1, Max 16777215.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iOverLineStyle not an Integer, or less than 0 or greater than 18. See
;				   +									Constants.
;				   @Error 1 @Extended 3 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bOLHasColor not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iOLColor not an Integer, or less than -1 or greater than 16777215.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					$bWordOnly applies to Underline, Overline and Strikeout, regardless of which is set to true, one setting
;						applies to all.
; OverLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyOverline(ByRef $atFormat, $iOverLineStyle = Null, $bWordOnly = Null, $bOLHasColor = Null, $iOLColor = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iOverLineStyle <> Null) Then
		If ($iOverLineStyle = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharOverline")
		Else
			If Not __LOWriter_IntIsBetween($iOverLineStyle, $LOW_UNDERLINE_NONE, $LOW_UNDERLINE_BOLD_WAVE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharOverline", $iOverLineStyle))
		EndIf
	EndIf

	If ($bWordOnly <> Null) Then
		If ($bWordOnly = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharWordMode")
		Else
			If Not IsBool($bWordOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharWordMode", $bWordOnly))
		EndIf
	EndIf

	If ($bOLHasColor <> Null) Then
		If ($bOLHasColor = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharOverlineHasColor")
		Else
			If Not IsBool($bOLHasColor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharOverlineHasColor", $bOLHasColor))
		EndIf
	EndIf

	If ($iOLColor <> Null) Then
		If ($iOLColor = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharOverlineColor")
		Else
			If Not __LOWriter_IntIsBetween($iOLColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharOverlineColor", $iOLColor))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyOverline

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyPageBreak
; Description ...: Modify or Add Find Format Page Break Settings. See Remarks.
; Syntax ........: _LOWriter_FindFormatModifyPageBreak(Byref $oDoc, Byref $atFormat[, $iBreakType = Null[, $sPageStyle = Null[, $iPgNumOffSet = Null]]])
; Parameters ....: $oDoc                - [in/out] an object.  A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iBreakType          - [optional] an integer value. Default is Null. The Page Break Type. See Constants below.
;                  $sPageStyle          - [optional] a string value. Default is Null. Creates a page break before the paragraph
;				   +						it belongs to and assigns the value as the name of the new page style to use.
;                  $iPgNumOffSet        - [optional] an integer value. Default is Null. If a page break property is set at a
;				   +						paragraph, this property contains the new value for the page number.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iBreakType not an integer, less than 0 or greater than 6.
;				   @Error 1 @Extended 3 Return 0 = $sPageStyle not a String.
;				   @Error 1 @Extended 4 Return 0 = Page Style defined in $sPageStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = $iPgNumOffSet not an Integer or less than 0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: In my personal testing, searching for a page break was very hit and miss, especially when searching with the
;					"PageStyle" Name parameter, and it never worked for searching for PageNumberOffset.
;					Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;Break Constants : $LOW_BREAK_NONE(0) – No column or page break is applied.
;						$LOW_BREAK_COLUMN_BEFORE(1) – A column break is applied before the current Paragraph. The current
;							Paragraph, therefore, is the first in the column.
;						$LOW_BREAK_COLUMN_AFTER(2) – A column break is applied after the current Paragraph. The current
;							Paragraph, therefore, is the last in the column.
;						$LOW_BREAK_COLUMN_BOTH(3) – A column break is applied before and after the current Paragraph. The
;							current Paragraph, therefore, is the only Paragraph in the column.
;						$LOW_BREAK_PAGE_BEFORE(4) – A page break is applied before the current Paragraph. The current Paragraph,
;						therefore, is the first on the page.
;						$LOW_BREAK_PAGE_AFTER(5) – A page break is applied after the current Paragraph. The current Paragraph,
;						therefore, is the last on the page.
;						$LOW_BREAK_PAGE_BOTH(6) – A page break is applied before and after the current Paragraph. The current
;						Paragraph, therefore, is the only paragraph on the page.
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyPageBreak(ByRef $oDoc, ByRef $atFormat, $iBreakType = Null, $sPageStyle = Null, $iPgNumOffSet = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iBreakType <> Null) Then
		If ($iBreakType = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "BreakType")
		Else
			If Not __LOWriter_IntIsBetween($iBreakType, $LOW_BREAK_NONE, $LOW_BREAK_PAGE_BOTH) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("BreakType", $iBreakType))
		EndIf
	EndIf

	If ($sPageStyle <> Null) Then
		If ($sPageStyle = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "PageStyleName") ;PageDescName -- Not working?
		Else
			If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			If Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("PageStyleName", $sPageStyle))
		EndIf
	EndIf

	If ($iPgNumOffSet <> Null) Then
		If ($iPgNumOffSet = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "PageNumberOffset")
		Else
			If Not __LOWriter_IntIsBetween($iPgNumOffSet, 0, $iPgNumOffSet) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("PageNumberOffset", $iPgNumOffSet))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyPageBreak

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyPosition
; Description ...: Modify or Add Find Format Position Settings.
; Syntax ........: _LOWriter_FindFormatModifyPosition(Byref $atFormat[, $bAutoSuper = Null[, $iSuperScript = Null[, $bAutoSub = Null[, $iSubScript = Null[, $iRelativeSize = Null]]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $bAutoSuper          - [optional] a boolean value. Default is Null.  Whether to active automatic sizing for
;				   +						SuperScript. Note: $iRelativeSize must be set to be able to search for
;				   +						Super/SubScript settings.
;                  $iSuperScript        - [optional] an integer value. Default is Null. SuperScript percentage value. See
;				   +						Remarks. Note: $iRelativeSize must be set to be able to search for Super/SubScript
;				   +						settings.
;                  $bAutoSub            - [optional] a boolean value. Default is Null. Whether to active automatic sizing for
;				   +						SubScript. Note: $iRelativeSize must be set to be able to search for Super/SubScript
;				   +						settings.
;                  $iSubScript          - [optional] an integer value. Default is Null. SubScript percentage value. See Remarks.
;				   +						Note: $iRelativeSize must be set to be able to search for Super/SubScript settings.
;                  $iRelativeSize       - [optional] an integer value. Default is Null. Percentage relative to current font size,
;				   +						Min. 1, Max 100.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $bAutoSuper not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAutoSub not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iSuperScript not an integer, or less than 0, higher than 100 and Not 14000.
;				   @Error 1 @Extended 5 Return 0 = $iSubScript not an integer, or less than -100, higher than 100 and Not
;				   +									(-)14000.
;				   @Error 1 @Extended 6 Return 0 = $iRelativeSize not an integer, or less than 1, higher than 100.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					0 is the normal $iSubScript or $iSuperScript setting.
;					The way LibreOffice is set up Super/SubScript are set in the same setting, Super is a positive number from
;						1 to 100 (percentage), SubScript is a negative number set to 1 to 100 percentage. For the user's
;						convenience this function accepts both positive and negative numbers for SubScript, if a positive number
;						is called for SubScript, it is automatically set to a negative. Automatic Superscript has a integer
;						value of 14000, Auto SubScript has a integer value of -14000. There is no settable setting of Automatic
;						Super/Sub Script, though one exists, it is read-only in LibreOffice, consequently I have made two
;						separate parameters to be able to determine if the user wants to automatically set SuperScript or
;						SubScript. If you set both Auto SuperScript to True and Auto SubScript to True, or $iSuperScript to an
;						integer and $iSubScript to an integer, Subscript will be set as it is the last in the line to be set in
;						this function, and thus will over-write any SuperScript settings.
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyPosition(ByRef $atFormat, $bAutoSuper = Null, $iSuperScript = Null, $bAutoSub = Null, $iSubScript = Null, $iRelativeSize = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bAutoSuper <> Null) Then
		If ($bAutoSuper = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharEscapement")
		Else
			If Not IsBool($bAutoSuper) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			;If $bAutoSuper = True set it to 14000 (automatic superScript) else if $iSuperScript is set, let that overwrite
			;	the current setting, else if subscript is true or set to an integer, it will overwrite the setting. If nothing
			;else set SubScript to 1
			$iSuperScript = ($bAutoSuper) ? 14000 : (IsInt($iSuperScript)) ? $iSuperScript : (IsInt($iSubScript) Or ($bAutoSub = True)) ? $iSuperScript : 1
		EndIf
	EndIf

	If ($bAutoSub <> Null) Then
		If ($bAutoSub = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharEscapement")
		Else
			If Not IsBool($bAutoSub) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			;If $bAutoSub = True set it to -14000 (automatic SubScript) else if $iSubScript is set, let that overwrite
			;	the current setting, else if superscript is true or set to an integer, it will overwrite the setting.
			$iSubScript = ($bAutoSub) ? -14000 : (IsInt($iSubScript)) ? $iSubScript : (IsInt($iSuperScript)) ? $iSubScript : 1
		EndIf
	EndIf

	If ($iSuperScript <> Null) Then
		If ($iSuperScript = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharEscapement")
		Else
			If Not __LOWriter_IntIsBetween($iSuperScript, 0, 100, "", 14000) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharEscapement", $iSuperScript))
		EndIf
	EndIf

	If ($iSubScript <> Null) Then
		If ($iSubScript = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharEscapement")
		Else
			If Not __LOWriter_IntIsBetween($iSubScript, -100, 100, "", "-14000:14000") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			$iSubScript = ($iSubScript > 0) ? Int("-" & $iSubScript) : $iSubScript
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharEscapement", $iSubScript))
		EndIf
	EndIf

	If ($iRelativeSize <> Null) Then
		If ($iRelativeSize = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharEscapementHeight")
		Else
			If Not __LOWriter_IntIsBetween($iRelativeSize, 1, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharEscapementHeight", $iRelativeSize))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyPosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyRotateScaleSpace
; Description ...: Modify or Add Find Format Rotate, Scale, and Space Settings.
; Syntax ........: _LOWriter_FindFormatModifyRotateScaleSpace(Byref $atFormat[, $iRotation = Null[, $iScaleWidth = Null[, $bAutoKerning = Null[, $nKerning = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iRotation           - [optional] an integer value. Default is Null. Degrees to rotate the text. Accepts only
;				   +						0, 90, and 270 degrees. In my personal testing, searching for the Rotate
;				   +						setting using this parameter causes any results matching the searched for string to
;				   +						be replaced, whether they contain the Rotate format or not, this is supposed to be
;				   +						fixed in L.O. 7.6.
;                  $iScaleWidth         - [optional] an integer value. Default is Null. The percentage to horizontally stretch
;				   +						or compress the text. Min. 1. Max 100. 100 is normal sizing. In my personal testing,
;				   +						searching for the Scale Width setting using this parameter causes any results
;				   +						matching the searched for string to be replaced, whether they contain the Scale
;				   +						Width format or not, this is supposed to be fixed in L.O. 7.6.
;                  $bAutoKerning        - [optional] a boolean value. Default is Null. True applies a spacing in between certain
;				   +						pairs of characters. False = disabled.
;                  $nKerning            - [optional] a general number value. Default is Null. The kerning value of the
;				   +						characters. Min is -2 Pt. Max is 928.8 Pt. See Remarks. Values are in Printer's
;				   +						Points as set in the Libre Office UI.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iRotation not an Integer or not equal to 0, 90 or 270 degrees.
;				   @Error 1 @Extended 3 Return 0 = $iScaleWidth not an Integer or less than 1 or greater than 100.
;				   @Error 1 @Extended 4 Return 0 = $bAutoKerning not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $nKerning not a number, or less than -2 or greater than 928.8 Points.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					When setting Kerning values in LibreOffice, the measurement is listed in Pt (Printer's Points) in the User
;						Display, however the internal setting is measured in MicroMeters. They will be automatically converted
;						from Points to MicroMeters and back for retrieval of settings.
;						The acceptable values are from -2 Pt to  928.8 Pt. the figures can be directly converted easily,
;						however, for an unknown reason to myself, LibreOffice begins counting backwards and in negative
;						MicroMeters internally from 928.9 up to 1000 Pt (Max setting). For example, 928.8Pt is the last
;						correct value, which equals 32766 uM (MicroMeters), after this LibreOffice reports the following:
;						;928.9 Pt = -32766 uM; 929 Pt = -32763 uM; 929.1 = -32759; 1000 pt = -30258. Attempting to set
;						Libre's kerning value to anything over 32768 uM causes a COM exception, and attempting to set the
;						 kerning to any of these negative numbers sets the User viewable kerning value to -2.0 Pt. For these
;						reasons the max settable kerning is -2.0 Pt to 928.8 Pt.
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyRotateScaleSpace(ByRef $atFormat, $iRotation = Null, $iScaleWidth = Null, $bAutoKerning = Null, $nKerning = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iRotation <> Null) Then
		If ($iRotation = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharRotation")
		Else
			If Not __LOWriter_IntIsBetween($iRotation, 0, 0, "", "90:270") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			$iRotation = ($iRotation > 0) ? ($iRotation * 10) : $iRotation ;rotation set in hundredths (90 deg = 900 etc)so times by 10.
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharRotation", $iRotation))
		EndIf
	EndIf

	If ($iScaleWidth <> Null) Then ;can't be less than 1%
		If ($iScaleWidth = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharScaleWidth")
		Else
			If Not __LOWriter_IntIsBetween($iScaleWidth, 1, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharScaleWidth", $iScaleWidth))
		EndIf
	EndIf

	If ($bAutoKerning <> Null) Then
		If ($bAutoKerning = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharAutoKerning")
		Else
			If Not IsBool($bAutoKerning) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharAutoKerning", $bAutoKerning))
		EndIf
	EndIf

	If ($nKerning <> Null) Then
		If ($nKerning = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharKerning")
		Else
			If Not __LOWriter_NumIsBetween($nKerning, -2, 928.8) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			$nKerning = __LOWriter_UnitConvert($nKerning, $__LOWCONST_CONVERT_PT_UM)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharKerning", $nKerning))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyRotateScaleSpace

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifySpacing
; Description ...: Modify or Add Find Format Spacing Settings.
; Syntax ........: _LOWriter_FindFormatModifySpacing(Byref $atFormat[, $iAbovePar = Null[, $iBelowPar = Null[, $bAddSpace = Null[, $iLineSpcMode = Null[, $iLineSpcHeight = Null]]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iAbovePar           - [optional] an integer value. Default is Null. The Space above a paragraph, in
;				   +						Micrometers. Min 0 Micrometers (uM) Max 10,008 uM.
;                  $iBelowPar           - [optional] an integer value. Default is Null. The Space Below a paragraph, in
;				   +						Micrometers. Min 0, Max 10,008 Micrometers (uM).
;                  $bAddSpace           - [optional] a boolean value. Default is Null. If true, the top and bottom margins of
;				   +						the paragraph should not be applied when the previous and next paragraphs have the
;				   +						same style. Libre Office version 3.6 and up.
;                  $iLineSpcMode        - [optional] an integer value. Default is Null. The type of the line spacing of a
;				   +						paragraph. See Constants below, also notice min and max values for each. Must set
;				   +						both $iLineSpcMode and $iLineSpcHeight to be able to search either.
;                  $iLineSpcHeight      - [optional] an integer value. Default is Null. This value specifies the spacing
;				   +						of the lines. See Remarks for Minimum and Max values. Must set both $iLineSpcMode
;				   +						and $iLineSpcHeight to be able to search either.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iAbovePar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 3 Return 0 = $iBelowPar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 4 Return 0 = $bAddSpace not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iLineSpcMode Not an integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iLineSpcHeight Not an integer.
;				   @Error 1 @Extended 7 Return 0 = $iLineSpcMode set to 0(Proportional) and $iLineSpcHeight less than 6(%)
;				   +									or greater than 65535(%).
;				   @Error 1 @Extended 8 Return 0 = $iLineSpcMode set to 1 or 2(Minimum, or Leading) and $iLineSpcHeight less
;				   +								than 0 uM or greater than 10008 uM
;				   @Error 1 @Extended 9 Return 0 = $iLineSpcMode set to 3(Fixed) and $iLineSpcHeight less than 51 uM
;				   +									or greater than 10008 uM.
;				   --Initialization Errors--
;				   @Error 2 @Extended 2 Return 0 = Error creating LineSpacing Object.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					Note: The settings in Libre Office, (Single,1.15, 1.5, Double,) Use the Proportional mode, and are just
;						varying percentages. e.g Single = 100, 1.15 = 115%, 1.5 = 150%, Double = 200%.
;					$iLineSpcHeight depends on the $iLineSpcMode used, see constants for accepted Input values.
;					Note: $iAbovePar, $iBelowPar, $iLineSpcHeight may change +/- 1 MicroMeter once set.
; Spacing Constants :$LOW_LINE_SPC_MODE_PROP(0); This specifies the height value as a proportional value. Min 6% Max 65,535%.
;							(without percentage sign)
;						$LOW_LINE_SPC_MODE_MIN(1); (Minimum/At least) This specifies the height as the minimum line height.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_LEADING(2); This specifies the height value as the distance to the previous line.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_FIX(3); This specifies the height value as a fixed line height. Min 51 MicroMeters,
;							Max 10008 MicroMeters (uM)
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll _LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifySpacing(ByRef $atFormat, $iAbovePar = Null, $iBelowPar = Null, $bAddSpace = Null, $iLineSpcMode = Null, $iLineSpcHeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tLine
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iAbovePar <> Null) Then
		If ($iAbovePar = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaTopMargin")
		Else
			If Not __LOWriter_IntIsBetween($iAbovePar, 0, 10008) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaTopMargin", $iAbovePar))
		EndIf
	EndIf

	If ($iBelowPar <> Null) Then
		If ($iBelowPar = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaBottomMargin")
		Else
			If Not __LOWriter_IntIsBetween($iBelowPar, 0, 10008) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaBottomMargin", $iBelowPar))
		EndIf
	EndIf

	If ($bAddSpace <> Null) Then
		If ($bAddSpace = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaContextMargin")
		Else
			If Not IsBool($bAddSpace) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			If Not __LOWriter_VersionCheck(3.6) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaContextMargin", $bAddSpace))
		EndIf
	EndIf

	If ($iLineSpcMode <> Null) Or ($iLineSpcHeight <> Null) Then
		If ($iLineSpcMode = Default) Or ($iLineSpcHeight = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaLineSpacing")
		Else
			$tLine = __LOWriter_FindFormatRetrieveSetting($atFormat, "ParaLineSpacing") ;Retrieve the ParaLineSpacing Property to modify if it exists.
			If (@error = 0) And (@extended = 1) Then $tLine = $tLine.Value() ;If retrieval was successful, obtain the Line Space Structure.
			If Not IsObj($tLine) Then $tLine = __LOWriter_CreateStruct("com.sun.star.style.LineSpacing") ;If retrieval was not successful, then create a new one.
			If Not IsObj($tLine) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

			If ($iLineSpcMode <> Default) And ($iLineSpcMode <> Null) Then
				If Not __LOWriter_IntIsBetween($iLineSpcMode, $LOW_LINE_SPC_MODE_PROP, $LOW_LINE_SPC_MODE_FIX) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
				$tLine.Mode = $iLineSpcMode
			EndIf

			If ($iLineSpcHeight <> Default) And ($iLineSpcHeight <> Null) Then
				If Not IsInt($iLineSpcHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
				Switch $tLine.Mode()
					Case $LOW_LINE_SPC_MODE_PROP ;Proportional
						If Not __LOWriter_IntIsBetween($iLineSpcHeight, 6, 65535) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0) ; Min setting on Proportional is 6%
					Case $LOW_LINE_SPC_MODE_MIN, $LOW_LINE_SPC_MODE_LEADING ;Minimum and Leading Modes
						If Not __LOWriter_IntIsBetween($iLineSpcHeight, 0, 10008) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
					Case $LOW_LINE_SPC_MODE_FIX ;Fixed Line Spacing Mode
						If Not __LOWriter_IntIsBetween($iLineSpcHeight, 51, 10008) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0) ; Min spacing is 51 when Fixed Mode
				EndSwitch
				$tLine.Height = $iLineSpcHeight
			EndIf


			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaLineSpacing", $tLine))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifySpacing

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyStrikeout
; Description ...: Modify or Add Find Format Strikeout Settings.
; Syntax ........: _LOWriter_FindFormatModifyStrikeout(Byref $atFormat[, $bWordOnly = Null[, $bStrikeOut = Null[, $iStrikeLineStyle = Null]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not Overlined.
;				   +						See remarks.
;                  $bStrikeOut          - [optional] a boolean value. Default is Null. True = strikeout, False = no strike out.
;                  $iStrikeLineStyle    - [optional] an integer value. Default is Null. The Strikeout Line Style, see constants
;				   +						below.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bStrikeOut not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iStrikeLineStyle not an Integer, or less than 0 or greater than 8. See
;				   +									Constants.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					$bWordOnly applies to Underline, Overline and Strikeout, regardless of which is set to true, one setting
;						applies to all.
; Strikeout Line Style Constants : $LOW_STRIKEOUT_NONE(0); specifies not to strike out the characters.
;					$LOW_STRIKEOUT_SINGLE(1); specifies to strike out the characters with a single line
;					$LOW_STRIKEOUT_DOUBLE(2); specifies to strike out the characters with a double line.
;					$LOW_STRIKEOUT_DONT_KNOW(3); The strikeout mode is not specified.
;					$LOW_STRIKEOUT_BOLD(4); specifies to strike out the characters with a bold line.
;					$LOW_STRIKEOUT_SLASH(5); specifies to strike out the characters with slashes.
;					$LOW_STRIKEOUT_X(6); specifies to strike out the characters with X's.
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyStrikeout(ByRef $atFormat, $bWordOnly = Null, $bStrikeOut = Null, $iStrikeLineStyle = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bWordOnly <> Null) Then
		If ($bWordOnly = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharWordMode")
		Else
			If Not IsBool($bWordOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharWordMode", $bWordOnly))
		EndIf
	EndIf

	If ($bStrikeOut <> Null) Then
		If ($bStrikeOut = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharCrossedOut")
		Else
			If Not IsBool($bStrikeOut) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharCrossedOut", $bStrikeOut))
		EndIf
	EndIf

	If ($iStrikeLineStyle <> Null) Then
		If ($iStrikeLineStyle = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharStrikeout")
		Else
			If Not __LOWriter_IntIsBetween($iStrikeLineStyle, $LOW_STRIKEOUT_NONE, $LOW_STRIKEOUT_X) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharStrikeout", $iStrikeLineStyle))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyStrikeout

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyTxtFlowOpt
; Description ...: Modify or Add Find Format Text Flow Settings.
; Syntax ........: _LOWriter_FindFormatModifyTxtFlowOpt(Byref $atFormat[, $bParSplit = Null[, $bKeepTogether = Null[, $iParOrphans = Null[, $iParWidows = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $bParSplit           - [optional] a boolean value. Default is Null. FALSE prevents the paragraph from getting
;				   +						split into two pages or columns
;                  $bKeepTogether       - [optional] a boolean value. Default is Null. TRUE prevents page or column breaks
;				   +						between this and the following paragraph.
;                  $iParOrphans         - [optional] an integer value. Default is Null. Specifies the minimum number of lines of
;				   +						the paragraph that have to be at bottom of a page if the paragraph is spread over
;				   +						more than one page. Min is 0 (disabled), and cannot be 1. Max is 9. In my personal
;				   +						testing, searching for the Orphan setting using this parameter causes any results
;				   +						matching the searched for string to be replaced, whether they contain the Orphan
;				   +						format or not, I am unsure why.
;                  $iParWidows          - [optional] an integer value. Default is Null. Specifies the minimum number of lines of
;				   +						the paragraph that have to be at top of a page if the paragraph is spread over more
;				   +						than one page. Min is 0 (disabled), and cannot be 1. Max is 9. In my personal
;				   +						testing, searching for the Widow setting using this parameter causes any results
;				   +						matching the searched for string to be replaced, whether they contain the Widow
;				   +						format or not, I am unsure why.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $bParSplit not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bKeepTogether not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iParOrphans not an Integer, less than 0, equal to 1, or greater than 9.
;				   @Error 1 @Extended 5 Return 0 = $iParWidows not an Integer, less than 0, equal to 1, or greater than 9.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
; Related .......: _LOWriter_DocFindAll, _LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll
;					_LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyTxtFlowOpt(ByRef $atFormat, $bParSplit = Null, $bKeepTogether = Null, $iParOrphans = Null, $iParWidows = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($bParSplit <> Null) Then
		If ($bParSplit = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaSplit")
		Else
			If Not IsBool($bParSplit) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaSplit", $bParSplit))
		EndIf
	EndIf

	If ($bKeepTogether <> Null) Then
		If ($bKeepTogether = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaKeepTogether")
		Else
			If Not IsBool($bKeepTogether) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaKeepTogether", $bKeepTogether))
		EndIf
	EndIf

	If ($iParOrphans <> Null) Then
		If ($iParOrphans = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaOrphans")
		Else
			If Not __LOWriter_IntIsBetween($iParOrphans, 0, 9, 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaOrphans", $iParOrphans))
		EndIf
	EndIf

	If ($iParWidows <> Null) Then
		If ($iParWidows = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "ParaWidows")
		Else
			If Not __LOWriter_IntIsBetween($iParWidows, 0, 9, 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("ParaWidows", $iParWidows))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyTxtFlowOpt

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FindFormatModifyUnderline
; Description ...: Modify or Add Find Format Underline Settings.
; Syntax ........: _LOWriter_FindFormatModifyUnderline(Byref $atFormat[, $iUnderLineStyle = Null[, $bWordOnly = Null[, $bULHasColor = Null[, $iULColor = Null]]]])
; Parameters ....: $atFormat            - [in/out] an array of structs. A Find Format Array of Settings to modify. Array will
;				   +						 be directly modified.
;                  $iUnderLineStyle     - [optional] an integer value. Default is Null. The style of the Underline line, see
;				   +						constants listed below. Underline style must be set before any of the other
;				   +						parameters can be searched for.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not underlined.
;				   +						See remarks.
;                  $bULHasColor         - [optional] a boolean value. Default is Null. Whether the underline is colored, must
;				   +						be set to true in order to set the underline color.
;                  $iULColor            - [optional] an integer value. Default is Null. The color of the underline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value.
;				   +						$LOW_COLOR_OFF(-1) is automatic color mode. Min. -1, Max 16777215.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $atFormat not an Array or contains more than 1 column.
;				   @Error 1 @Extended 2 Return 0 = $iUnderLineStyle not an Integer, or less than 0 or greater than 18. See
;				   +									Constants.
;				   @Error 1 @Extended 3 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bULHasColor not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iULColor not an Integer, or less than -1 or greater than 16777215.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. FindFormat Array of Settings was successfully modified.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call any optional parameter with Null keyword to skip it.
;					Call any parameter you wish to delete from an already existing Find Format Array with the Default Keyword.
;					If you do not have a pre-existing FindFormat Array, create and pass an Array with 0 elements. (Local
;						$aArray[0])
;					$bWordOnly applies to Underline, Overline and Strikeout, regardless of which is set to true, one setting
;						applies to all.
; UnderLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_DocFindAll,
;					_LOWriter_DocFindAllInRange, _LOWriter_DocFindNext, _LOWriter_DocReplaceAll, _LOWriter_DocReplaceAllInRange
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FindFormatModifyUnderline(ByRef $atFormat, $iUnderLineStyle = Null, $bWordOnly = Null, $bULHasColor = Null, $iULColor = Null)
	Local Const $UBOUND_COLUMNS = 2

	If Not IsArray($atFormat) Or (UBound($atFormat, $UBOUND_COLUMNS) > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iUnderLineStyle <> Null) Then
		If ($iUnderLineStyle = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharUnderline")
		Else
			If Not __LOWriter_IntIsBetween($iUnderLineStyle, $LOW_UNDERLINE_NONE, $LOW_UNDERLINE_BOLD_WAVE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharUnderline", $iUnderLineStyle))
		EndIf
	EndIf

	If ($bWordOnly <> Null) Then
		If ($bWordOnly = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharWordMode")
		Else
			If Not IsBool($bWordOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharWordMode", $bWordOnly))
		EndIf
	EndIf

	If ($bULHasColor <> Null) Then
		If ($bULHasColor = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharUnderlineHasColor")
		Else
			If Not IsBool($bULHasColor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharUnderlineHasColor", $bULHasColor))
		EndIf
	EndIf

	If ($iULColor <> Null) Then
		If ($iULColor = Default) Then
			__LOWriter_FindFormatDeleteSetting($atFormat, "CharUnderlineColor")
		Else
			If Not __LOWriter_IntIsBetween($iULColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
			__LOWriter_FindFormatAddSetting($atFormat, __LOWriter_SetPropertyValue("CharUnderlineColor", $iULColor))
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FindFormatModifyUnderline

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FontExists
; Description ...: Tests whether a Document has a specific font available by name.
; Syntax ........: _LOWriter_FontExists(Byref $oDoc, $sFontName)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFontName           - a string value. The Font name to search for.
; Return values .: Success: Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFontName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Font list.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean  = Success. Returns True if Font is contained in the document, else
;				   +										False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function may cause a processor usage spike for a moment or two. If you wish to eliminate this, comment
;						out the current sleep function and place a sleep(10) in its place.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FontExists(ByRef $oDoc, $sFontName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $atFonts

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$atFonts = $oDoc.getCurrentController().getFrame().getContainerWindow().getFontDescriptors()
	If Not IsArray($atFonts) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	For $i = 0 To UBound($atFonts) - 1
		If $atFonts[$i].Name = $sFontName Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	Return SetError($__LOW_STATUS_SUCCESS, 0, False)

EndFunc   ;==>_LOWriter_FontExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FontsList
; Description ...: Retrieve a list of currently available fonts.
; Syntax ........: _LOWriter_FontsList(Byref $oDoc)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .:  Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Font list.
;				   --Success--
;				   @Error 0 @Extended ? Return Array  = Success. Returns a 4 Column Array, @extended is set to the number of
;				   +			results. The First column (Array[1][0]) contains the Font Name. The Second column (Array [1][1]
;				   +			contains the style name (Such as Bold Italic etc.) The third column (Array[1][2]) contains
;				   +			the Font weight (Bold ) See Constants listed below; The fourth column (Array[1][3]) Contains
;				   +			the font slant (Italic) See constants below.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Many fonts will be listed multiple times, this is because of the varying settings for them, such as bold,
;					Italic, etc. Style Name is really a repeat of weight(Bold) and Slant (Italic) settings, but is included for
;					easier processing if required. From personal tests, Slant only returns 0 or 2. This function may cause a
;					 processor usage spike for a moment or two. If you wish to eliminate this, comment out the current sleep
;					function and place a sleep(10) in its place.
; Weight Constants : $LOW_WEIGHT_DONT_KNOW(0); The font weight is not specified/known.
;						$LOW_WEIGHT_THIN(50); specifies a 50% font weight.
;						$LOW_WEIGHT_ULTRA_LIGHT(60); specifies a 60% font weight.
;						$LOW_WEIGHT_LIGHT(75); specifies a 75% font weight.
;						$LOW_WEIGHT_SEMI_LIGHT(90); specifies a 90% font weight.
;						$LOW_WEIGHT_NORMAL(100); specifies a normal font weight.
;						$LOW_WEIGHT_SEMI_BOLD(110); specifies a 110% font weight.
;						$LOW_WEIGHT_BOLD(150); specifies a 150% font weight.
;						$LOW_WEIGHT_ULTRA_BOLD(175); specifies a 175% font weight.
;						$LOW_WEIGHT_BLACK(200); specifies a 200% font weight.
; Slant/Posture Constants : $LOW_POSTURE_NONE(0); specifies a font without slant.
;							$LOW_POSTURE_OBLIQUE(1); specifies an oblique font (slant not designed into the font).
;							$LOW_POSTURE_ITALIC(2); specifies an italic font (slant designed into the font).
;							$LOW_POSTURE_DontKnow(3); specifies a font with an unknown slant.
;							$LOW_POSTURE_REV_OBLIQUE(4); specifies a reverse oblique font (slant not designed into the font).
;							$LOW_POSTURE_REV_ITALIC(5); specifies a reverse italic font (slant designed into the font).
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FontsList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $atFonts
	Local $asFonts[0][4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$atFonts = $oDoc.getCurrentController().getFrame().getContainerWindow().getFontDescriptors()
	If Not IsArray($atFonts) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	ReDim $asFonts[UBound($atFonts)][4]
;~ $asFonts[0][0] = UBound($atFonts)
	For $i = 0 To UBound($atFonts) - 1
		$asFonts[$i][0] = $atFonts[$i].Name()
		$asFonts[$i][1] = $atFonts[$i].StyleName()
		$asFonts[$i][2] = $atFonts[$i].Weight
		$asFonts[$i][3] = $atFonts[$i].Slant() ;only 0 or 2?
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next

	Return SetError($__LOW_STATUS_SUCCESS, UBound($atFonts), $asFonts)
EndFunc   ;==>_LOWriter_FontsList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteDelete
; Description ...: Delete a Footnote.
; Syntax ........: _LOWriter_FootnoteDelete(Byref $oFootNote)
; Parameters ....: $oFootNote           - [in/out] an object. A Footnote Object from a previous Footnote insert, or retrieval
;				   +							function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFootNote not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Footnote successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FootnoteInsert, _LOWriter_FootnotesGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteDelete(ByRef $oFootNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oFootNote.dispose()
	$oFootNote = Null

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnoteDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteGetAnchor
; Description ...: Create a Text Cursor at the Footnote Anchor position.
; Syntax ........: _LOWriter_FootnoteGetAnchor(Byref $oFootNote)
; Parameters ....: $oFootNote           - [in/out] an object. A Footnote Object from a previous Footnote insert, or retrieval
;				   +							function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFootNote not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully returned the Footnote Anchor.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FootnotesGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteGetAnchor(ByRef $oFootNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oAnchor

	If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oAnchor = $oFootNote.Anchor.Text.createTextCursorByRange($oFootNote.Anchor())
	If Not IsObj($oAnchor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oAnchor)
EndFunc   ;==>_LOWriter_FootnoteGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteGetTextCursor
; Description ...: Create a Text Cursor in a Footnote to modify the text therein.
; Syntax ........: _LOWriter_FootnoteGetTextCursor(Byref $oFootNote)
; Parameters ....: $oFootNote           - [in/out] an object. A Footnote Object from a previous Footnote insert, or retrieval
;				   +							function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFootNote not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Cursor Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Successfully retrieved the footnote Cursor Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_CursorMove, _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteGetTextCursor(ByRef $oFootNote)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextCursor

	If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oTextCursor = $oFootNote.Text.createTextCursor()
	If Not IsObj($oTextCursor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTextCursor)
EndFunc   ;==>_LOWriter_FootnoteGetTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteInsert
; Description ...: Insert a Footnote into a Document.
; Syntax ........: _LOWriter_FootnoteInsert(Byref $oDoc, Byref $oCursor, $bOverwrite[, $sLabel = Null])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval function. Cannot be a Table Cursor.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, any content selected by the
;				   +									cursor will be overwritten. If False, content will be inserted to the
;				   +									left of any selection.
;                  $sLabel              - [optional] a string value. Default is Null. A custom anchor label for the footnote.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $oCursor is a Table cursor type, not supported.
;				   @Error 1 @Extended 5 Return 0 = $oCursor currently located in a Frame, Footnote, Endnote, or Header/Footer,
;				   +									cannot insert a Footnote in those data types.
;				   @Error 1 @Extended 6 Return 0 = $oCursor located in unknown data type.
;				   @Error 1 @Extended 7 Return 0 = $sLabel not a string.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 =  Error creating "com.sun.star.text.Footnote" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully inserted a new footnote, returning Footnote
;				   +									Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: A Footnote cannot be inserted into a Frame, a Footnote, a Endnote, or a Header/ Footer.
; Related .......: _LOWriter_FootnoteDelete, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteInsert(ByRef $oDoc, ByRef $oCursor, $bOverwrite = False, $sLabel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFootNote

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	Switch __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)

		Case $LOW_CURDATA_FRAME, $LOW_CURDATA_FOOTNOTE, $LOW_CURDATA_ENDNOTE, $LOW_CURDATA_HEADER_FOOTER
			Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Unsupported cursor type.
		Case $LOW_CURDATA_BODY_TEXT, $LOW_CURDATA_CELL
			$oFootNote = $oDoc.createInstance("com.sun.star.text.Footnote")
			If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

		Case Else
			Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Unknown Cursor type.
	EndSwitch

	If ($sLabel <> Null) Then
		If Not IsString($sLabel) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFootNote.Label = $sLabel
	EndIf

	$oCursor.Text.insertTextContent($oCursor, $oFootNote, $bOverwrite)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFootNote)
EndFunc   ;==>_LOWriter_FootnoteInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteModifyAnchor
; Description ...: Modify a Footnote's Anchor Character.
; Syntax ........: _LOWriter_FootnoteModifyAnchor(Byref $oFootNote[, $sLabel = Null])
; Parameters ....: $oFootNote           - [in/out] an object. A Footnote Object from a previous Footnote insert, or retrieval
;				   +							function.
;                  $sLabel              - [optional] a string value. Default is Null. A custom anchor label for the Footnote. Set
;				   +							to "" for automatic numbering.
; Return values .: Success: 1 or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFootNote not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sLabel not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Failed to set $sLabel.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Footnote settings were successfully modified.
;				   @Error 0 @Extended 1 Return String = Success. $sLabel set to Null, current Footnote Custom Label returned.
;				   @Error 0 @Extended 2 Return String = Success. $sLabel set to Null, current Footnote AutoNumbering number
;				   +									returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FootnoteInsert, _LOWriter_FootnotesGetList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteModifyAnchor(ByRef $oFootNote, $sLabel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oFootNote) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($sLabel = Null) Then
		;If Label is blank, return the AutoNumbering Number.
		If ($oFootNote.Label() = "") Then Return SetError($__LOW_STATUS_SUCCESS, 2, $oFootNote.Anchor.String())

		;Else return the Label.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $oFootNote.Label())
	EndIf

	If Not IsString($sLabel) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFootNote.Label = $sLabel
	If ($oFootNote.Label() <> $sLabel) Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnoteModifyAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteSettingsAutoNumber
; Description ...: Set or Retrieve Footnote Autonumbering settings.
; Syntax ........: _LOWriter_FootnoteSettingsAutoNumber(Byref $oDoc[, $iNumFormat = Null[, $iStartAt = Null[, $sBefore = Null[, $sAfter = Null[, $iCounting = Null[, $bEndOfDoc = Null]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +						DocCreate function.
;                  $iNumFormat            - [optional] an integer value. Default is Null. The numbering format to use for
;				   +						Footnote numbering. See Constants.
;                  $iStartAt            - [optional] an integer value. Default is Null. The Number to begin Footnote counting
;				   +							from, this is labeled "Counting" in the L.O. User Interface. Min. 1, Max 9999.
;                  $sBefore             - [optional] a string value. Default is Null. The text to display before a Footnote
;				   +							number in the note text.
;                  $sAfter              - [optional] a string value. Default is Null. The text to display after a Footnote
;				   +							number in the note text.
;                  $iCounting           - [optional] an integer value. Default is Null. The Counting type of the footnotes,
;				   +							such as per page etc., see constants below.
;                  $bEndOfDoc           - [optional] a boolean value. Default is Null. If True, Footnotes are placed at the
;				   +							end of the document, like Endnotes.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iNumFormat not an Integer, Less than 0 or greater than 71. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iStartAt not an integer, less than 1 or greater than 9999.
;				   @Error 1 @Extended 4 Return 0 = $sBefore not a String.
;				   @Error 1 @Extended 5 Return 0 = $sAfter not a String.
;				   @Error 1 @Extended 6 Return 0 = $iCounting not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 7 Return 0 = $bEndOfDoc not a boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iNumFormat
;				   |								2 = Error setting $iStartAt
;				   |								4 = Error setting $sBefore
;				   |								8 = Error setting $sAfter
;				   |								16 = Error setting $iCounting
;				   |								32 = Error setting $bEndOfDoc
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
;Counting Type Constants: $LOW_FOOTNOTE_COUNT_PER_PAGE(0), Restarts the numbering of footnotes at the top of each page. This
;								option is only available if End of Doc is set to False.
;							$LOW_FOOTNOTE_COUNT_PER_CHAP(1), Restarts the numbering of footnotes at the beginning of each
;								chapter.
;							$LOW_FOOTNOTE_COUNT_PER_DOC(2), Numbers the footnotes in the document sequentially.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteSettingsAutoNumber(ByRef $oDoc, $iNumFormat = Null, $iStartAt = Null, $sBefore = Null, $sAfter = Null, $iCounting = Null, $bEndOfDoc = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFNSettings[6]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iNumFormat, $iStartAt, $sBefore, $sAfter, $iCounting, $bEndOfDoc) Then
		__LOWriter_ArrayFill($avFNSettings, $oDoc.FootnoteSettings.NumberingType(), ($oDoc.FootnoteSettings.StartAt + 1), _
				$oDoc.FootnoteSettings.Prefix(), $oDoc.FootnoteSettings.Suffix(), $oDoc.FootnoteSettings.FootnoteCounting(), _
				$oDoc.FootnoteSettings.PositionEndOfDoc())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFNSettings)
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDoc.FootnoteSettings.NumberingType = $iNumFormat
		$iError = ($oDoc.FootnoteSettings.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 1)
	EndIf

	;0 Based -- Minus 1
	If ($iStartAt <> Null) Then
		If Not __LOWriter_IntIsBetween($iStartAt, 1, 9999) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDoc.FootnoteSettings.StartAt = ($iStartAt - 1)
		$iError = ($oDoc.FootnoteSettings.StartAt() = ($iStartAt - 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sBefore <> Null) Then
		If Not IsString($sBefore) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oDoc.FootnoteSettings.Prefix = $sBefore
		$iError = ($oDoc.FootnoteSettings.Prefix() = $sBefore) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sAfter <> Null) Then
		If Not IsString($sAfter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oDoc.FootnoteSettings.Suffix = $sAfter
		$iError = ($oDoc.FootnoteSettings.Suffix() = $sAfter) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iCounting <> Null) Then
		If Not __LOWriter_IntIsBetween($iCounting, $LOW_FOOTNOTE_COUNT_PER_PAGE, $LOW_FOOTNOTE_COUNT_PER_DOC) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oDoc.FootnoteSettings.FootnoteCounting = $iCounting
		$iError = ($oDoc.FootnoteSettings.FootnoteCounting() = $iCounting) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bEndOfDoc <> Null) Then
		If Not IsBool($bEndOfDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oDoc.FootnoteSettings.PositionEndOfDoc = $bEndOfDoc
		$iError = ($oDoc.FootnoteSettings.PositionEndOfDoc() = $bEndOfDoc) ? $iError : BitOR($iError, 32)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnoteSettingsAutoNumber

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteSettingsContinuation
; Description ...: Set or Retrieve Footnote continuation settings.
; Syntax ........: _LOWriter_FootnoteSettingsContinuation(Byref $oDoc[, $sEnd = Null[, $sBegin = Null]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sEnd                - [optional] a string value. Default is Null. The text to display at the end of a
;				   +						Footnote before it continues on the next page.
;                  $sBegin              - [optional] a string value. Default is Null. The text to display at the beginning of a
;				   +						Footnote that has continued on the next page.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sEnd not a String.
;				   @Error 1 @Extended 3 Return 0 = $sBegin not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sEnd
;				   |								2 = Error setting $sBegin
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteSettingsContinuation(ByRef $oDoc, $sEnd = Null, $sBegin = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $asFNSettings[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sEnd, $sBegin) Then
		__LOWriter_ArrayFill($asFNSettings, $oDoc.FootnoteSettings.EndNotice(), $oDoc.FootnoteSettings.BeginNotice())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $asFNSettings)
	EndIf

	If ($sEnd <> Null) Then
		If Not IsString($sEnd) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oDoc.FootnoteSettings.EndNotice = $sEnd
		$iError = ($oDoc.FootnoteSettings.EndNotice() = $sEnd) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sBegin <> Null) Then
		If Not IsString($sBegin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oDoc.FootnoteSettings.BeginNotice = $sBegin
		$iError = ($oDoc.FootnoteSettings.BeginNotice() = $sBegin) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnoteSettingsContinuation

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnoteSettingsStyles
; Description ...: Set or Retrieve Document Footnote Style settings.
; Syntax ........: _LOWriter_FootnoteSettingsStyles(Byref $oDoc[, $sParagraph = Null[, $sPage = Null[, $sTextArea = Null[, $sFootnoteArea = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParagraph          - [optional] a string value. Default is Null. The Footnote Text Paragraph Style.
;                  $sPage               - [optional] a string value. Default is Null. The Page Style to use for the Footnote
;				   +						pages. Only valid if the footnotes are set to End of Document, instead of per page.
;                  $sTextArea           - [optional] a string value. Default is Null. The Character Style to use for the Footnote
;				   +						anchor in the document text.
;                  $sFootnoteArea       - [optional] a string value. Default is Null. The Character Style to use for the Footnote
;				   +						number in the footnote text.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sParagraph not a String.
;				   @Error 1 @Extended 3 Return 0 = Paragraph Style referenced in $sParagraph not found in Document.
;				   @Error 1 @Extended 4 Return 0 = $sPage not a String.
;				   @Error 1 @Extended 5 Return 0 = Page Style referenced in $sPage not found in Document.
;				   @Error 1 @Extended 6 Return 0 = $sTextArea not a String.
;				   @Error 1 @Extended 7 Return 0 = Character Style referenced in $sTextArea not found in Document.
;				   @Error 1 @Extended 8 Return 0 = $sFootnoteArea not a String.
;				   @Error 1 @Extended 9 Return 0 = Character Style referenced in $sFootnoteArea not found in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sParagraph
;				   |								2 = Error setting $sPage
;				   |								4 = Error setting $sTextArea
;				   |								8 = Error setting $sFootnoteArea
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStylesGetNames, _LOWriter_PageStylesGetNames, _LOWriter_CharStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnoteSettingsStyles(ByRef $oDoc, $sParagraph = Null, $sPage = Null, $sTextArea = Null, $sFootnoteArea = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFNSettings[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sParagraph, $sPage, $sTextArea, $sFootnoteArea) Then
		__LOWriter_ArrayFill($avFNSettings, __LOWriter_ParStyleNameToggle($oDoc.FootnoteSettings.ParaStyleName(), True), _
				__LOWriter_PageStyleNameToggle($oDoc.FootnoteSettings.PageStyleName(), True), _
				__LOWriter_CharStyleNameToggle($oDoc.FootnoteSettings.AnchorCharStyleName(), True), _
				__LOWriter_CharStyleNameToggle($oDoc.FootnoteSettings.CharStyleName(), True))
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFNSettings)
	EndIf

	If ($sParagraph <> Null) Then
		If Not IsString($sParagraph) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If Not _LOWriter_ParStyleExists($oDoc, $sParagraph) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$sParagraph = __LOWriter_ParStyleNameToggle($sParagraph)
		$oDoc.FootnoteSettings.ParaStyleName = $sParagraph
		$iError = ($oDoc.FootnoteSettings.ParaStyleName() = $sParagraph) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sPage <> Null) Then
		If Not IsString($sPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If Not _LOWriter_PageStyleExists($oDoc, $sPage) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$sPage = __LOWriter_PageStyleNameToggle($sPage)
		$oDoc.FootnoteSettings.PageStyleName = $sPage
		$iError = ($oDoc.FootnoteSettings.PageStyleName() = $sPage) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sTextArea <> Null) Then
		If Not IsString($sTextArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_CharStyleExists($oDoc, $sTextArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$sTextArea = __LOWriter_CharStyleNameToggle($sTextArea)
		$oDoc.FootnoteSettings.AnchorCharStyleName = $sTextArea
		$iError = ($oDoc.FootnoteSettings.AnchorCharStyleName() = $sTextArea) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sFootnoteArea <> Null) Then
		If Not IsString($sFootnoteArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not _LOWriter_CharStyleExists($oDoc, $sFootnoteArea) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$sFootnoteArea = __LOWriter_CharStyleNameToggle($sFootnoteArea)
		$oDoc.FootnoteSettings.CharStyleName = $sFootnoteArea
		$iError = ($oDoc.FootnoteSettings.CharStyleName() = $sFootnoteArea) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnoteSettingsStyles

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FootnotesGetList
; Description ...: Retrieve an array of Footnote Objects contained in a Document.
; Syntax ........: _LOWriter_FootnotesGetList(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Footnotes Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully searched for Footnotes, none contained in document.
;				   @Error 0 @Extended ? Return Array = Success. Successfully searched for Footnotes, Returning Array of Footnote
;				   +										Objects. @Extended set to number found.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FootnoteDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FootnotesGetList(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFootNotes
	Local $aoFootnotes[0]
	Local $iCount

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oFootNotes = $oDoc.getFootnotes()
	If Not IsObj($oFootNotes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	$iCount = $oFootNotes.getCount()

	If ($iCount > 0) Then
		ReDim $aoFootnotes[$iCount]

		For $i = 0 To $iCount - 1
			$aoFootnotes[$i] = $oFootNotes.getByIndex($i)
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return ($iCount > 0) ? SetError($__LOW_STATUS_SUCCESS, $iCount, $aoFootnotes) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FootnotesGetList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FormatKeyCreate
; Description ...: Create a Format Key.
; Syntax ........: _LOWriter_FormatKeyCreate(Byref $oDoc, $sFormat)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFormat             - a string value. The format String to create.
; Return values .:  Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFormat not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to Create or Retrieve the Format key, but failed.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer = Success. Format Key was successfully created, returning Format Key
;				   +												integer.
;				   @Error 0 @Extended 1 Return Integer = Success. Format Key already existed, returning Format Key integer.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FormatKeyDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FormatKeyCreate(ByRef $oDoc, $sFormat)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iFormatKey
	Local $tLocale
	Local $oFormats

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFormat) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$iFormatKey = $oFormats.queryKey($sFormat, $tLocale, False)
	If ($iFormatKey > -1) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $iFormatKey) ;Format already existed
	$iFormatKey = $oFormats.addNew($sFormat, $tLocale)
	If ($iFormatKey > -1) Then Return SetError($__LOW_STATUS_SUCCESS, 0, $iFormatKey) ;Format created

	Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Failed to create or retrieve Format
EndFunc   ;==>_LOWriter_FormatKeyCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FormatKeyDelete
; Description ...: Delete a User-Created Format Key from a Document.
; Syntax ........: _LOWriter_FormatKeyDelete(Byref $oDoc, $iFormatKey)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The User-Created format Key to delete.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = Format Key called in $iFormatKey not found in Document.
;				   @Error 1 @Extended 4 Return 0 = Format Key called in $iFormatKey not User-Created.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Attempted to delete key, but Key is still found in Document.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Format Key was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FormatKeyList, _LOWriter_FormatKeyCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FormatKeyDelete(ByRef $oDoc, $iFormatKey)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tLocale
	Local $oFormats

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_FormatKeyExists($oDoc, $iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Key not found.
	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	If ($oFormats.getbykey($iFormatKey).UserDefined() = False) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;Key not User Created.

	$oFormats.removeByKey($iFormatKey)

	Return (_LOWriter_FormatKeyExists($oDoc, $iFormatKey) = False) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_FormatKeyDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FormatKeyExists
; Description ...:Check if a Document contains a certain Format Key.
; Syntax ........: _LOWriter_FormatKeyExists(Byref $oDoc, $iFormatKey, Const $iFormatType)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The Format Key to look for.
;                  $iFormatType         - [optional] an integer value. Default is $LOW_FORMAT_KEYS_ALL. The Formatk Key type to
;				   +					search in. Values can be BitOr's together. See Constants.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iFormatType not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve Number Formats Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to obtain Array of Date/Time Formats.
;				   --Success--
;				   @Error 0 @Extended 0 Return True = Success. Format Key exists in document.
;				   @Error 0 @Extended 1 Return False = Success. Format Key does not exist in document.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Format Key Type Constants: $LOW_FORMAT_KEYS_ALL(0), All number formats.
;							$LOW_FORMAT_KEYS_DEFINED(1), Only user-defined number formats.
;							$LOW_FORMAT_KEYS_DATE(2), Date formats.
;							$LOW_FORMAT_KEYS_TIME(4), Time formats.
;							$LOW_FORMAT_KEYS_DATE_TIME(6), Number formats which contain date and time.
;							$LOW_FORMAT_KEYS_CURRENCY(8), Currency formats.
;							$LOW_FORMAT_KEYS_NUMBER(16), Decimal number formats.
;							$LOW_FORMAT_KEYS_SCIENTIFIC(32), Scientific number formats.
;							$LOW_FORMAT_KEYS_FRACTION(64), Number formats for fractions.
;							$LOW_FORMAT_KEYS_PERCENT(128), Percentage number formats.
;							$LOW_FORMAT_KEYS_TEXT(256), Text number formats.
;							$LOW_FORMAT_KEYS_LOGICAL(1024), Boolean number formats.
;							$LOW_FORMAT_KEYS_UNDEFINED(2048), Is used as a return value if no format exists.
;							$LOW_FORMAT_KEYS_EMPTY(4096),
;							$LOW_FORMAT_KEYS_DURATION(8196),
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FormatKeyExists(ByRef $oDoc, $iFormatKey, $iFormatType = $LOW_FORMAT_KEYS_ALL)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFormats
	Local $aiFormatKeys[0]
	Local $tLocale

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iFormatType) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$aiFormatKeys = $oFormats.queryKeys($iFormatType, $tLocale, False)
	If Not IsArray($aiFormatKeys) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	For $i = 0 To UBound($aiFormatKeys) - 1
		If ($aiFormatKeys[$i] = $iFormatKey) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True) ;Doc does contain format Key
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
	Next

	Return SetError($__LOW_STATUS_SUCCESS, 1, False) ;Doc does not contain format Key
EndFunc   ;==>_LOWriter_FormatKeyExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FormatKeyGetString
; Description ...:  Retrieve a Format Key String.
; Syntax ........: _LOWriter_FormatKeyGetString(Byref $oDoc, $iFormatKey)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iFormatKey          - an integer value. The Format Key to retrieve the string for.
; Return values .:Success: String
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iFormatKey not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iFormatKey not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve requested Format Key Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return String = Success. Returning Format Key's Format String.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FormatKeyList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FormatKeyGetString(ByRef $oDoc, $iFormatKey)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFormatKey

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_FormatKeyExists($oDoc, $iFormatKey) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oFormatKey = $oDoc.getNumberFormats().getByKey($iFormatKey)
	If Not IsObj($oFormatKey) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;Key not found.

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFormatKey.FormatString())
EndFunc   ;==>_LOWriter_FormatKeyGetString

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FormatKeyList
; Description ...: Retrieve an Array of Date/Time Format Keys.
; Syntax ........: _LOWriter_FormatKeyList(Byref $oDoc[, $bIsUser = False[, $bUserOnly = False[, $iFormatKeyType = Null]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bIsUser             - [optional] a boolean value. Default is False. If True, Adds a third column to the
;				   +						return Array with a boolean, whether each Key is user-created or not.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True, only user-created Format Keys
;				   +						are returned.
;                  $iFormatKeyType      - [optional] an integer value. Default is $LOW_FORMAT_KEYS_ALL. The Formatk Key type to
;				   +					retrieve a list for. Values can be BitOr's together. See Constants.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bIsUser not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $iFormatKeyType not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.lang.Locale" Object.
;				   @Error 2 @Extended 2 Return 0 = Failed to retrieve NumberFormats Object.
;				   @Error 2 @Extended 3 Return 0 = Failed to obtain Array of Format Keys.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning a 2 or three column Array, depending on current
;				   +										$bIsUser setting. Column One (Array[0][0]) will contain the Format
;				   +										Key integer, Column two (Array[0][1]) will contain the Format Key
;				   +										String, If $bIsUser is set to True, Column Three (Array[0][2]) will
;				   +										contain a Boolean, True if the Format Key is User created, else
;				   +										false. @Extended is set to the number of Keys returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
;Format Key Type Constants: $LOW_FORMAT_KEYS_ALL(0), All number formats.
;							$LOW_FORMAT_KEYS_DEFINED(1), Only user-defined number formats.
;							$LOW_FORMAT_KEYS_DATE(2), Date formats.
;							$LOW_FORMAT_KEYS_TIME(4), Time formats.
;							$LOW_FORMAT_KEYS_DATE_TIME(6), Number formats which contain date and time.
;							$LOW_FORMAT_KEYS_CURRENCY(8), Currency formats.
;							$LOW_FORMAT_KEYS_NUMBER(16), Decimal number formats.
;							$LOW_FORMAT_KEYS_SCIENTIFIC(32), Scientific number formats.
;							$LOW_FORMAT_KEYS_FRACTION(64), Number formats for fractions.
;							$LOW_FORMAT_KEYS_PERCENT(128), Percentage number formats.
;							$LOW_FORMAT_KEYS_TEXT(256), Text number formats.
;							$LOW_FORMAT_KEYS_LOGICAL(1024), Boolean number formats.
;							$LOW_FORMAT_KEYS_UNDEFINED(2048), Is used as a return value if no format exists.
;							$LOW_FORMAT_KEYS_EMPTY(4096),
;							$LOW_FORMAT_KEYS_DURATION(8196),
; Related .......: _LOWriter_FormatKeyDelete, _LOWriter_FormatKeyGetString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FormatKeyList(ByRef $oDoc, $bIsUser = False, $bUserOnly = False, $iFormatKeyType = $LOW_FORMAT_KEYS_ALL)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFormats
	Local $aiFormatKeys
	Local $avFormats[0][3]
	Local $tLocale
	Local $iColumns = 3, $iCount = 0

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bIsUser) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$iColumns = ($bIsUser = True) ? $iColumns : 2

	If Not IsInt($iFormatKeyType) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$tLocale = __LOWriter_CreateStruct("com.sun.star.lang.Locale")
	If Not IsObj($tLocale) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oFormats = $oDoc.getNumberFormats()
	If Not IsObj($oFormats) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$aiFormatKeys = $oFormats.queryKeys($iFormatKeyType, $tLocale, False)
	If Not IsArray($aiFormatKeys) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	ReDim $avFormats[UBound($aiFormatKeys)][$iColumns]

	For $i = 0 To UBound($aiFormatKeys) - 1

		If ($bUserOnly = True) Then
			If ($oFormats.getbykey($aiFormatKeys[$i]).UserDefined() = True) Then
				$avFormats[$iCount][0] = $aiFormatKeys[$i]
				$avFormats[$iCount][1] = $oFormats.getbykey($aiFormatKeys[$i]).FormatString()
				If ($bIsUser = True) Then $avFormats[$iCount][2] = $oFormats.getbykey($aiFormatKeys[$i]).UserDefined()
				$iCount += 1
			EndIf
		Else
			$avFormats[$i][0] = $aiFormatKeys[$i]
			$avFormats[$i][1] = $oFormats.getbykey($aiFormatKeys[$i]).FormatString()
			If ($bIsUser = True) Then $avFormats[$i][2] = $oFormats.getbykey($aiFormatKeys[$i]).UserDefined()
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
	Next

	If ($bUserOnly = True) Then ReDim $avFormats[$iCount][$iColumns]

	Return SetError($__LOW_STATUS_SUCCESS, UBound($avFormats), $avFormats)
EndFunc   ;==>_LOWriter_FormatKeyList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameAreaColor
; Description ...: Set or Retrieve background color settings for a Frame.
; Syntax ........: _LOWriter_FrameAreaColor(Byref $oFrame[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value. Set to
;				   +							$LOW_COLOR_OFF(-1) for "None".
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 3 Return 0 = $bBackTransparent not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Note: If transparency is set, it can cause strange values to be displayed for Background color.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameAreaColor(ByRef $oFrame, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oFrame.BackColor(), $oFrame.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.BackColor = $iBackColor
		$iError = ($oFrame.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.BackTransparent = $bBackTransparent
		$iError = ($oFrame.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameAreaColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameAreaGradient
; Description ...: Modify or retrieve the settings for Frame BackGround color Gradient.
; Syntax ........: _LOWriter_FrameAreaGradient(Byref $oDoc, Byref $oFrame[, $sGradientName = Null[, $iType = Null[, $iIncrement = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iFromColor = Null[, $iToColor = Null[, $iFromIntense = Null[, $iToIntense = Null]]]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $sGradientName       - [optional] a string value. Default is Null. A Preset Gradient Name. See Constants List.
;				   +								See remarks.
;                  $iType               - [optional] an integer value. Default is Null. The gradient that you want to apply. See
;				   +						Constants List.
;                  $iIncrement          - [optional] an integer value. Default is Null. Specifies the number of steps of change
;				   +						color. Allowed values are: 0, 3 to 256. 0 = Automatic.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the
;				   +						gradient, where 0% corresponds to the current horizontal location of the endpoint
;				   +						color in the gradient. The endpoint color is the color that is selected in the
;				   +						"To Color" setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient,
;				   +						where 0% corresponds to the current vertical location of the endpoint color in the
;				   +						gradient. The endpoint color is the color that is selected in the "To Color"
;				   +						Setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than "Linear",
;				   +						or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iFromColor          - [optional] an integer value. Default is Null. A color for the beginning point of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iToColor            - [optional] an integer value. Default is Null. A color for the endpoint of the gradient,
;				   +						set in Long Color Integer format. Can be one of the below Constants or a custom
;				   +						value.
;                  $iFromIntense        - [optional] an integer value. Default is Null. Enter the intensity for the color in the
;				   +						"From Color", where 0% corresponds to black, and 100 % to the selected color. Min.
;				   +						0%, Max 100%
;                  $iToIntense          - [optional] an integer value. Default is Null. Enter the intensity for the color in the
;				   +						"To Color", where 0% corresponds to black, and 100 % to the selected color. Min. 0%,
;				   +						Max 100%
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sGradientName Not a String.
;				   @Error 1 @Extended 4 Return 0 = $iType Not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $iIncrement Not an Integer, less than 3 but not 0, or greater than 256.
;				   @Error 1 @Extended 6 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 7 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 9 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 10 Return 0 = $iFromColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 11 Return 0 = $iToColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 12 Return 0 = $iFromIntense Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 13 Return 0 = $iToIntense Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillGradient" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024
;				   |								1 = Error setting $sGradientName
;				   |								2 = Error setting $iType
;				   |								4 = Error setting $iIncrement
;				   |								8 = Error setting $iXCenter
;				   |								16 = Error setting $iYCenter
;				   |								32 = Error setting $iAngle
;				   |								64 = Error setting $iBorder
;				   |								128 = Error setting $iFromColor
;				   |								256 = Error setting $iToColor
;				   |								512 = Error setting $iFromIntense
;				   |								1024 = Error setting $iToIntense
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 11 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: Gradient Name has no use other than for applying a pre-existing preset gradient.
;Gradient Name Constants: $LOW_GRAD_NAME_PASTEL_BOUQUET("Pastel Bouquet",
;							$LOW_GRAD_NAME_PASTEL_DREAM("Pastel Dream",
;							$LOW_GRAD_NAME_BLUE_TOUCH = "Blue Touch"),
;							$LOW_GRAD_NAME_BLANK_W_GRAY("Blank with Gray"),
;							$LOW_GRAD_NAME_SPOTTED_GRAY("Spotted Gray"),
;							$LOW_GRAD_NAME_LONDON_MIST("London Mist"),
;							$LOW_GRAD_NAME_TEAL_TO_BLUE("Teal to Blue"),
;							$LOW_GRAD_NAME_MIDNIGHT("Midnight"),
;							$LOW_GRAD_NAME_DEEP_OCEAN("Deep Ocean"),
;							$LOW_GRAD_NAME_SUBMARINE("Submarine"),
;							$LOW_GRAD_NAME_GREEN_GRASS("Green Grass"),
;							$LOW_GRAD_NAME_NEON_LIGHT("Neon Light"),
;							$LOW_GRAD_NAME_SUNSHINE("Sunshine"),
;							$LOW_GRAD_NAME_PRESENT("Present"),
;							$LOW_GRAD_NAME_MAHOGANY("Mahogany")
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameAreaGradient(ByRef $oDoc, ByRef $oFrame, $sGradientName = Null, $iType = Null, $iIncrement = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iFromColor = Null, $iToColor = Null, $iFromIntense = Null, $iToIntense = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $avGradient[11]
	Local $sGradName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tStyleGradient = $oFrame.FillGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sGradientName, $iType, $iIncrement, $iXCenter, $iYCenter, $iAngle, $iBorder, $iFromColor, $iToColor, _
			$iFromIntense, $iToIntense) Then
		__LOWriter_ArrayFill($avGradient, $oFrame.FillGradientName(), $tStyleGradient.Style(), _
				$oFrame.FillGradientStepCount(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), ($tStyleGradient.Angle() / 10), _
				$tStyleGradient.Border(), $tStyleGradient.StartColor(), $tStyleGradient.EndColor(), $tStyleGradient.StartIntensity(), _
				$tStyleGradient.EndIntensity()) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGradient)
	EndIf

	If ($oFrame.FillStyle() <> $__LOWCONST_FILL_STYLE_GRADIENT) Then $oFrame.FillStyle = $__LOWCONST_FILL_STYLE_GRADIENT

	If ($sGradientName <> Null) Then
		If Not IsString($sGradientName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		__LOWriter_GradientPresets($oDoc, $oFrame, $tStyleGradient, $sGradientName)
		$iError = ($oFrame.FillGradientName() = $sGradientName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oFrame.FillStyle = $__LOWCONST_FILL_STYLE_OFF
			$oFrame.FillGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iIncrement <> Null) Then
		If Not __LOWriter_IntIsBetween($iIncrement, 3, 256, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.FillGradientStepCount = $iIncrement
		$tStyleGradient.StepCount = $iIncrement ; Must set both of these in order for it to take effect.
		$iError = ($oFrame.FillGradientStepCount() = $iIncrement) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iFromColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.StartColor = $iFromColor
	EndIf

	If ($iToColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iToColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$tStyleGradient.EndColor = $iToColor
	EndIf

	If ($iFromIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$tStyleGradient.StartIntensity = $iFromIntense
	EndIf

	If ($iToIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iToIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$tStyleGradient.EndIntensity = $iToIntense
	EndIf

	If ($oFrame.FillGradientName() = "") Then

		$sGradName = __LOWriter_GradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oFrame.FillGradientName = $sGradName
		If ($oFrame.FillGradientName <> $sGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oFrame.FillGradient = $tStyleGradient

	;Error checking
	$iError = ($iType = Null) ? $iError : ($oFrame.FillGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oFrame.FillGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iYCenter = Null) ? $iError : ($oFrame.FillGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 16)
	$iError = ($iAngle = Null) ? $iError : (($oFrame.FillGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 32)
	$iError = ($iBorder = Null) ? $iError : ($oFrame.FillGradient.Border() = $iBorder) ? $iError : BitOR($iError, 64)
	$iError = ($iFromColor = Null) ? $iError : ($oFrame.FillGradient.StartColor() = $iFromColor) ? $iError : BitOR($iError, 128)
	$iError = ($iToColor = Null) ? $iError : ($oFrame.FillGradient.EndColor() = $iToColor) ? $iError : BitOR($iError, 256)
	$iError = ($iFromIntense = Null) ? $iError : ($oFrame.FillGradient.StartIntensity() = $iFromIntense) ? $iError : BitOR($iError, 512)
	$iError = ($iToIntense = Null) ? $iError : ($oFrame.FillGradient.EndIntensity() = $iToIntense) ? $iError : BitOR($iError, 1024)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameAreaGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameBorderColor
; Description ...:  Set or retrieve the Frame Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameBorderColor(Byref $oFrame[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_FrameBorderWidth,
;					_LOWriter_FrameBorderStyle, _LOWriter_FrameBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameBorderColor(ByRef $oFrame, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oFrame, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameBorderPadding
; Description ...:  Set or retrieve the Frame Border Padding settings.
; Syntax ........: _LOWriter_FrameBorderPadding(Byref $oFrame[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Frame contents in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer,  _LOWriter_FrameBorderWidth,
;					_LOWriter_FrameBorderStyle, _LOWriter_FrameBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameBorderPadding(ByRef $oFrame, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[5]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oFrame.BorderDistance(), $oFrame.TopBorderDistance(), $oFrame.BottomBorderDistance(), _
				$oFrame.LeftBorderDistance(), $oFrame.RightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iAll <> Null) Then
		If Not __LOWriter_IntIsBetween($iAll, 0, $iAll) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.BorderDistance = $iAll
		$iError = (__LOWriter_IntIsBetween($oFrame.BorderDistance(), $iAll - 1, $iAll + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.TopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oFrame.TopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.BottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oFrame.BottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.LeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oFrame.LeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.RightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oFrame.RightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameBorderStyle
; Description ...: Set or Retrieve the Frame Border Line style. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameBorderStyle(Byref $oFrame[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line
;						inside separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line
;						inside separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line
;						inside separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line
;						inside separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_FrameBorderWidth, _LOWriter_FrameBorderColor, _LOWriter_FrameBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameBorderStyle(ByRef $oFrame, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oFrame, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameBorderWidth
; Description ...: Set or Retrieve the Frame Border Line Width. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameBorderWidth(Byref $oFrame[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +						Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set Width to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_FrameBorderStyle,
;					_LOWriter_FrameBorderColor, _LOWriter_FrameBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameBorderWidth(ByRef $oFrame, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_Border($oFrame, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameColumnSeparator
; Description ...: Set or retrieve Frame Column Separator line settings.
; Syntax ........: _LOWriter_FrameColumnSeparator(Byref $oFrame[, $bSeparatorOn = Null[, $iStyle = Null[, $iWidth = Null[, $iColor = Null[, $iHeight = Null[, $iPosition = Null]]]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $bSeparatorOn        - [optional] a boolean value. Default is Null. If true, add a separator line between
;				   +						two or more columns.
;                  $iStyle              - [optional] an integer value. Default is Null. The formatting style for the column
;				   +						separator line. See Constants below.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the separator line. Set in
;				   +						Micrometers, Min 5 uM, Max 180 uM.
;                  $iColor              - [optional] an integer value. Default is Null. The color for the separator line. Can be
;				   +						one of the below constants or a custom value.
;                  $iHeight             - [optional] an integer value. Default is Null. The length of the separator line as a
;				   +						percentage of the height of the column area. Min 0%, Max 100%.
;                  $iPosition           - [optional] an integer value. Default is Null. Select the vertical alignment of the
;				   +						separator line. This option is only available if Height value of the line is less
;				   +						than 100%. See Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bSeparatorOn not a Boolean value.
;				   @Error 1 @Extended 3 Return 0 = $iStyle not an Integer, less than 0 or greater than 3. See constants.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an Integer, less than 5 or greater than 180.
;				   @Error 1 @Extended 5 Return 0 = $iColor not an Integer, less than 0 or greater than 16777215. See constants.
;				   @Error 1 @Extended 6 Return 0 = $iHeight not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 7 Return 0 = $iPosition not an Integer, less than 0 or greater than 2. See constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $bSeparatorOn
;				   |								2 = Error setting $iStyle
;				   |								4 = Error setting $iWidth
;				   |								8 = Error setting $iColor
;				   |								16 = Error setting $iHeight
;				   |								32 = Error setting $iPosition
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Line Style Constants: $LOW_LINE_STYLE_NONE(0),
;						$LOW_LINE_STYLE_SOLID(1),
;						$LOW_LINE_STYLE_DOTTED(2),
;						$LOW_LINE_STYLE_DASHED(3)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
;Line Position ants: $LOW_ALIGN_VERT_TOP(0),
;						$LOW_ALIGN_VERT_MIDDLE(1),
;						$LOW_ALIGN_VERT_BOTTOM(2)
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameColumnSeparator(ByRef $oFrame, $bSeparatorOn = Null, $iStyle = Null, $iWidth = Null, $iColor = Null, $iHeight = Null, $iPosition = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0
	Local $avColumnLine[6]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oTextColumns = $oFrame.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bSeparatorOn, $iStyle, $iWidth, $iColor, $iHeight, $iPosition) Then
		__LOWriter_ArrayFill($avColumnLine, $oTextColumns.SeparatorLineIsOn(), $oTextColumns.SeparatorLineStyle(), $oTextColumns.SeparatorLineWidth(), _
				$oTextColumns.SeparatorLineColor(), $oTextColumns.SeparatorLineRelativeHeight(), $oTextColumns.SeparatorLineVerticalAlignment())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnLine)
	EndIf

	If ($bSeparatorOn <> Null) Then
		If Not IsBool($bSeparatorOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oTextColumns.SeparatorLineIsOn = $bSeparatorOn
		$iError = ($oTextColumns.SeparatorLineIsOn() = $bSeparatorOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iStyle <> Null) Then
		If Not __LOWriter_IntIsBetween($iStyle, $LOW_LINE_STYLE_NONE, $LOW_LINE_STYLE_DASHED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTextColumns.SeparatorLineStyle = $iStyle
		$iError = ($oTextColumns.SeparatorLineStyle() = $iStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidth, 5, 180) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oTextColumns.SeparatorLineWidth = $iWidth
		$iError = (__LOWriter_IntIsBetween($oTextColumns.SeparatorLineWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTextColumns.SeparatorLineColor = $iColor
		$iError = ($oTextColumns.SeparatorLineColor() = $iColor) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTextColumns.SeparatorLineRelativeHeight = $iHeight
		$iError = ($oTextColumns.SeparatorLineRelativeHeight() = $iHeight) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iPosition <> Null) Then
		If Not __LOWriter_IntIsBetween($iPosition, $LOW_ALIGN_VERT_TOP, $LOW_ALIGN_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oTextColumns.SeparatorLineVerticalAlignment = $iPosition
		$iError = ($oTextColumns.SeparatorLineVerticalAlignment() = $iPosition) ? $iError : BitOR($iError, 32)
	EndIf

	$oFrame.TextColumns = $oTextColumns

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameColumnSeparator

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameColumnSettings
; Description ...:  Set or retrieve Frame Column count.
; Syntax ........: _LOWriter_FrameColumnSettings(Byref $oFrame[, $iColumns = Null ])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iColumns            - [optional] an integer value. Default is Null. The number of columns that you want in
;				   +						the Frame. Min. 1.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iColumns not an Integer or less than 1.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iColumns
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning current
;				   +								column count.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameColumnSettings(ByRef $oFrame, $iColumns = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oTextColumns = $oFrame.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iColumns) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oTextColumns.ColumnCount())

	If Not __LOWriter_IntIsBetween($iColumns, 1, $iColumns) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns.ColumnCount = $iColumns
	$oFrame.TextColumns = $oTextColumns

	$iError = ($oFrame.TextColumns.ColumnCount() = $iColumns) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameColumnSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameColumnSize
; Description ...: Set or retrieve Frame Column sizing settings.
; Syntax ........: _LOWriter_FrameColumnSize(Byref $oFrame, $iColumn[, $bAutoWidth = Null[, $iGlobalSpacing = Null[, $iSpacing = Null[, $iWidth = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iColumn             - an integer value. The column to modify the settings on. See Remarks.
;                  $bAutoWidth          - [optional] a boolean value. Default is Null. If True Column Width is automatically
;				   +						adjusted.
;                  $iGlobalSpacing      - [optional] an integer value. Default is Null. Set a spacing value for between all
;				   +						columns. Set in Micrometers. See remarks.
;                  $iSpacing            - [optional] an integer value. Default is Null. The Space between two columns, in
;				   +						Micrometers. Cannot be set for the last column.
;                  $iWidth              - [optional] an integer value. Default is Null. If $iGlobalSpacing is set to other than
;				   +						0, enter the width of the column. Set in Micrometers.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iColumn not an Integer.
;				   @Error 1 @Extended 3 Return 0 = $iColumn higher than number of columns in the document or less than 1.
;				   @Error 1 @Extended 4 Return 0 = $bAutoWidth not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iGlobalSpacing not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iSpacing not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iWidth not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Frame Style Column Object Array.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = No columns present for requested Frame.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bAutoWidth
;				   |								2 = Error setting $iGlobalSpacing
;				   |								4 = Error setting $iSpacing
;				   |								8 = Error setting $iWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: NOTE: This function will work fine for setting AutoWidth, and Spacing values, however Width will not work the
;						best, Spacing etc is set in plain micrometer values, however width is set in a relative value, and I am
;						unable to find a way to be able to convert a specific value, such as 1" (2540 Micrometers) etc, to the
;						appropriate relative value, especially when spacing is set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: To set $bAutoWidth or $iGlobalSpacing you may enter any number in $iColumn as long as you are not
;						setting width or spacing, as AutoWidth is not column specific. If you set a value for $iGlobalSpacing
;						with $bAutoWidth set to false, the value is applied to all the columns still.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameColumnSize(ByRef $oFrame, $iColumn, $bAutoWidth = Null, $iGlobalSpacing = Null, $iSpacing = Null, $iWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $atColumns
	Local $iError = 0, $iRightMargin, $iLeftMargin
	Local $avColumnSize[4]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns = $oFrame.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$atColumns = $oTextColumns.Columns()
	If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	If ($oTextColumns.ColumnCount() <= 1) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($iColumn > UBound($atColumns)) Or ($iColumn < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$iColumn = $iColumn - 1 ;Libre Columns Array is 0 based -- Minus one to compensate

	If __LOWriter_VarsAreNull($bAutoWidth, $iGlobalSpacing, $iSpacing, $iWidth) Then

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If last column is called, there is no spacing value, so return the outter margin, which will be 0.
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin(), $atColumns[$iColumn].Width())
		Else
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $atColumns[$iColumn].Width())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnSize)
	EndIf

	If ($bAutoWidth <> Null) Then
		If Not IsBool($bAutoWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

		If ($bAutoWidth <> $oTextColumns.IsAutomatic()) Then

			If ($bAutoWidth = True) Then
				; retrieve both outside column inner margin settings to add together for determining AutoWidth value.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? ($atColumns[0].RightMargin() + $atColumns[UBound($atColumns) - 1].LeftMargin()) : $iGlobalSpacing
				; If $iGlobalSpacing is not called with a value, set my own, else use the called value.
				$oTextColumns.ColumnCount = $oTextColumns.ColumnCount()
				$oFrame.TextColumns = $oTextColumns
				; Setting the number of columns activates the AutoWidth option, so set it to the same number of columns.
			Else ;If False
				; If GlobalSpacing isn't set, then set it myself to the current automatic distance.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? $oTextColumns.AutomaticDistance() : $iGlobalSpacing
				$oTextColumns.setColumns($atColumns) ;Inserting the Column Array(Sequence) again, even without changes, deactivates AutoWidth.
			EndIf
		EndIf

		$oFrame.TextColumns = $oTextColumns
		$iError = ($oFrame.TextColumns.IsAutomatic() = $bAutoWidth) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iGlobalSpacing <> Null) Then
		If Not IsInt($iGlobalSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTextColumns.AutomaticDistance = $iGlobalSpacing
		$oFrame.TextColumns = $oTextColumns

		If ($oFrame.TextColumns.IsAutomatic() = True) Then ;If AutoWidth is on (True) Then error test, else dont, because I use $iGlobalSpacing
			;for setting the width internally also.
			$iError = (__LOWriter_IntIsBetween($oFrame.TextColumns.AutomaticDistance(), $iGlobalSpacing - 2, $iGlobalSpacing + 2)) ? $iError : BitOR($iError, 2)
		EndIf
	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If the requested column is the last column (furthest right), then set property setting error.
			;because spacing can't be set for the last column.
			$iError = BitOR($iError, 4)

		Else
			;Spacing is equally divided between the two ajoining columns, so set the first columns right margin,
			;and the next column's left margin to half of the spacing value each.
			$iRightMargin = Int($iSpacing / 2)
			$atColumns[$iColumn].RightMargin = $iRightMargin

			$iLeftMargin = Int($iSpacing - ($iSpacing / 2))
			$atColumns[$iColumn + 1].LeftMargin = $iLeftMargin

			;Set the settings into the document.
			$oTextColumns.setColumns($atColumns)
			$oFrame.TextColumns = $oTextColumns

			;Retrieve Array of columns again for testing.
			$atColumns = $oTextColumns.Columns()
			If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

			;See if setting spacing worked. Spacing is equally divided between the two ajoining columns, so retrieve the first columns right
			;margin, and the next column's left margin.
			$iError = (__LOWriter_IntIsBetween($atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 4)
		EndIf
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$atColumns[$iColumn].Width = $iWidth

		;Set the settings into the document.
		$oTextColumns.setColumns($atColumns)
		$oFrame.TextColumns = $oTextColumns

		;Retrieve Array of columns again for testing.
		$atColumns = $oFrame.TextColumns.Columns()
		If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($atColumns[$iColumn].Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameColumnSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameCreate
; Description ...: Create and insert a TextFrame.
; Syntax ........: _LOWriter_FrameCreate(Byref $oDoc, Byref $oCursor[, $sFrameName = Null[, $iWidth = Null[, $iHeight = Null[, $bOverwrite = False]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object.  A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. Must not be a Table Cursor.
;                  $sFrameName          - [optional] a string value. Default is Null. The Name of the Frame to Create.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the Frame to create. Set
;				   +						in Micrometers. Min. 51uM.
;                  $iHeight             - [optional] an integer value. Default is Null. The Height of the Frame to create. Set
;				   +						in Micrometers. Min. 51uM.
;                  $bOverwrite          - [optional] a boolean value. Default is False. If True, content selected by Cursor is
;				   +						overwritten., Else Frame is inserted after the selection.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor is a Table Cursor, cannot insert a Frame using a Table Cursor.
;				   @Error 1 @Extended 4 Return 0 = $bOverwrite not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sFrameName not a String.
;				   @Error 1 @Extended 6 Return 0 = Document already contains a Frame with same name as $sFrameName.
;				   @Error 1 @Extended 7 Return 0 = $iWidth not an integer, or less than 51 Micrometers.
;				   @Error 1 @Extended 8 Return 0 = $iHeight not an integer, or less than 51 Micrometers.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create "com.sun.star.text.TextFrame" Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Frame was created successfully and inserted at cursor
;				   +												position. Returning Frame Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor,
;					_LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameCreate(ByRef $oDoc, ByRef $oCursor, $sFrameName = Null, $iWidth = Null, $iHeight = Null, $bOverwrite = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $iCONST_AutoHW_OFF = 1
	Local $oFrame

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetType($oCursor) = $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bOverwrite) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$oFrame = $oDoc.createInstance("com.sun.star.text.TextFrame")
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($sFrameName <> Null) Then
		If Not IsString($sFrameName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If _LOWriter_DocHasFrameName($oDoc, $sFrameName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

		$oFrame.Name = $sFrameName
	EndIf

	If ($iWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidth, 51, $iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrame.WidthType = $iCONST_AutoHW_OFF
		$oFrame.Width = $iWidth
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 51, $iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrame.SizeType = $iCONST_AutoHW_OFF
		$oFrame.Height = $iHeight
	EndIf

	$oDoc.Text.insertTextContent($oCursor, $oFrame, $bOverwrite)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFrame)
EndFunc   ;==>_LOWriter_FrameCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameCreateTextCursor
; Description ...: Create a Text Cursor in a Frame for inserting text etc.
; Syntax ........: _LOWriter_FrameCreateTextCursor(Byref $oFrame)
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. A Text Cursor Object located in the Frame.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_CursorMove _LOWriter_DocInsertString
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameCreateTextCursor(ByRef $oFrame)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFrame.Text.createTextCursor())

EndFunc   ;==>_LOWriter_FrameCreateTextCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameDelete
; Description ...: Delete a Frame from the document.
; Syntax ........: _LOWriter_FrameDelete(Byref $oDoc, Byref $oFrame)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrame not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Frame was attempted to be deleted, but the document still contains a frame
;				   +									named the same.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Frame was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameDelete(ByRef $oDoc, ByRef $oFrame)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sFrameName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$sFrameName = $oFrame.getName()
	$oFrame.dispose()
	If ($oDoc.TextFrames.hasByName($sFrameName)) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Document still contains Frame named the same.
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameGetAnchor
; Description ...: Create a Text Cursor at the Frame Anchor position.
; Syntax ........: _LOWriter_FrameGetAnchor(Byref $oFrame)
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Successfully returned the Frame Anchor.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameGetAnchor(ByRef $oFrame)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oAnchor

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oAnchor = $oFrame.Anchor.Text.createTextCursorByRange($oFrame.Anchor())
	If Not IsObj($oAnchor) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oAnchor)
EndFunc   ;==>_LOWriter_FrameGetAnchor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameGetObjByCursor
; Description ...: Returns a Frame Object, for later Frame related functions.
; Syntax ........: _LOWriter_FrameGetObjByCursor(Byref $oDoc, Byref $oCursor)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object.  A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. Cursor object must be located in a Frame.
; Return values .: Success:  Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor not located in a Frame.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success, Returns an Object for the requested Frame.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_FrameCreateTextCursor,
;					_LOWriter_FrameDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameGetObjByCursor(ByRef $oDoc, ByRef $oCursor)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetDataType($oDoc, $oCursor) <> $LOW_CURDATA_FRAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Cursor not in Frame

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.TextFrames.getByName($oCursor.TextFrame.Name))
EndFunc   ;==>_LOWriter_FrameGetObjByCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameGetObjByName
; Description ...: Retrieve a Frame Object by Name.
; Syntax ........: _LOWriter_FrameGetObjByName(Byref $oDoc, $sFrameName)
; Parameters ....: $oDoc                - [in/out] an object.  A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFrameName          - a string value. The frame name to search for.
; Return values .: Success: 0 or Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFrameName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving TextFrame Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shapes Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 0 = Success. No matches found.
;				   @Error 0 @Extended 1 Return Object = Success. Successfully found requested Frame by name, returning Frame
;				   +								Object.
;				   @Error 0 @Extended 2 Return Object = Success. Successfully found requested Frame by name in Shapes list,
;				   +								returning Frame Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FramesGetNames, _LOWriter_FrameDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameGetObjByName(ByRef $oDoc, $sFrameName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFrames, $oShapes

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFrameName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFrames = $oDoc.TextFrames()
	If Not IsObj($oFrames) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($oFrames.hasByName($sFrameName)) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oFrames.getByName($sFrameName))

	;If No results, then search Shapes.
	$oShapes = $oDoc.DrawPage()
	If Not IsObj($oShapes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If $oShapes.hasElements() Then
		For $i = 0 To $oShapes.getCount() - 1
			If ($oShapes.getByIndex($i).Name() = $sFrameName) Then
				If ($oShapes.getByIndex($i).Text.ImplementationName() = "SwXTextFrame") Then Return SetError($__LOW_STATUS_SUCCESS, 2, $oShapes.getByIndex($i))
			EndIf

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 0) ;No matches
EndFunc   ;==>_LOWriter_FrameGetObjByName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameHyperlink
; Description ...: Set or Retrieve Frame Hyperlink settings.
; Syntax ........: _LOWriter_FrameHyperlink(Byref $oFrame[, $sURL = Null[, $sName = Null[, $sFrameTarget = Null[, $bServerSideMap = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $sURL                - [optional] a string value. Default is Null. The complete path to the file that you want
;				   +						to open.
;                  $sName               - [optional] a string value. Default is Null. Name for the hyperlink.
;                  $sFrameTarget        - [optional] a string value. Default is Null. Specify the name of the frame where you
;				   +						want to open the targeted file. See Constants below.
;                  $bServerSideMap      - [optional] a boolean value. Default is Null. If True, Uses a server-side image map.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sURL not a String
;				   @Error 1 @Extended 3 Return 0 = $sName not a String.
;				   @Error 1 @Extended 4 Return 0 = $sFrameTarget not a String.
;				   @Error 1 @Extended 5 Return 0 = $sFrameTarget not equal to one of the Constants listed below.
;				   @Error 1 @Extended 6 Return 0 = $bServerSideMap not a boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sURL
;				   |								2 = Error setting $sName
;				   |								4 = Error setting $sFrameTarget
;				   |								8 = Error setting $bServerSideMap
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Frame Target Constants: $LOW_FRAME_TARGET_NONE = "",
;							$LOW_FRAME_TARGET_TOP = "_top", File opens in the topmost frame in the hierarchy.
;							$LOW_FRAME_TARGET_PARENT = "_parent", File opens in the parent frame of the current frame. If there
;								is no parent frame, the current frame is used.
;							$LOW_FRAME_TARGET_BLANK = "_blank", File opens in a new page.
;							$LOW_FRAME_TARGET_SELF = "_self", File opens in the current frame.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameHyperlink(ByRef $oFrame, $sURL = Null, $sName = Null, $sFrameTarget = Null, $bServerSideMap = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avHyperlink[4]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sURL, $sName, $sFrameTarget, $bServerSideMap) Then
		__LOWriter_ArrayFill($avHyperlink, $oFrame.HyperLinkURL(), $oFrame.HyperLinkName(), $oFrame.HyperLinkTarget(), $oFrame.ServerMap())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avHyperlink)
	EndIf

	If ($sURL <> Null) Then
		If Not IsString($sURL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.HyperLinkURL = $sURL
		$iError = ($oFrame.HyperLinkURL() = $sURL) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.HyperLinkName = $sName
		$iError = ($oFrame.HyperLinkName = $sName) ? $iError : BitOR($iError, 2)
	EndIf
	;"" ; "_top" ; "_parent" ; "_blank" ; "_self"

	If ($sFrameTarget <> Null) Then
		If Not IsString($sFrameTarget) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If ($sFrameTarget <> "") Then
			If ($sFrameTarget <> $LOW_FRAME_TARGET_TOP) And _
					($sFrameTarget <> $LOW_FRAME_TARGET_PARENT) And _
					($sFrameTarget <> $LOW_FRAME_TARGET_BLANK) And _
					($sFrameTarget <> $LOW_FRAME_TARGET_SELF) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		EndIf
		$oFrame.HyperLinkTarget = $sFrameTarget
		$iError = ($oFrame.HyperLinkTarget() = $sFrameTarget) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bServerSideMap <> Null) Then
		If Not IsBool($bServerSideMap) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.ServerMap = $bServerSideMap
		$iError = ($oFrame.ServerMap() = $bServerSideMap) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameHyperlink

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameOptions
; Description ...: Set or Retrieve Frame Options.
; Syntax ........: _LOWriter_FrameOptions(Byref $oFrame[, $bProtectContent = Null[, $bProtectPos = Null[, $bProtectSize = Null[, $iVertAlign = Null[, $bEditInRead = Null[, $bPrint = Null[, $iTxtDirection = Null]]]]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $bProtectContent     - [optional] a boolean value. Default is Null. If True, Prevents changes to the contents
;				   +						of the frame.
;                  $bProtectPos         - [optional] a boolean value. Default is Null. If True, Locks the position of the frame
;				   +						in the current document.
;                  $bProtectSize        - [optional] a boolean value. Default is Null. If True, Locks the size of the frame.
;                  $iVertAlign          - [optional] an integer value. Default is Null. Specifies the vertical alignment of the
;				   +						frame's content. See Constants.
;                  $bEditInRead         - [optional] a boolean value. Default is Null. If True, Allows you to edit the contents
;				   +						of a frame in a document that is read-only.
;                  $bPrint              - [optional] a boolean value. Default is Null. If True, Includes the frame when
;				   +						you print the document.
;                  $iTxtDirection       - [optional] an integer value. Default is Null. Specifies the preferred text flow
;				   +						direction in a frame. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bProtectContent not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bProtectPos not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bProtectSize not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iVertAlign not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $bEditInRead not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bPrint not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $iTxtDirection not an Integer, less than 0 or greater than 5. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $bProtectContent
;				   |								2 = Error setting $bProtectPos
;				   |								4 = Error setting $bProtectSize
;				   |								8 = Error setting $iVertAlign
;				   |								16 = Error setting $bEditInRead
;				   |								32 = Error setting $bPrint
;				   |								64 = Error setting $iTxtDirection
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Vertical Alignment Constants: $LOW_TXT_ADJ_VERT_TOP(0), The top edge of the text is adjusted to the top edge of the Frame.
;								$LOW_TXT_ADJ_VERT_CENTER(1), The text is centered inside the Frame.
;								$LOW_TXT_ADJ_VERT_BOTTOM(2), The bottom edge of the text is adjusted to the bottom edge of the
;									frame.
; Text Direction Constants: $LOW_TXT_DIR_LR_TB(0), — text within lines is written left-to-right. Lines and blocks are placed
;								top-to-bottom. Typically, this is the writing mode for normal "alphabetic" text.
;							$LOW_TXT_DIR_RL_TB(1), — text within a line are written right-to-left. Lines and blocks are placed
;								top-to-bottom. Typically, this writing mode is used in Arabic and Hebrew text.
;							$LOW_TXT_DIR_TB_RL(2), — text within a line is written top-to-bottom. Lines and blocks are placed
;								right-to-left. Typically, this writing mode is used in Chinese and Japanese text.
;							$LOW_TXT_DIR_TB_LR(3), — text within a line is written top-to-bottom. Lines and blocks are placed
;								left-to-right. Typically, this writing mode is used in Mongolian text.
;							$LOW_TXT_DIR_CONTEXT(4)[LibreOffice Default], — obtain actual writing mode from the context of the
;								object.
;							$LOW_TXT_DIR_BT_LR(5), — text within a line is written bottom-to-top. Lines and blocks are placed
;								left-to-right. (LibreOffice 6.3)
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameOptions(ByRef $oFrame, $bProtectContent = Null, $bProtectPos = Null, $bProtectSize = Null, $iVertAlign = Null, $bEditInRead = Null, $bPrint = Null, $iTxtDirection = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOptions[7]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bProtectContent, $bProtectPos, $bProtectSize, $iVertAlign, $bEditInRead, $bPrint, $iTxtDirection) Then
		__LOWriter_ArrayFill($avOptions, $oFrame.ContentProtected(), $oFrame.PositionProtected(), $oFrame.SizeProtected(), _
				$oFrame.TextVerticalAdjust(), $oFrame.EditInReadOnly(), $oFrame.Print(), $oFrame.WritingMode())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOptions)
	EndIf

	If ($bProtectContent <> Null) Then
		If Not IsBool($bProtectContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.ContentProtected = $bProtectContent
		$iError = ($oFrame.ContentProtected() = $bProtectContent) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bProtectPos <> Null) Then
		If Not IsBool($bProtectPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.PositionProtected = $bProtectPos
		$iError = ($oFrame.PositionProtected() = $bProtectPos) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bProtectSize <> Null) Then
		If Not IsBool($bProtectSize) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.SizeProtected = $bProtectSize
		$iError = ($oFrame.SizeProtected() = $bProtectSize) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iVertAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertAlign, $LOW_TXT_ADJ_VERT_TOP, $LOW_TXT_ADJ_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.TextVerticalAdjust = $iVertAlign
		$iError = ($oFrame.TextVerticalAdjust() = $iVertAlign) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bEditInRead <> Null) Then
		If Not IsBool($bEditInRead) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.EditInReadOnly = $bEditInRead
		$iError = ($oFrame.EditInReadOnly() = $bEditInRead) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bPrint <> Null) Then
		If Not IsBool($bPrint) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrame.Print = $bPrint
		$iError = ($oFrame.Print() = $bPrint) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iTxtDirection <> Null) Then
		If Not __LOWriter_IntIsBetween($iTxtDirection, $LOW_TXT_DIR_LR_TB, $LOW_TXT_DIR_BT_LR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrame.WritingMode = $iTxtDirection
		$iError = ($oFrame.WritingMode() = $iTxtDirection) ? $iError : BitOR($iError, 64)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameOptions

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameOptionsName
; Description ...: Set or Retrieve Frame Name settings.
; Syntax ........: _LOWriter_FrameOptionsName(Byref $oDoc, Byref $oFrame[, $sName = Null[, $sDesc = Null[, $sPrevLink = Null[, $sNextLink = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $sName               - [optional] a string value. Default is Null. Name for the Frame.
;                  $sDesc               - [optional] a string value. Default is Null. Description of the Frame.
;                  $sPrevLink           - [optional] a string value. Default is Null. The Frame Name that comes before the
;				   +						current Frame in a linked sequence. The current frame and the target frame must be
;				   +						empty. Set to "" to remove a linked frame.
;                  $sNextLink           - [optional] a string value. Default is Null. The Frame Name that comes after the
;				   +						current Frame in a linked sequence. The current frame and the target frame must be
;				   +						empty. Set to "" to remove a linked frame.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 3 Return 0 = $sName not a String.
;				   @Error 1 @Extended 4 Return 0 = Document already contains Frame with same name as $sName.
;				   @Error 1 @Extended 5 Return 0 = $sDesc not a string.
;				   @Error 1 @Extended 6 Return 0 = $sPrevLink not a String.
;				   @Error 1 @Extended 7 Return 0 = Document does not contain Frame matching $sPrevLink.
;				   @Error 1 @Extended 8 Return 0 = $sNextLink not a String.
;				   @Error 1 @Extended 9 Return 0 = Document does not contain Frame matching $sNextLink
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sName
;				   |								2 = Error setting $sDesc
;				   |								4 = Error setting $sPrevLink
;				   |								8 = Error setting $sNextLink
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameOptionsName(ByRef $oDoc, ByRef $oFrame, $sName = Null, $sDesc = Null, $sPrevLink = Null, $sNextLink = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $asName[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($sName, $sDesc, $sPrevLink, $sNextLink) Then
		__LOWriter_ArrayFill($asName, $oFrame.Name(), $oFrame.Description(), $oFrame.ChainPrevName(), $oFrame.ChainNextName())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $asName)
	EndIf

	If ($sName <> Null) Then
		If Not IsString($sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If _LOWriter_DocHasFrameName($oDoc, $sName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.Name = $sName
		$iError = ($oFrame.Name() = $sName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sDesc <> Null) Then
		If Not IsString($sDesc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.Description = $sDesc
		$iError = ($oFrame.Description = $sDesc) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sPrevLink <> Null) Then
		If Not IsString($sPrevLink) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If ($sPrevLink <> "") And Not _LOWriter_DocHasFrameName($oDoc, $sPrevLink) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrame.ChainPrevName = $sPrevLink
		$iError = ($oFrame.ChainPrevName() = $sPrevLink) ? $iError : BitOR($iError, 4)
	EndIf

	If ($sNextLink <> Null) Then
		If Not IsString($sNextLink) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If ($sNextLink <> "") And Not _LOWriter_DocHasFrameName($oDoc, $sNextLink) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oFrame.ChainNextName = $sNextLink
		$iError = ($oFrame.ChainNextName() = $sNextLink) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameOptionsName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FramesGetNames
; Description ...: List the names of all frames contained in a document.
; Syntax ........: _LOWriter_FramesGetNames(Byref $oDoc[, $bSearchShapes = False])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bSearchShapes       - [optional] a boolean value. Default is False. If True, function searches and adds
;				   +					any Frames listed as "Shapes" in the document to the array of Frame names. See
;				   +					remarks.
; Return values .: Success: Array of Strings.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bSearchShapes not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure retrieving Frame objects.
;				   @Error 2 @Extended 2 Return 0 = Failure retrieving Shape objects.
;				   --Success--
;				   @Error 0 @Extended ? Return Array. Returning Array of Frame names. @Extended set to number of Frame Names
;				   +							returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: in Docx (and possibly other formats) Frames seem to be saved as "Shapes" instead of "Frames", if this
;					function returns no results, or not the ones you expect, try setting $bSearchShapes to true.
; Related .......: _LOWriter_FrameGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FramesGetNames(ByRef $oDoc, $bSearchShapes = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asFrameNames[0], $asShapes[0]
	Local $oFrames, $oShapes
	Local $iCount = 0, $iEndofArray

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bSearchShapes) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFrames = $oDoc.TextFrames()
	If Not IsObj($oFrames) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If $oFrames.hasElements() Then
		ReDim $asFrameNames[$oFrames.getCount()]
		For $i = 0 To $oFrames.getCount() - 1
			$asFrameNames[$i] = $oFrames.getByIndex($i).Name()
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	If ($bSearchShapes = True) Then
		$oShapes = $oDoc.DrawPage()
		If Not IsObj($oShapes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

		If $oShapes.hasElements() Then
			ReDim $asShapes[$oShapes.getCount()]
			For $i = 0 To $oShapes.getCount() - 1

				If $oShapes.getByIndex($i).supportsService("com.sun.star.drawing.Text") Then ;Determin if the Shape is an actual Frame or not.
					If ($oShapes.getByIndex($i).Text.ImplementationName() = "SwXTextFrame") And Not _
							$oShapes.getByIndex($i).getPropertySetInfo().hasPropertyByName("ActualSize") Then
						$asShapes[$iCount] = $oShapes.getByIndex($i).Name()
						$iCount += 1
					EndIf
				EndIf
			Next

			ReDim $asShapes[$iCount]

			$iEndofArray = UBound($asFrameNames)
			ReDim $asFrameNames[UBound($asFrameNames) + $iCount]

			For $i = 0 To UBound($asShapes) - 1
				$asFrameNames[$iEndofArray] = $asShapes[$i]
				$iEndofArray += 1
			Next

		EndIf

	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, UBound($asFrameNames), $asFrameNames)

EndFunc   ;==>_LOWriter_FramesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameShadow
; Description ...: Set or Retrieve the shadow settings for a Frame.
; Syntax ........: _LOWriter_FrameShadow(Byref $oFrame[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Frame Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Frame shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Frame Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Frame Shadow, must
;				   +						be one of the Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 3 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 4 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving ShadowFormat Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByName, _LOWriter_FrameGetObjByCursor,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameShadow(ByRef $oFrame, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tShdwFrmt
	Local $iError = 0
	Local $avShadow[4]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$tShdwFrmt = $oFrame.ShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Or ($iWidth < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_SHADOW_BOTTOM_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oFrame.ShadowFormat = $tShdwFrmt
	;Error Checking
	$tShdwFrmt = $oFrame.ShadowFormat
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($tShdwFrmt.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($tShdwFrmt.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($tShdwFrmt.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($tShdwFrmt.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleAreaColor
; Description ...: Set or Retrieve background color settings for a Frame style.
; Syntax ........: _LOWriter_FrameStyleAreaColor(Byref $oFrameStyle[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value. Set to
;				   +							$LOW_COLOR_OFF(-1) for "None".
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 4 Return 0 = $bBackTransparent not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Note: If transparency is set, it can cause strange values to be displayed for Background color.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleAreaColor(ByRef $oFrameStyle, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oFrameStyle.BackColor(), $oFrameStyle.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrameStyle.BackColor = $iBackColor
		$iError = ($oFrameStyle.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.BackTransparent = $bBackTransparent
		$iError = ($oFrameStyle.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleAreaColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleAreaGradient
; Description ...: Modify or retrieve the settings for Frame Style BackGround color Gradient.
; Syntax ........: _LOWriter_FrameStyleAreaGradient(Byref $oDoc, Byref $oFrameStyle[, $sGradientName = Null[, $iType = Null[, $iIncrement = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iFromColor = Null[, $iToColor = Null[, $iFromIntense = Null[, $iToIntense = Null]]]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $sGradientName       - [optional] a string value. Default is Null. A Preset Gradient Name. See Constants List.
;				   +								See remarks.
;                  $iType               - [optional] an integer value. Default is Null. The gradient that you want to apply. See
;				   +						Constants List.
;                  $iIncrement          - [optional] an integer value. Default is Null. Specifies the number of steps of change
;				   +						color. Allowed values are: 0, 3 to 256. 0 = Automatic.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the
;				   +						gradient, where 0% corresponds to the current horizontal location of the endpoint
;				   +						color in the gradient. The endpoint color is the color that is selected in the
;				   +						"To Color" setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient,
;				   +						where 0% corresponds to the current vertical location of the endpoint color in the
;				   +						gradient. The endpoint color is the color that is selected in the "To Color"
;				   +						Setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than "Linear",
;				   +						or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iFromColor          - [optional] an integer value. Default is Null. A color for the beginning point of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iToColor            - [optional] an integer value. Default is Null. A color for the endpoint of the gradient,
;				   +						set in Long Color Integer format. Can be one of the below Constants or a custom
;				   +						value.
;                  $iFromIntense        - [optional] an integer value. Default is Null. Enter the intensity for the color in the
;				   +						"From Color", where 0% corresponds to black, and 100 % to the selected color. Min.
;				   +						0%, Max 100%
;                  $iToIntense          - [optional] an integer value. Default is Null . Enter the intensity for the color in the
;				   +						"To Color", where 0% corresponds to black, and 100 % to the selected color. Min. 0%,
;				   +						Max 100%
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sGradientName Not a String.
;				   @Error 1 @Extended 5 Return 0 = $iType Not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iIncrement Not an Integer, less than 3 but not 0, or greater than 256.
;				   @Error 1 @Extended 7 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 10 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 11 Return 0 = $iFromColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 12 Return 0 = $iToColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 13 Return 0 = $iFromIntense Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 14 Return 0 = $iToIntense Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillGradient" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024
;				   |								1 = Error setting $sGradientName
;				   |								2 = Error setting $iType
;				   |								4 = Error setting $iIncrement
;				   |								8 = Error setting $iXCenter
;				   |								16 = Error setting $iYCenter
;				   |								32 = Error setting $iAngle
;				   |								64 = Error setting $iBorder
;				   |								128 = Error setting $iFromColor
;				   |								256 = Error setting $iToColor
;				   |								512 = Error setting $iFromIntense
;				   |								1024 = Error setting $iToIntense
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 11 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: Gradient Name has no use other than for applying a pre-existing preset gradient.
;Gradient Name Constants: $LOW_GRAD_NAME_PASTEL_BOUQUET("Pastel Bouquet",
;							$LOW_GRAD_NAME_PASTEL_DREAM("Pastel Dream",
;							$LOW_GRAD_NAME_BLUE_TOUCH = "Blue Touch"),
;							$LOW_GRAD_NAME_BLANK_W_GRAY("Blank with Gray"),
;							$LOW_GRAD_NAME_SPOTTED_GRAY("Spotted Gray"),
;							$LOW_GRAD_NAME_LONDON_MIST("London Mist"),
;							$LOW_GRAD_NAME_TEAL_TO_BLUE("Teal to Blue"),
;							$LOW_GRAD_NAME_MIDNIGHT("Midnight"),
;							$LOW_GRAD_NAME_DEEP_OCEAN("Deep Ocean"),
;							$LOW_GRAD_NAME_SUBMARINE("Submarine"),
;							$LOW_GRAD_NAME_GREEN_GRASS("Green Grass"),
;							$LOW_GRAD_NAME_NEON_LIGHT("Neon Light"),
;							$LOW_GRAD_NAME_SUNSHINE("Sunshine"),
;							$LOW_GRAD_NAME_PRESENT("Present"),
;							$LOW_GRAD_NAME_MAHOGANY("Mahogany")
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleAreaGradient(ByRef $oDoc, ByRef $oFrameStyle, $sGradientName = Null, $iType = Null, $iIncrement = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iFromColor = Null, $iToColor = Null, $iFromIntense = Null, $iToIntense = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $avGradient[11]
	Local $sGradName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$tStyleGradient = $oFrameStyle.FillGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sGradientName, $iType, $iIncrement, $iXCenter, $iYCenter, $iAngle, $iBorder, $iFromColor, $iToColor, _
			$iFromIntense, $iToIntense) Then
		__LOWriter_ArrayFill($avGradient, $oFrameStyle.FillGradientName(), $tStyleGradient.Style(), _
				$oFrameStyle.FillGradientStepCount(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), ($tStyleGradient.Angle() / 10), _
				$tStyleGradient.Border(), $tStyleGradient.StartColor(), $tStyleGradient.EndColor(), $tStyleGradient.StartIntensity(), _
				$tStyleGradient.EndIntensity()) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGradient)
	EndIf

	If ($oFrameStyle.FillStyle() <> $__LOWCONST_FILL_STYLE_GRADIENT) Then $oFrameStyle.FillStyle = $__LOWCONST_FILL_STYLE_GRADIENT

	If ($sGradientName <> Null) Then
		If Not IsString($sGradientName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		__LOWriter_GradientPresets($oDoc, $oFrameStyle, $tStyleGradient, $sGradientName)
		$iError = ($oFrameStyle.FillGradientName() = $sGradientName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oFrameStyle.FillStyle = $__LOWCONST_FILL_STYLE_OFF
			$oFrameStyle.FillGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iIncrement <> Null) Then
		If Not __LOWriter_IntIsBetween($iIncrement, 3, 256, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrameStyle.FillGradientStepCount = $iIncrement
		$tStyleGradient.StepCount = $iIncrement ; Must set both of these in order for it to take effect.
		$iError = ($oFrameStyle.FillGradientStepCount() = $iIncrement) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iFromColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$tStyleGradient.StartColor = $iFromColor
	EndIf

	If ($iToColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iToColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$tStyleGradient.EndColor = $iToColor
	EndIf

	If ($iFromIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$tStyleGradient.StartIntensity = $iFromIntense
	EndIf

	If ($iToIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iToIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 14, 0)
		$tStyleGradient.EndIntensity = $iToIntense
	EndIf

	If ($oFrameStyle.FillGradientName() = "") Then

		$sGradName = __LOWriter_GradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oFrameStyle.FillGradientName = $sGradName
		If ($oFrameStyle.FillGradientName <> $sGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oFrameStyle.FillGradient = $tStyleGradient

	;Error checking
	$iError = ($iType = Null) ? $iError : ($oFrameStyle.FillGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oFrameStyle.FillGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iYCenter = Null) ? $iError : ($oFrameStyle.FillGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 16)
	$iError = ($iAngle = Null) ? $iError : (($oFrameStyle.FillGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 32)
	$iError = ($iBorder = Null) ? $iError : ($oFrameStyle.FillGradient.Border() = $iBorder) ? $iError : BitOR($iError, 64)
	$iError = ($iFromColor = Null) ? $iError : ($oFrameStyle.FillGradient.StartColor() = $iFromColor) ? $iError : BitOR($iError, 128)
	$iError = ($iToColor = Null) ? $iError : ($oFrameStyle.FillGradient.EndColor() = $iToColor) ? $iError : BitOR($iError, 256)
	$iError = ($iFromIntense = Null) ? $iError : ($oFrameStyle.FillGradient.StartIntensity() = $iFromIntense) ? $iError : BitOR($iError, 512)
	$iError = ($iToIntense = Null) ? $iError : ($oFrameStyle.FillGradient.EndIntensity() = $iToIntense) ? $iError : BitOR($iError, 1024)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleAreaGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleBorderColor
; Description ...: Set or retrieve the Frame Style Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameStyleBorderColor(Byref $oFrameStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Frame in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_FrameStyleBorderWidth, _LOWriter_FrameStyleBorderStyle,
;					_LOWriter_FrameStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleBorderColor(ByRef $oFrameStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oFrameStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameStyleBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleBorderPadding
; Description ...: Set or retrieve the Frame Style Border Padding settings.
; Syntax ........: _LOWriter_FrameStyleBorderPadding(Byref $oFrameStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Frame contents in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Frame contents in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer,  _LOWriter_FrameStyleBorderWidth, _LOWriter_FrameStyleBorderStyle,
;					_LOWriter_FrameStyleBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleBorderPadding(ByRef $oFrameStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[5]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oFrameStyle.BorderDistance(), $oFrameStyle.TopBorderDistance(), _
				$oFrameStyle.BottomBorderDistance(), $oFrameStyle.LeftBorderDistance(), $oFrameStyle.RightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iAll <> Null) Then
		If Not __LOWriter_IntIsBetween($iAll, 0, $iAll) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrameStyle.BorderDistance = $iAll
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.BorderDistance(), $iAll - 1, $iAll + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.TopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.TopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.BottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.BottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrameStyle.LeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.LeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrameStyle.RightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.RightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleBorderStyle
; Description ...: Set or Retrieve the Frame Style Border Line style. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameStyleBorderStyle(Byref $oFrameStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Frame using one of the line style constants, See below for list.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_FrameStyleBorderWidth,
;					_LOWriter_FrameStyleBorderColor, _LOWriter_FrameStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleBorderStyle(ByRef $oFrameStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oFrameStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameStyleBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleBorderWidth
; Description ...: Set or Retrieve the Frame Style Border Line Width. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_FrameStyleBorderWidth(Byref $oFrameStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +						Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Frame in MicroMeters. One of the predefined constants listed below can be used.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set Width to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_FrameStyleBorderStyle, _LOWriter_FrameStyleBorderColor,
;					_LOWriter_FrameStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleBorderWidth(ByRef $oFrameStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oFrameStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_FrameStyleBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleColumnSeparator
; Description ...: Modify or retrieve Frame Style Column Separator line settings.
; Syntax ........: _LOWriter_FrameStyleColumnSeparator(Byref $oDoc, $sFrameStyle[, $bSeparatorOn = Null[, $iStyle = Null[, $iWidth = Null[, $iColor = Null[, $iHeight = Null[, $iPosition = Null]]]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $bSeparatorOn        - [optional] a boolean value. Default is Null. If true, add a separator line between
;				   +						two or more columns.
;                  $iStyle              - [optional] an integer value. Default is Null. The formatting style for the column
;				   +						separator line. See Constants below.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the separator line. Set in
;				   +						Micrometers, Min 5 uM, Max 180 uM.
;                  $iColor              - [optional] an integer value. Default is Null. The color for the separator line. Can be
;				   +						one of the below constants or a custom value.
;                  $iHeight             - [optional] an integer value. Default is Null. The length of the separator line as a
;				   +						percentage of the height of the column area. Min 0%, Max 100%.
;                  $iPosition           - [optional] an integer value. Default is Null. Select the vertical alignment of the
;				   +						separator line. This option is only available if Height value of the line is less
;				   +						than 100%. See Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bSeparatorOn not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $iStyle not an Integer, less than 0 or greater than 3. See constants.
;				   @Error 1 @Extended 5 Return 0 = $iWidth not an Integer, less than 5 or greater than 180.
;				   @Error 1 @Extended 6 Return 0 = $iColor not an Integer, less than 0 or greater than 16777215. See constants.
;				   @Error 1 @Extended 7 Return 0 = $iHeight not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iPosition not an Integer, less than 0 or greater than 2. See constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $bSeparatorOn
;				   |								2 = Error setting $iStyle
;				   |								4 = Error setting $iWidth
;				   |								8 = Error setting $iColor
;				   |								16 = Error setting $iHeight
;				   |								32 = Error setting $iPosition
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Line Style Constants: $LOW_LINE_STYLE_NONE(0),
;						$LOW_LINE_STYLE_SOLID(1),
;						$LOW_LINE_STYLE_DOTTED(2),
;						$LOW_LINE_STYLE_DASHED(3)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
;Line Position Constants: $LOW_ALIGN_VERT_TOP(0),
;							$LOW_ALIGN_VERT_MIDDLE(1),
;							$LOW_ALIGN_VERT_BOTTOM(2)
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleColumnSeparator(ByRef $oFrameStyle, $bSeparatorOn = Null, $iStyle = Null, $iWidth = Null, $iColor = Null, $iHeight = Null, $iPosition = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0
	Local $avColumnLine[6]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns = $oFrameStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bSeparatorOn, $iStyle, $iWidth, $iColor, $iHeight, $iPosition) Then
		__LOWriter_ArrayFill($avColumnLine, $oTextColumns.SeparatorLineIsOn(), $oTextColumns.SeparatorLineStyle(), $oTextColumns.SeparatorLineWidth(), _
				$oTextColumns.SeparatorLineColor(), $oTextColumns.SeparatorLineRelativeHeight(), $oTextColumns.SeparatorLineVerticalAlignment())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnLine)
	EndIf

	If ($bSeparatorOn <> Null) Then
		If Not IsBool($bSeparatorOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTextColumns.SeparatorLineIsOn = $bSeparatorOn
		$iError = ($oTextColumns.SeparatorLineIsOn() = $bSeparatorOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iStyle <> Null) Then
		If Not __LOWriter_IntIsBetween($iStyle, $LOW_LINE_STYLE_NONE, $LOW_LINE_STYLE_DASHED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oTextColumns.SeparatorLineStyle = $iStyle
		$iError = ($oTextColumns.SeparatorLineStyle() = $iStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidth, 5, 180) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTextColumns.SeparatorLineWidth = $iWidth
		$iError = (__LOWriter_IntIsBetween($oTextColumns.SeparatorLineWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTextColumns.SeparatorLineColor = $iColor
		$iError = ($oTextColumns.SeparatorLineColor() = $iColor) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oTextColumns.SeparatorLineRelativeHeight = $iHeight
		$iError = ($oTextColumns.SeparatorLineRelativeHeight() = $iHeight) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iPosition <> Null) Then
		If Not __LOWriter_IntIsBetween($iPosition, $LOW_ALIGN_VERT_TOP, $LOW_ALIGN_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oTextColumns.SeparatorLineVerticalAlignment = $iPosition
		$iError = ($oTextColumns.SeparatorLineVerticalAlignment() = $iPosition) ? $iError : BitOR($iError, 32)
	EndIf

	$oFrameStyle.TextColumns = $oTextColumns

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleColumnSeparator

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleColumnSettings
; Description ...: Set or retrieve Frame style Column count.
; Syntax ........: _LOWriter_FrameStyleColumnSettings(Byref $oFrameStyle[, $iColumns = Null ])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iColumns            - [optional] an integer value. Default is Null. The number of columns that you want in
;				   +						the Frame. Min. 1.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iColumns not an Integer or less than 1.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iColumns
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning current
;				   +								column count.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleColumnSettings(ByRef $oFrameStyle, $iColumns = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns = $oFrameStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iColumns) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oTextColumns.ColumnCount())

	If Not __LOWriter_IntIsBetween($iColumns, 1, $iColumns) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oTextColumns.ColumnCount = $iColumns
	$oFrameStyle.TextColumns = $oTextColumns

	$iError = ($oFrameStyle.TextColumns.ColumnCount() = $iColumns) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleColumnSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleColumnSize
; Description ...: Set or retrieve Column sizing settings.
; Syntax ........: _LOWriter_FrameStyleColumnSize(Byref $oFrameStyle, $iColumn[, $bAutoWidth = Null[, $iGlobalSpacing = Null[, $iSpacing = Null[, $iWidth = Null]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iColumn             - an integer value. The column to modify the settings on. See Remarks.
;                  $bAutoWidth          - [optional] a boolean value. Default is Null. If True Column Width is automatically
;				   +						adjusted.
;                  $iGlobalSpacing          - [optional] an integer value. Default is Null. Set a spacing value for between all
;				   +						columns. Set in Micrometers. See remarks.
;                  $iSpacing            - [optional] an integer value. Default is Null. The Space between two columns, in
;				   +						Micrometers. Cannot be set for the last column.
;                  $iWidth              - [optional] an integer value. Default is Null. If $iGlobalSpacing is set to other than
;				   +						0, enter the width of the column. Set in Micrometers.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iColumn not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iColumn higher than number of columns in the document or less than 1.
;				   @Error 1 @Extended 5 Return 0 = $bAutoWidth not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iGlobalSpacing not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iSpacing not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iWidth not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Frame Style Column Object Array.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = No columns present for requested Frame Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bAutoWidth
;				   |								2 = Error setting $iGlobalSpacing
;				   |								4 = Error setting $iSpacing
;				   |								8 = Error setting $iWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: NOTE: This function will work fine for setting AutoWidth, and Spacing values, however Width will not work
;					the best, Spacing etc is set in plain micrometer values, however width is set in a relative value, and I am
;						unable to find a way to be able to convert a specific value, such as 1" (2540 Micrometers) etc, to the
;						appropriate relative value, especially when spacing is set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: To set $bAutoWidth or $iGlobalSpacing you may enter any number in $iColumn as long as you are not
;						setting width or spacing, as AutoWidth is not column specific. If you set a value for $iGlobalSpacing
;						with $bAutoWidth set to false, the value is applied to all the columns still.
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleColumnSize(ByRef $oFrameStyle, $iColumn, $bAutoWidth = Null, $iGlobalSpacing = Null, $iSpacing = Null, $iWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $atColumns
	Local $iError = 0, $iRightMargin, $iLeftMargin
	Local $avColumnSize[4]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oTextColumns = $oFrameStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$atColumns = $oTextColumns.Columns()
	If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	If ($oTextColumns.ColumnCount() <= 1) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If ($iColumn > UBound($atColumns)) Or ($iColumn < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$iColumn = $iColumn - 1 ;Libre Columns Array is 0 based -- Minus one to compensate

	If __LOWriter_VarsAreNull($bAutoWidth, $iGlobalSpacing, $iSpacing, $iWidth) Then

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If last column is called, there is no spacing value, so return the outter margin, which will be 0.
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin(), $atColumns[$iColumn].Width())
		Else
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $atColumns[$iColumn].Width())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnSize)
	EndIf

	If ($bAutoWidth <> Null) Then
		If Not IsBool($bAutoWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

		If ($bAutoWidth <> $oTextColumns.IsAutomatic()) Then

			If ($bAutoWidth = True) Then
				; retrieve both outside column inner margin settings to add together for determining AutoWidth value.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? ($atColumns[0].RightMargin() + $atColumns[UBound($atColumns) - 1].LeftMargin()) : $iGlobalSpacing
				; If $iGlobalSpacing is not called with a value, set my own, else use the called value.
				$oTextColumns.ColumnCount = $oTextColumns.ColumnCount()
				$oFrameStyle.TextColumns = $oTextColumns
				; Setting the number of columns activates the AutoWidth option, so set it to the same number of columns.
			Else ;If False
				; If GlobalSpacing isn't set, then set it myself to the current automatic distance.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? $oTextColumns.AutomaticDistance() : $iGlobalSpacing
				$oTextColumns.setColumns($atColumns) ;Inserting the Column Array(Sequence) again, even without changes, deactivates AutoWidth.
			EndIf

			$oFrameStyle.TextColumns = $oTextColumns
			$iError = ($oFrameStyle.TextColumns.IsAutomatic() = $bAutoWidth) ? $iError : BitOR($iError, 1)
		EndIf

		If ($iGlobalSpacing <> Null) Then
			If Not IsInt($iGlobalSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			$oTextColumns.AutomaticDistance = $iGlobalSpacing
			$oFrameStyle.TextColumns = $oTextColumns

			If ($oFrameStyle.TextColumns.IsAutomatic() = True) Then ;If AutoWidth is on (True) Then error test, else dont, because I use $iGlobalSpacing
				;for setting the width internally also.
				$iError = (__LOWriter_IntIsBetween($oFrameStyle.TextColumns.AutomaticDistance(), $iGlobalSpacing - 2, $iGlobalSpacing + 2)) ? $iError : BitOR($iError, 2)
			EndIf
		EndIf

	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If the requested column is the last column (furthest right), then set property setting error.
			;because spacing can't be set for the last column.
			$iError = BitOR($iError, 4)

		Else
			;Spacing is equally divided between the two ajoining columns, so set the first columns right margin,
			;and the next column's left margin to half of the spacing value each.
			$iRightMargin = Int($iSpacing / 2)
			$atColumns[$iColumn].RightMargin = $iRightMargin

			$iLeftMargin = Int($iSpacing - ($iSpacing / 2))
			$atColumns[$iColumn + 1].LeftMargin = $iLeftMargin

			;Set the settings into the document.
			$oTextColumns.setColumns($atColumns)
			$oFrameStyle.TextColumns = $oTextColumns

			;Retrieve Array of columns again for testing.
			$atColumns = $oTextColumns.Columns()
			If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

			;See if setting spacing worked. Spacing is equally divided between the two ajoining columns, so retrieve the first columns right
			;margin, and the next column's left margin.
			$iError = (__LOWriter_IntIsBetween($atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 4)
		EndIf
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$atColumns[$iColumn].Width = $iWidth

		;Set the settings into the document.
		$oTextColumns.setColumns($atColumns)
		$oFrameStyle.TextColumns = $oTextColumns

		;Retrieve Array of columns again for testing.
		$atColumns = $oFrameStyle.TextColumns.Columns()
		If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($atColumns[$iColumn].Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleColumnSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleCreate
; Description ...: Create a new Frame Style in a Document.
; Syntax ........: _LOWriter_FrameStyleCreate(Byref $oDoc, $sFrameStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFrameStyle           - a string value. The Name of the New Frame Style to Create.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFrameStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sFrameStyle name already exists in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Retrieving "FrameStyles" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Creating "com.sun.star.style.FrameStyle" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Retrieving New Frame Style Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating new Frame Style by Name.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. New Frame Style successfully created. Returning the Frame
;				   +												Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameStyleDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleCreate(ByRef $oDoc, $sFrameStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFrameStyles, $oStyle, $oFrameStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFrameStyles = $oDoc.StyleFamilies().getByName("FrameStyles")
	If Not IsObj($oFrameStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If _LOWriter_FrameStyleExists($oDoc, $sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyle = $oDoc.createInstance("com.sun.star.style.FrameStyle")
	If Not IsObj($oStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oFrameStyles.insertByName($sFrameStyle, $oStyle)

	If Not $oFrameStyles.hasByName($sFrameStyle) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oFrameStyle = $oFrameStyles.getByName($sFrameStyle)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFrameStyle)
EndFunc   ;==>_LOWriter_FrameStyleCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleDelete
; Description ...: Delete a User-Created Frame Style from a Document.
; Syntax ........: _LOWriter_FrameStyleDelete(Byref $oDoc, $oFrameStyle[, $bForceDelete = False[, $sReplacementStyle = "Frame"]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function. Must be a User-Created one, not a built-in Style native
;				   +							to Libre-Office.
;                  $bForceDelete        - [optional] a boolean value. Default is False. If True Frame style will be deleted
;				   +						regardless of whether it is in use or not.
;                  $sReplacementStyle   - [optional] a string value. Default is "Frame". The Frame style to use instead of the
;				   +						one being deleted if the Frame style being deleted was already applied to a Frame in
;				   +						the document.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 4 Return 0 = $bForceDelete not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sReplacementStyle not a String.
;				   @Error 1 @Extended 6 Return 0 = $sReplacementStyle doesn't exist in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FrameStyles" Object.
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Frame Style Name.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $sFrameStyle is not a User-Created Frame Style and cannot be deleted.
;				   @Error 3 @Extended 2 Return 0 = $sFrameStyle is in use and $bForceDelete is false.
;				   @Error 3 @Extended 3 Return 0 = $sFrameStyle still exists after deletion attempt.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Frame Style called in $sFrameStyle was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleDelete(ByRef $oDoc, $oFrameStyle, $bForceDelete = False, $sReplacementStyle = "Frame")
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFrameStyles
	Local $sFrameStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bForceDelete) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsString($sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($sReplacementStyle <> "") And Not _LOWriter_FrameStyleExists($oDoc, $sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oFrameStyles = $oDoc.StyleFamilies().getByName("FrameStyles")
	If Not IsObj($oFrameStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$sFrameStyle = $oFrameStyle.Name()
	If Not IsString($sFrameStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not $oFrameStyle.isUserDefined() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If $oFrameStyle.isInUse() And Not ($bForceDelete) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; If Style is in use return an error unless force delete is true.

	If ($oFrameStyle.getParentStyle() = Null) Or ($sReplacementStyle <> "Frame") Then $oFrameStyle.setParentStyle($sReplacementStyle)
	;If Parent style is blank set it to "Frame" style, Or if not but User has called a specific style set it to that.

	$oFrameStyles.removeByName($sFrameStyle)
	Return ($oFrameStyles.hasByName($sFrameStyle)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleExists
; Description ...: Check whether a Document contains a specific Frame Style by name.
; Syntax ........: _LOWriter_FrameStyleExists(Byref $oDoc, $sFrameStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParStyle           - a string value. The Frame Style Name to search for.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFrameStyle not a String.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. If the Document contains a Frame style matching the input
;				   +										name, True is returned, else False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleExists(ByRef $oDoc, $sFrameStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $oDoc.StyleFamilies.getByName("FrameStyles").hasByName($sFrameStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_FrameStyleExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleGetObj
; Description ...: Retrieve a Frame Style Object for use with other  Frame Style functions.
; Syntax ........: _LOWriter_FrameStyleGetObj(Byref $oDoc, $sFrameStyle)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sFrameStyle           - a string value. The Frame Style name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sFrameStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = Frame Style defined in $sFrameStyle not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Frame Style Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Frame Style successfully retrieved, returning Frame
;				   +										Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleGetObj(ByRef $oDoc, $sFrameStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oFrameStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_FrameStyleExists($oDoc, $sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oFrameStyle = $oDoc.StyleFamilies().getByName("FrameStyles").getByName($sFrameStyle)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oFrameStyle)
EndFunc   ;==>_LOWriter_FrameStyleGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleOptions
; Description ...: Set or Retrieve Frame Style Options.
; Syntax ........: _LOWriter_FrameStyleOptions(Byref $oFrameStyle[, $bProtectContent = Null[, $bProtectPos = Null[, $bProtectSize = Null[, $iVertAlign = Null[, $bEditInRead = Null[, $bPrint = Null[, $iTxtDirection = Null]]]]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $bProtectContent     - [optional] a boolean value. Default is Null. If True, Prevents changes to the contents
;				   +						of the frame.
;                  $bProtectPos         - [optional] a boolean value. Default is Null. If True, Locks the position of the frame
;				   +						in the current document.
;                  $bProtectSize        - [optional] a boolean value. Default is Null. If True, Locks the size of the frame.
;                  $iVertAlign          - [optional] an integer value. Default is Null. Specifies the vertical alignment of the
;				   +						frame's content. See Constants.
;                  $bEditInRead         - [optional] a boolean value. Default is Null. If True, Allows you to edit the contents
;				   +						of a frame in a document that is read-only.
;                  $bPrint              - [optional] a boolean value. Default is Null. If True, Includes the selected item when
;				   +						you print the document.
;                  $iTxtDirection       - [optional] an integer value. Default is Null. Specifies the preferred text flow
;				   +						direction in a frame. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bProtectContent not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bProtectPos not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bProtectSize not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iVertAlign not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 7 Return 0 = $bEditInRead not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bPrint not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $iTxtDirection not an Integer, less than 0 or greater than 5. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $bProtectContent
;				   |								2 = Error setting $bProtectPos
;				   |								4 = Error setting $bProtectSize
;				   |								8 = Error setting $iVertAlign
;				   |								16 = Error setting $bEditInRead
;				   |								32 = Error setting $bPrint
;				   |								64 = Error setting $iTxtDirection
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Vertical Alignment Constants: $LOW_TXT_ADJ_VERT_TOP(0), The top edge of the text is adjusted to the top edge of the Frame.
;								$LOW_TXT_ADJ_VERT_CENTER(1), The text is centered inside the Frame.
;								$LOW_TXT_ADJ_VERT_BOTTOM(2), The bottom edge of the text is adjusted to the bottom edge of the
;									frame.
; Text Direction Constants: $LOW_TXT_DIR_LR_TB(0), — text within lines is written left-to-right. Lines and blocks are placed
;								top-to-bottom. Typically, this is the writing mode for normal "alphabetic" text.
;							$LOW_TXT_DIR_RL_TB(1), — text within a line are written right-to-left. Lines and blocks are placed
;								top-to-bottom. Typically, this writing mode is used in Arabic and Hebrew text.
;							$LOW_TXT_DIR_TB_RL(2), — text within a line is written top-to-bottom. Lines and blocks are placed
;								right-to-left. Typically, this writing mode is used in Chinese and Japanese text.
;							$LOW_TXT_DIR_TB_LR(3), — text within a line is written top-to-bottom. Lines and blocks are placed
;								left-to-right. Typically, this writing mode is used in Mongolian text.
;							$LOW_TXT_DIR_CONTEXT(4)[LibreOffice Default], — obtain actual writing mode from the context of the
;								object.
;							$LOW_TXT_DIR_BT_LR(5), — text within a line is written bottom-to-top. Lines and blocks are placed
;								left-to-right. (LibreOffice 6.3)
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleOptions(ByRef $oFrameStyle, $bProtectContent = Null, $bProtectPos = Null, $bProtectSize = Null, $iVertAlign = Null, $bEditInRead = Null, $bPrint = Null, $iTxtDirection = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOptions[7]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bProtectContent, $bProtectPos, $bProtectSize, $iVertAlign, $bEditInRead, $bPrint, $iTxtDirection) Then
		__LOWriter_ArrayFill($avOptions, $oFrameStyle.ContentProtected(), $oFrameStyle.PositionProtected(), $oFrameStyle.SizeProtected(), _
				$oFrameStyle.TextVerticalAdjust(), $oFrameStyle.EditInReadOnly(), $oFrameStyle.Print(), $oFrameStyle.WritingMode())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOptions)
	EndIf

	If ($bProtectContent <> Null) Then
		If Not IsBool($bProtectContent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrameStyle.ContentProtected = $bProtectContent
		$iError = ($oFrameStyle.ContentProtected() = $bProtectContent) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bProtectPos <> Null) Then
		If Not IsBool($bProtectPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.PositionProtected = $bProtectPos
		$iError = ($oFrameStyle.PositionProtected() = $bProtectPos) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bProtectSize <> Null) Then
		If Not IsBool($bProtectSize) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.SizeProtected = $bProtectSize
		$iError = ($oFrameStyle.SizeProtected() = $bProtectSize) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iVertAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertAlign, $LOW_TXT_ADJ_VERT_TOP, $LOW_TXT_ADJ_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrameStyle.TextVerticalAdjust = $iVertAlign
		$iError = ($oFrameStyle.TextVerticalAdjust() = $iVertAlign) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bEditInRead <> Null) Then
		If Not IsBool($bEditInRead) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrameStyle.EditInReadOnly = $bEditInRead
		$iError = ($oFrameStyle.EditInReadOnly() = $bEditInRead) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bPrint <> Null) Then
		If Not IsBool($bPrint) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrameStyle.Print = $bPrint
		$iError = ($oFrameStyle.Print() = $bPrint) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iTxtDirection <> Null) Then
		If Not __LOWriter_IntIsBetween($iTxtDirection, $LOW_TXT_DIR_LR_TB, $LOW_TXT_DIR_BT_LR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oFrameStyle.WritingMode = $iTxtDirection
		$iError = ($oFrameStyle.WritingMode() = $iTxtDirection) ? $iError : BitOR($iError, 64)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleOptions

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleOrganizer
; Description ...: Set or retrieve the Organizer settings of a Frame Style.
; Syntax ........: _LOWriter_FrameStyleOrganizer(Byref $oDoc, $oFrameStyle[, $sNewFrameStyleName = Null[, $sParentStyle = Null[, $bAutoUpdate = Null[, $bHidden = Null]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $sNewFrameStyleName  - [optional] a string value. Default is Null. The new name to set $sFrameStyle Frame
;				   +						style to.
;                  $sParentStyle        - [optional] a string value. Default is Null. Set an existing Frame style
;				   +						(or an Empty String ("") = - None -) to apply its settings to the current style.
;				   +						Use the other settings to modify the inherited style settings.
;                  $bAutoUpdate         - [optional] a boolean value. Default is Null. If True, Updates the style when you
;				   +						apply direct formatting to a Frame using this style in your document. The
;				   +						formatting of all Frames using this style is automatically updated.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether to hide the style in the UI. Libre
;				   +						4.0 and up Only.
; Return values .:   Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sNewFrameStyleName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sNewFrameStyleName already exists in document.
;				   @Error 1 @Extended 6 Return 0 = $sParentStyle not a String.
;				   @Error 1 @Extended 7 Return 0 = $sParentStyle Doesn't exist in this Document.
;				   @Error 1 @Extended 8 Return 0 = $bAutoUpdate not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $bHidden not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $sNewFrameStyleName
;				   |								2 = Error setting $sParentStyle
;				   |								4 = Error setting $bAutoUpdate
;				   |								8 = Error setting $bHidden
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 or 4 Element Array with values in order of function
;				   +								parameters. If the Libre Office version is below 4.0, the Array will contain
;				   +								3 elements because $bHidden is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_FrameStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleOrganizer(ByRef $oDoc, $oFrameStyle, $sNewFrameStyleName = Null, $sParentStyle = Null, $bAutoUpdate = Null, $bHidden = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOrganizer[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($sNewFrameStyleName, $sParentStyle, $bAutoUpdate, $bHidden) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avOrganizer, $oFrameStyle.Name(), __LOWriter_ParStyleNameToggle($oFrameStyle.ParentStyle(), True), _
					$oFrameStyle.IsAutoUpdate(), $oFrameStyle.Hidden())
		Else
			__LOWriter_ArrayFill($avOrganizer, $oFrameStyle.Name(), __LOWriter_ParStyleNameToggle($oFrameStyle.ParentStyle(), True), _
					$oFrameStyle.IsAutoUpdate())
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOrganizer)
	EndIf

	If ($sNewFrameStyleName <> Null) Then
		If Not IsString($sNewFrameStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If _LOWriter_FrameStyleExists($oDoc, $sNewFrameStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.Name = $sNewFrameStyleName
		$iError = ($oFrameStyle.Name() = $sNewFrameStyleName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sParentStyle <> Null) Then
		If Not IsString($sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If ($sParentStyle <> "") Then
			If Not _LOWriter_FrameStyleExists($oDoc, $sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			$sParentStyle = __LOWriter_ParStyleNameToggle($sParentStyle)
		EndIf
		$oFrameStyle.ParentStyle = $sParentStyle
		$iError = ($oFrameStyle.ParentStyle() = $sParentStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bAutoUpdate <> Null) Then
		If Not IsBool($bAutoUpdate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrameStyle.IsAutoUpdate = $bAutoUpdate
		$iError = ($oFrameStyle.IsAutoUpdate() = $bAutoUpdate) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bHidden <> Null) Then
		If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oFrameStyle.Hidden = $bHidden
		$iError = ($oFrameStyle.Hidden() = $bHidden) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleOrganizer

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleSet
; Description ...: Set a Frame style for a Frame.
; Syntax ........: _LOWriter_FrameStyleSet(ByRef $oDoc, ByRef $oFrameObj, $sFrameStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameObj                - [in/out] an object. A Frame Object from FrameGetByName, or Frame Create.
;                  $sFrameStyle          - a string value. The Frame Style name.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameObj does not support Base Frame Service, not a Frame Object.
;				   @Error 1 @Extended 4 Return 0 = $sFrameStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = Frame Style defined in $sFrameStyle doesn't exist in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Frame Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Frame Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName,
;					_LOWriter_FrameStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleSet(ByRef $oDoc, ByRef $oFrameObj, $sFrameStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameObj.supportsService("com.sun.star.text.BaseFrame") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not _LOWriter_FrameStyleExists($oDoc, $sFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	$oFrameObj.FrameStyleName = $sFrameStyle
	Return ($oFrameObj.FrameStyleName() = $sFrameStyle) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_FrameStyleSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStylesGetNames
; Description ...: Retrieve a list of all Frame Style names available for a document.
; Syntax ........: _LOWriter_FrameStylesGetNames(Byref $oDoc[, $bUserOnly = False[, $bAppliedOnly = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True only User-Created Frame
;				   +						Styles are returned.
;                  $bAppliedOnly        - [optional] a boolean value. Default is False. If True only Applied Frame Styles
;				   +						are returned.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAppliedOnly not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Frame Styles Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 0 = Success. No Frame Styles found according to parameters.
;				   @Error 0 @Extended ? Return Array = Success. An Array containing all Frame Styles matching the input
;				   +		parameters. @Extended contains the count of results returned. If Only a Document object is
;				   +		input, all available Frame styles will be returned. Else if $bUserOnly is set to True, only
;				   +		User-Created Frame Styles are returned. Else, only Applied Frame Styles are returned. If Both are
;				   +		true then only User-Created Frame styles that are applied are returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStylesGetNames(ByRef $oDoc, $bUserOnly = False, $bAppliedOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oStyles
	Local $aStyles[0]
	Local $iCount = 0
	Local $sExecute = ""

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bAppliedOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyles = $oDoc.StyleFamilies.getByName("FrameStyles")
	If Not IsObj($oStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $aStyles[$oStyles.getCount()]

	If Not $bUserOnly And Not $bAppliedOnly Then
		For $i = 0 To $oStyles.getCount() - 1
			$aStyles[$i] = $oStyles.getByIndex($i).DisplayName
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		Return SetError($__LOW_STATUS_SUCCESS, UBound($aStyles), $aStyles)
	EndIf

	$sExecute = ($bUserOnly) ? "($oStyles.getByIndex($i).isUserDefined())" : $sExecute
	$sExecute = ($bUserOnly And $bAppliedOnly) ? ($sExecute & " And ") : $sExecute
	$sExecute = ($bAppliedOnly) ? ($sExecute & "($oStyles.getByIndex($i).isInUse())") : $sExecute

	For $i = 0 To $oStyles.getCount() - 1
		If Execute($sExecute) Then
			$aStyles[$iCount] = $oStyles.getByIndex($i).DisplayName
			$iCount += 1
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next

	ReDim $aStyles[(($iCount > 0) ? ($iCount) : $iCount)]

	Return (UBound($aStyles) = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 0) : SetError($__LOW_STATUS_SUCCESS, UBound($aStyles), $aStyles)
EndFunc   ;==>_LOWriter_FrameStylesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: FrameStyleShadow
; Description ...: Set or Retrieve the shadow settings for a Frame Style.
; Syntax ........: FrameStyleShadow(Byref $oFrameStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Frame Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Frame shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Frame Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Frame Shadow, must
;				   +						be one of the Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving ShadowFormat Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleShadow(ByRef $oFrameStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tShdwFrmt
	Local $iError = 0
	Local $avShadow[4]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tShdwFrmt = $oFrameStyle.ShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Or ($iWidth < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_SHADOW_BOTTOM_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oFrameStyle.ShadowFormat = $tShdwFrmt
	;Error Checking
	$tShdwFrmt = $oFrameStyle.ShadowFormat
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($tShdwFrmt.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($tShdwFrmt.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($tShdwFrmt.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($tShdwFrmt.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleTransparency
; Description ...: Modify or retrieve Transparency settings for a Frame style.
; Syntax ........: _LOWriter_FrameStyleTransparency(Byref $oDoc, $sFrameStyle[, $iTransparency = Null])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iTransparency       - [optional] an integer value. Default is Null. The color transparency. 0% is fully
;				   +						opaque and 100% is fully transparent.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTransparency not an Integer, less than 0 or greater than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iTransparency
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning
;				   +								current setting for Transparency in integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleTransparency(ByRef $oFrameStyle, $iTransparency = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iTransparency) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oFrameStyle.FillTransparence())

	If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oFrameStyle.FillTransparenceGradientName = "" ;Turn of Gradient if it is on, else settings wont be applied.
	$oFrameStyle.FillTransparence = $iTransparency
	$iError = ($oFrameStyle.FillTransparence() = $iTransparency) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleTransparency

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleTransparencyGradient
; Description ...: Modify or retrieve the Frame Style transparency gradient settings.
; Syntax ........: _LOWriter_FrameStyleTransparencyGradient(Byref $oDoc, Byref $oFrameStyle[, $iType = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iStart = Null[, $iEnd = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iType               - [optional] an integer value. Default is Null. The type of transparency gradient that
;				   +							you want to apply. See Constants. Set to $LOW_GRAD_TYPE_OFF to turn Transparency
;				   +							Gradient off.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iStart              - [optional] an integer value. Default is Null. The transparency value for the beginning
;				   +						point of the gradient, where 0% is fully opaque and 100% is fully transparent.
;                  $iEnd                - [optional] an integer value. Default is Null. The transparency value for the endpoint
;				   +						of the gradient, where 0% is fully opaque and 100% is fully transparent.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iType Not an Integer, less than 0 or greater than 5, see constants list.
;				   @Error 1 @Extended 5 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 6 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 7 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 8 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iStart Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 10 Return 0 = $iEnd Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillTransparenceGradient" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.drawing.TransparencyGradientTable" Object.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.awt.Gradient" structure.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iType
;				   |								2 = Error setting $iXCenter
;				   |								4 = Error setting $iYCenter
;				   |								8 = Error setting $iAngle
;				   |								16 = Error setting $iBorder
;				   |								32 = Error setting $iStart
;				   |								64 = Error setting $iEnd
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleTransparencyGradient(ByRef $oDoc, ByRef $oFrameStyle, $iType = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iStart = Null, $iEnd = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $sTGradName
	Local $aiTransparent[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$tStyleGradient = $oFrameStyle.FillTransparenceGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iType, $iXCenter, $iYCenter, $iAngle, $iBorder, $iStart, $iEnd) Then
		__LOWriter_ArrayFill($aiTransparent, $tStyleGradient.Style(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), _
				($tStyleGradient.Angle() / 10), $tStyleGradient.Border(), __LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.StartColor()), _
				__LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.EndColor())) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiTransparent)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oFrameStyle.FillTransparenceGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iStart <> Null) Then
		If Not __LOWriter_IntIsBetween($iStart, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.StartColor = __LOWriter_TransparencyGradientConvert($iStart)
	EndIf

	If ($iEnd <> Null) Then
		If Not __LOWriter_IntIsBetween($iEnd, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.EndColor = __LOWriter_TransparencyGradientConvert($iEnd)
	EndIf

	If ($oFrameStyle.FillTransparenceGradientName() = "") Then
		$sTGradName = __LOWriter_TransparencyGradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oFrameStyle.FillTransparenceGradientName = $sTGradName
		If ($oFrameStyle.FillTransparenceGradientName <> $sTGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oFrameStyle.FillTransparenceGradient = $tStyleGradient

	$iError = ($iType = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.Style() = $iType) ? $iError : BitOR($iError, 1)
	$iError = ($iXCenter = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 2)
	$iError = ($iYCenter = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 4)
	$iError = ($iAngle = Null) ? $iError : (($oFrameStyle.FillTransparenceGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 8)
	$iError = ($iBorder = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.Border() = $iBorder) ? $iError : BitOR($iError, 16)
	$iError = ($iStart = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.StartColor() = __LOWriter_TransparencyGradientConvert($iStart)) ? $iError : BitOR($iError, 32)
	$iError = ($iEnd = Null) ? $iError : ($oFrameStyle.FillTransparenceGradient.EndColor() = __LOWriter_TransparencyGradientConvert($iEnd)) ? $iError : BitOR($iError, 64)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleTransparencyGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStylePosition
; Description ...: Set or Retrieve Frame Style Position Settings.
; Syntax ........: _LOWriter_FrameStylePosition(Byref $oFrameStyle[, $iHorAlign = Null[, $iHorPos = Null[, $iHorRelation = Null[, $bMirror = Null[, $iVertAlign = Null[, $iVertPos = Null[, $iVertRelation = Null[,  $bKeepInside = Null[, $iAnchorPos = Null]]]]]]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iHorAlign           - [optional] an integer value. Default is Null. The horizontal orientation of the Frame.
;				   +							See Constants below. Can't be set if Anchor position is set to "As Character".
;                  $iHorPos             - [optional] an integer value. Default is Null. The horizontal position of the Frame. set
;				   +							in Micrometer(uM). Only valid if $iHorAlign is set to $LOW_ORIENT_HORI_NONE().
;                  $iHorRelation        - [optional] an integer value. Default is Null. The reference point for the selected
;				   +							horizontal alignment option. See Constants below, and Remarks for acceptable
;				   +							values.
;                  $bMirror             - [optional] a boolean value. Default is Null. If True, Reverses the current horizontal
;				   +							alignment settings on even pages.
;                  $iVertAlign          - [optional] an integer value. Default is Null. The vertical orientation of the Frame.
;				   +							See Constants below.
;                  $iVertPos            - [optional] an integer value. Default is Null. The vertical position of the Frame. set
;				   +							in Micrometer(uM). Only valid if $iVertAlign is set to $LOW_ORIENT_VERT_NONE().
;                  $iVertRelation       - [optional] an integer value. Default is Null. The reference point for the selected
;				   +							vertical alignment option. See Constants below, and Remarks for acceptable
;				   +							values.
;                  $bKeepInside         - [optional] a boolean value. Default is Null. If True, Keeps the frame within the
;				   +							layout boundaries of the text that the frame is anchored to.
;                  $iAnchorPos          - [optional] an integer value. Default is Null. Specify the anchoring options for the
;				   +							frame style. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iHorAlign Not an Integer, or less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iHorPos not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iHorRelation not an Integer, or less than 0 or greater than 8. See
;				   +									Constants.
;				   @Error 1 @Extended 6 Return 0 = $bMirror not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iVertAlign not an integer, or less than 0 or greater than 9. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iVertPos not an integer.
;				   @Error 1 @Extended 9 Return 0 = $iVertRelation Not an Integer, Less than -1 or greater than 9. See Constants.
;				   @Error 1 @Extended 10 Return 0 = $bKeepInside not a Boolean.
;				   @Error 1 @Extended 11 Return 0 = $iAnchorPos not an Integer, or less than 0 or greater than 4, or equal to 3.
;				   +									See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $iHorAlign
;				   |								2 = Error setting $iHorPos
;				   |								4 = Error setting $iHorRelation
;				   |								8 = Error setting $bMirror
;				   |								16 = Error setting $iVertAlign
;				   |								32 = Error setting $iVertPos
;				   |								64 = Error setting $iVertRelation
;				   |								128 = Error setting $bKeepInside
;				   |								256 = Error setting $iAnchorPos
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 9 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$iHorRelation has varying acceptable values, depending on the current Anchor position and also the current
;							$iHorAlign setting. The Following is a list of acceptable values per anchor position.
;						$LOW_ANCHOR_AT_PARAGRAPH(0) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0),
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_LEFT (5),
;							$LOW_RELATIVE_PARAGRAPH_RIGHT (6),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AS_CHARACTER(1) Accepts No $iHorRelation Values.
;						$LOW_ANCHOR_AT_PAGE(2) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AT_CHARACTER(4) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0),
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_CHARACTER (2),
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_LEFT (5),
;							$LOW_RELATIVE_PARAGRAPH_RIGHT (6),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;					$iVertRelation has varying acceptable values, depending on the current Anchor position. The Following is a
;							list of acceptable values per anchor position.
;						$LOW_ANCHOR_AT_PARAGRAPH(0) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0)[The Same as "Margin" in L.O. UI],
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AS_CHARACTER(1) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_ROW(-1),
;							$LOW_RELATIVE_PARAGRAPH (0)[The Same as "Baseline" in L.O. UI],
;							$LOW_RELATIVE_CHARACTER (2),
;						$LOW_ANCHOR_AT_PAGE(2) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AT_CHARACTER(4) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0)[The same as "Margin" in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_CHARACTER (2),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;							$LOW_RELATIVE_TEXT_LINE (9)[The same as "Line of Text" in L.O. UI]
;Horizontal Alignment Constants: $LOW_ORIENT_HORI_NONE(0), no hard alignment is applied. Equal to "From Left" in L.O. UI.
;								 $LOW_ORIENT_HORI_RIGHT(1), The frame is aligned at the right side.
;								 $LOW_ORIENT_HORI_CENTER(2), The frame is aligned at the middle.
;								 $LOW_ORIENT_HORI_LEFT(3), The frame is aligned at the left side.
;Vertical Alignment Constants: $LOW_ORIENT_VERT_NONE(0), no hard alignment. The same as "From Top"/From Bottom" in L.O. UI, the
;									only difference is the combination setting of $iVertRelation.
;								$LOW_ORIENT_VERT_TOP(1), aligned at the top.
;								$LOW_ORIENT_VERT_CENTER(2), aligned at the center.
;								$LOW_ORIENT_VERT_BOTTOM(3), aligned at the bottom.
;								$LOW_ORIENT_VERT_CHAR_TOP(4), aligned at the top of a character. Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Top, and "To" = Character.
;								$LOW_ORIENT_VERT_CHAR_CENTER(5), aligned at the center of a character. Available only when
;									anchor is set to "As character". Equal to L.O. UI setting of "Vertical" = Center, and "To" =
;									Character.
;								$LOW_ORIENT_VERT_CHAR_BOTTOM(6), aligned at the bottom of a character. Available only when
;									anchor is set to "As character". Equal to L.O. UI setting of "Vertical" = Bottom, and "To" =
;									Character.
;								$LOW_ORIENT_VERT_LINE_TOP(7), aligned at the top of the line Available only when anchor is set
;									to "As character". Equal to L.O. UI setting of "Vertical" = Top, and "To" = Row.
;								$LOW_ORIENT_VERT_LINE_CENTER(8), aligned at the center of the line Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Center, and "To" = Row.
;								$LOW_ORIENT_VERT_LINE_BOTTOM(9), aligned at the bottom of the line Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Bottom, and "To" = Row.
;Relation Constants: $LOW_RELATIVE_ROW(-1), This option will position the frame considering the height of the row where the
;							anchor is placed.
;						$LOW_RELATIVE_PARAGRAPH (0), [For Horizontal Relation:] the frame is positioned considering the whole
;							width available for the paragraph, including indent spaces.[For Vertical Relation:]
;							{$LOW_RELATIVE_PARAGRAPH is Also called "Margin" or "Baseline" in L.O. UI], Depending on the
;							anchoring type, the frame is positioned considering the space between the top margin and the
;							character ("To character"
;							anchoring) or bottom edge of the paragraph ("To paragraph" anchoring) where the anchor is placed. Or
;							will position the frame considering the text baseline over which all characters are placed. ("As
;							Character" anchoring.)
;						$LOW_RELATIVE_PARAGRAPH_TEXT (1), [For Horizontal Relation:] the frame is positioned considering the
;							whole width available for text in the paragraph, excluding indent spaces.
;							[$LOW_RELATIVE_PARAGRAPH_TEXT for Vertical relation:] the frame is positioned considering the height
;							of the paragraph where the anchor is placed.
;						$LOW_RELATIVE_CHARACTER (2), [For Horizontal Relation:] the frame is positioned considering the
;							horizontal space used by the character. [$LOW_RELATIVE_CHARACTER for Vertical relation:] the frame
;							is positioned considering the vertical space used by the character.
;						$LOW_RELATIVE_PAGE_LEFT (3),[For Horizontal Relation:], the frame is positioned considering the space
;							available between the left page border and the left paragraph border. [Same as Left Page Border in
;							L.O. UI]
;						$LOW_RELATIVE_PAGE_RIGHT (4),[For Horizontal Relation:], the frame is positioned considering the space
;							available between the Right page border and the right paragraph border. [Same as Left Page Border in
;							L.O. UI]
;						$LOW_RELATIVE_PARAGRAPH_LEFT (5),[For Horizontal Relation:] the frame is positioned considering the
;							width of the indent space available to the left of the paragraph.
;						$LOW_RELATIVE_PARAGRAPH_RIGHT (6),[For Horizontal Relation:], the frame is positioned considering the
;							width of the indent space available to the right of the paragraph.
;						$LOW_RELATIVE_PAGE (7),[For Horizontal Relation:], the frame is positioned considering the whole width
;							 of the page, from the left to the right page borders. [$LOW_RELATIVE_PAGE for Vertical relation:],
;							 the frame is positioned considering the full page height, from top to bottom page borders.
;						$LOW_RELATIVE_PAGE_PRINT (8),[For Horizontal Relation:], [Same as Page Text Area in L.O. UI] the frame
;							is positioned considering the whole width available for text in the page, from the left to the right
;							page margins. [$LOW_RELATIVE_PAGE_PRINT for Vertical relation:], the frame is positioned considering
;							the full height available for text, from top to bottom margins.
;						$LOW_RELATIVE_TEXT_LINE (9),[For Vertical relation:], the frame is positioned considering the height of
;							 the line of text where the anchor is placed.
;Anchor Constants: $LOW_ANCHOR_AT_PARAGRAPH(0), Anchors the frame to the current paragraph.
;					$LOW_ANCHOR_AS_CHARACTER(1), Anchors the frame as character. The height of the current line is resized to
;						match the height of the selection.
;					$LOW_ANCHOR_AT_PAGE(2), Anchors the frame to the current page.
;					$LOW_ANCHOR_AT_CHARACTER(4), Anchors the frame to a character.
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleTypePosition(ByRef $oFrameStyle, $iHorAlign = Null, $iHorPos = Null, $iHorRelation = Null, $bMirror = Null, $iVertAlign = Null, $iVertPos = Null, $iVertRelation = Null, $bKeepInside = Null, $iAnchorPos = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iCurrentAnchor
	Local $avPosition[9]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iHorAlign, $iHorPos, $iHorRelation, $bMirror, $iVertAlign, $iVertPos, $iVertRelation, $bKeepInside, _
			$iAnchorPos) Then
		__LOWriter_ArrayFill($avPosition, $oFrameStyle.HoriOrient(), $oFrameStyle.HoriOrientPosition(), $oFrameStyle.HoriOrientRelation(), _
				$oFrameStyle.PageToggle(), $oFrameStyle.VertOrient(), $oFrameStyle.VertOrientPosition(), $oFrameStyle.VertOrientRelation(), _
				$oFrameStyle.IsFollowingTextFlow(), $oFrameStyle.AnchorType())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPosition)
	EndIf
	;Accepts HoriOrient Left,Right, Center, and "None" = "From Left"
	If ($iHorAlign <> Null) Then ;Cant be set if Anchor is set to "As Char"
		If Not __LOWriter_IntIsBetween($iHorAlign, $LOW_ORIENT_HORI_NONE, $LOW_ORIENT_HORI_LEFT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrameStyle.HoriOrient = $iHorAlign
		$iError = ($oFrameStyle.HoriOrient() = $iHorAlign) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iHorPos <> Null) Then
		If Not IsInt($iHorPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.HoriOrientPosition = $iHorPos
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.HoriOrientPosition(), $iHorPos - 1, $iHorPos + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iHorRelation <> Null) Then
		If Not __LOWriter_IntIsBetween($iHorRelation, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PAGE_PRINT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.HoriOrientRelation = $iHorRelation
		$iError = ($oFrameStyle.HoriOrientRelation() = $iHorRelation) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bMirror <> Null) Then
		If Not IsBool($bMirror) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrameStyle.PageToggle = $bMirror
		$iError = ($oFrameStyle.PageToggle() = $bMirror) ? $iError : BitOR($iError, 8)
	EndIf

	;Accepts Orient Top,Bottom, Center, and "None" = "From Top"/From Bottom, plus Row and Char.
	If ($iVertAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertAlign, $LOW_ORIENT_VERT_NONE, $LOW_ORIENT_VERT_LINE_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrameStyle.VertOrient = $iVertAlign
		$iError = ($oFrameStyle.VertOrient() = $iVertAlign) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iVertPos <> Null) Then
		If Not IsInt($iVertPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrameStyle.VertOrientPosition = $iVertPos
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.VertOrientPosition(), $iVertPos - 1, $iVertPos + 1)) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iVertRelation <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertRelation, $LOW_RELATIVE_ROW, $LOW_RELATIVE_TEXT_LINE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$iCurrentAnchor = (($iAnchorPos <> Null) ? $iAnchorPos : $oFrameStyle.AnchorType())

		;Libre Office is a bit complex in this anchor setting; When set to "As Character", there aren't specific setting values
		;for "Baseline, "Character" and "Row", But For Baseline the VertOrientRelation value is 0, or "$LOW_RELATIVE_PARAGRAPH",
		;For "Character", The VertOrientRelation value is still 0, and the "VertOrient" value (In the L.O. UI the furthest left
		;drop down box) is modified, which can be either $LOW_ORIENT_VERT_CHAR_TOP(1), $LOW_ORIENT_VERT_CHAR_CENTER(2),
		;$LOW_ORIENT_VERT_CHAR_BOTTOM(3), depending on the current value of Top, Bottom and Center, or "From Bottom"/
		;"From Top", of "VertOrient". The same is true For "Row", which means when the anchor is set to "As Character", I need
		;to first determine the desired user setting, $LOW_RELATIVE_ROW(-1), $LOW_RELATIVE_PARAGRAPH(0), or
		;$LOW_RELATIVE_CHARACTER(2), and then determine the current "VertOrient" setting, and then manually set the value to the
		;correct setting. Such as Line_Top, Line_Bottom etc.

		If ($iCurrentAnchor = $LOW_ANCHOR_AS_CHARACTER) Then

			If ($iVertRelation = $LOW_RELATIVE_ROW) Then
				Switch $oFrameStyle.VertOrient()
					Case $LOW_ORIENT_VERT_NONE ; None = "From Bottom or From Top in L.O. UI
						$iError = BitOR($iError, 64) ; -- Row not accepted with this VertOrient Setting.
					Case $LOW_ORIENT_VERT_TOP, $LOW_ORIENT_VERT_CHAR_TOP, $LOW_ORIENT_VERT_LINE_TOP
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_LINE_TOP
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_LINE_TOP)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_CENTER, $LOW_ORIENT_VERT_CHAR_CENTER, $LOW_ORIENT_VERT_LINE_CENTER
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_LINE_CENTER
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_LINE_CENTER)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_BOTTOM, $LOW_ORIENT_VERT_CHAR_BOTTOM, $LOW_ORIENT_VERT_LINE_BOTTOM
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_LINE_BOTTOM
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_LINE_BOTTOM)) ? $iError : BitOR($iError, 64)
				EndSwitch

			ElseIf ($iVertRelation = $LOW_RELATIVE_PARAGRAPH) Then ;Paragraph = Baseline setting in L.O. UI
				$oFrameStyle.VertOrientRelation = $iVertRelation ;Paragraph = Baseline in this case
				$iError = (($oFrameStyle.VertOrientRelation() = $iVertRelation)) ? $iError : BitOR($iError, 64)
			ElseIf ($iVertRelation = $LOW_RELATIVE_CHARACTER) Then
				Switch $oFrameStyle.VertOrient()
					Case $LOW_ORIENT_VERT_NONE ; None = "From Bottom or From Top in L.O. UI
						$iError = BitOR($iError, 64) ; -- Character not accepted with this VertOrient Setting.
					Case $LOW_ORIENT_VERT_TOP, $LOW_ORIENT_VERT_CHAR_TOP, $LOW_ORIENT_VERT_LINE_TOP
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_CHAR_TOP
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_CHAR_TOP)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_CENTER, $LOW_ORIENT_VERT_CHAR_CENTER, $LOW_ORIENT_VERT_LINE_CENTER
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_CHAR_CENTER
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_CHAR_CENTER)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_BOTTOM, $LOW_ORIENT_VERT_CHAR_BOTTOM, $LOW_ORIENT_VERT_LINE_BOTTOM
						$oFrameStyle.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrameStyle.VertOrient = $LOW_ORIENT_VERT_CHAR_BOTTOM
						$iError = (($oFrameStyle.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrameStyle.VertOrient() = $LOW_ORIENT_VERT_CHAR_BOTTOM)) ? $iError : BitOR($iError, 64)
				EndSwitch
			EndIf

		Else
			$oFrameStyle.VertOrientRelation = $iVertRelation
			$iError = ($oFrameStyle.VertOrientRelation() = $iVertRelation) ? $iError : BitOR($iError, 64)
		EndIf
	EndIf

	If ($bKeepInside <> Null) Then
		If Not IsBool($bKeepInside) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oFrameStyle.IsFollowingTextFlow = $bKeepInside
		$iError = ($oFrameStyle.IsFollowingTextFlow() = $bKeepInside) ? $iError : BitOR($iError, 128)
	EndIf

	If ($iAnchorPos <> Null) Then
		If Not __LOWriter_IntIsBetween($iAnchorPos, $LOW_ANCHOR_AT_PARAGRAPH, $LOW_ANCHOR_AT_CHARACTER, $LOW_ANCHOR_AT_FRAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oFrameStyle.AnchorType = $iAnchorPos
		$iError = ($oFrameStyle.AnchorType() = $iAnchorPos) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleTypePosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleSize
; Description ...: Set or Retrieve Frame Style Size related settings.
; Syntax ........: _LOWriter_FrameStyleTypeSize(Byref $oDoc, Byref $oFrameStyle[, $iWidth = Null[, $iRelativeWidth = Null[, $iWidthRelativeTo = Null[, $bAutoWidth = Null[, $iHeight = Null[, $iRelativeHeight = Null[, $iHeightRelativeTo = Null[, $bAutoHeight = Null[, $bKeepRatio = Null]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the Frame, in
;				   +						Micrometers(uM). Min. 51.
;                  $iRelativeWidth      - [optional] an integer value. Default is Null. Calculates the width of the frame as a
;				   +						percentage of the width of the page text area. Min. 0 (off). Max 254.
;                  $iWidthRelativeTo    - [optional] an integer value. Default is Null. Decides what 100% width means: either
;				   +						text area (excluding margins) or the entire page (including margins). See Constants.
;				   +						Libre Office 4.3 and Up.
;                  $bAutoWidth          - [optional] a boolean value. Default is Null. Automatically adjusts the width of a
;				   +						frame to match the contents of the frame. $iWidth becomes the minimum width the
;				   +						frame must be.
;                  $iHeight             - [optional] an integer value. Default is Null. The height that you want for the Frame,
;				   +						in Micrometers(uM). Min. 51.
;                  $iRelativeHeight     - [optional] an integer value. Default is Null. Calculates the Height of the frame as a
;				   +						percentage of the Height of the page text area. Min. 0 (off). Max 254.
;                  $iHeightRelativeTo   - [optional] an integer value. Default is Null. Decides what 100% Height means: either
;				   +						text area (excluding margins) or the entire page (including margins). See Constants.
;				   +						Libre Office 4.3 and Up.
;                  $bAutoHeight         - [optional] a boolean value. Default is Null. Automatically adjusts the height of a
;				   +						frame to match the contents of the frame. $iHeight becomes the minimum height the
;				   +						frame must be.
;                  $bKeepRatio          - [optional] a boolean value. Default is Null. Maintains the height and width ratio
;				   +						when you change the width or the height setting.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iWidth Not an Integer, or less than 51.
;				   @Error 1 @Extended 5 Return 0 = $iRelativeWidth not an Integer, less than 0 or greater than 254.
;				   @Error 1 @Extended 6 Return 0 = $iWidthRelativeTo not an Integer, not equal to 0 and not equal to 7. See
;				   +									Constants.
;				   @Error 1 @Extended 7 Return 0 = $bAutoWidth not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $iHeight Not an Integer, or less than 51.
;				   @Error 1 @Extended 9 Return 0 = $iRelativeHeight not an Integer, less than 0 or greater than 254.
;				   @Error 1 @Extended 10 Return 0 =$iHeightRelativeTo not an Integer, not equal to 0 and not equal to 7. See
;				   +									Constants.
;				   @Error 1 @Extended 11 Return 0 = $bAutoHeight not a Boolean.
;				   @Error 1 @Extended 12 Return 0 = $bKeepRatio not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iRelativeWidth
;				   |								4 = Error setting $iWidthRelativeTo
;				   |								8 = Error setting $bAutoWidth
;				   |								16 = Error setting $iHeight
;				   |								32 = Error setting $iRelativeHeight
;				   |								64 = Error setting $iHeightRelativeTo
;				   |								128 = Error setting $bAutoHeight
;				   |								256 = Error setting $bKeepRatio
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.3.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 or 9 Element Array depending on current Libre Office
;				   +								Version, If the current Libre Office version is greater or equal to than
;				   +								4.3, then a 9 element Array is returned, else 7 element array with both
;				   +								$iWidthRelativeTo and $iHeightRelativeTo skipped. Array Element values will
;				   +								be in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					This function can successfully set "Keep Ratio" however when the user changes this setting in the UI, for
;						some reason the applicable setting values are not updated, so this function may return incorrect
;						values for "Keep Ratio".
;					When Keep Ratio is set to True, setting Width/Height values via this function will not be kept in ratio.
;Relative Constants: $LOW_RELATIVE_PARAGRAPH(0), means: text area (excluding margins).
;						$LOW_RELATIVE_PAGE(7), means: entire page (including margins).
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleTypeSize(ByRef $oDoc, ByRef $oFrameStyle, $iWidth = Null, $iRelativeWidth = Null, $iWidthRelativeTo = Null, $bAutoWidth = Null, $iHeight = Null, $iRelativeHeight = Null, $iHeightRelativeTo = Null, $bAutoHeight = Null, $bKeepRatio = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avSize[7]
	Local Const $iCONST_AutoHW_OFF = 1, $iCONST_AutoHW_ON = 2

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($iWidth, $iRelativeWidth, $iWidthRelativeTo, $bAutoWidth, $iHeight, $iRelativeHeight, $iHeightRelativeTo, _
			$bAutoHeight, $bKeepRatio) Then
		If __LOWriter_VersionCheck(4.3) Then
			__LOWriter_ArrayFill($avSize, $oFrameStyle.Width(), $oFrameStyle.RelativeWidth(), $oFrameStyle.RelativeWidthRelation(), _
					($oFrameStyle.WidthType() = $iCONST_AutoHW_ON) ? True : False, $oFrameStyle.Height(), $oFrameStyle.RelativeHeight(), _
					$oFrameStyle.RelativeHeightRelation(), ($oFrameStyle.SizeType() = $iCONST_AutoHW_ON) ? True : False, _
					(($oFrameStyle.IsSyncHeightToWidth() And $oFrameStyle.IsSyncWidthToHeight()) ? True : False))
		Else
			__LOWriter_ArrayFill($avSize, $oFrameStyle.Width(), $oFrameStyle.RelativeWidth(), _
					($oFrameStyle.WidthType() = $iCONST_AutoHW_ON) ? True : False, $oFrameStyle.Height(), _
					$oFrameStyle.RelativeHeight(), ($oFrameStyle.SizeType() = $iCONST_AutoHW_ON) ? True : False, _
					(($oFrameStyle.IsSyncHeightToWidth() And $oFrameStyle.IsSyncWidthToHeight()) ? True : False))
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avSize)
	EndIf

	If ($iWidth <> Null) Then ;Min 51
		If Not __LOWriter_IntIsBetween($iWidth, 51, $iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.Width = $iWidth
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRelativeWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iRelativeWidth, 0, 254) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.RelativeWidth = $iRelativeWidth
		$iError = ($oFrameStyle.RelativeWidth() = $iRelativeWidth) ? $iError : BitOR($iError, 2)

		If ($iRelativeWidth <> 0) And ($bAutoWidth <> True) Then ;If AutoWidth is not On, and Relative Width isn't being turned off, then set Width Value.
			If ($oFrameStyle.WidthType() = $iCONST_AutoHW_OFF) Or ($bAutoWidth = False) Then __LOWriter_FrameRelativeSize($oDoc, $oFrameStyle, True)
		EndIf
	EndIf

	If ($iWidthRelativeTo <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidthRelativeTo, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PARAGRAPH, "", $LOW_RELATIVE_PAGE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not __LOWriter_VersionCheck(4.3) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oFrameStyle.RelativeWidthRelation = $iWidthRelativeTo
		$iError = ($oFrameStyle.RelativeWidthRelation() = $iWidthRelativeTo) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bAutoWidth <> Null) Then
		If Not IsBool($bAutoWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrameStyle.WidthType = ($bAutoWidth) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF
		$iError = ($oFrameStyle.WidthType() = (($bAutoWidth) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 51, $iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrameStyle.Height = $iHeight
		$iError = ($oFrameStyle.Height() = $iHeight) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iRelativeHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRelativeHeight, 0, 254) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oFrameStyle.RelativeHeight = $iRelativeHeight
		$iError = ($oFrameStyle.RelativeHeight() = $iRelativeHeight) ? $iError : BitOR($iError, 32)

		If ($iRelativeHeight <> 0) And ($bAutoHeight <> True) Then ;If AutoHeight is not On, and Relative Height isn't being turned off, then set Height Value.
			If ($oFrameStyle.SizeType() = $iCONST_AutoHW_OFF) Or ($bAutoHeight = False) Then __LOWriter_FrameRelativeSize($oDoc, $oFrameStyle, False, True)
		EndIf
	EndIf

	If ($iHeightRelativeTo <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeightRelativeTo, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PARAGRAPH, "", $LOW_RELATIVE_PAGE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		If Not __LOWriter_VersionCheck(4.3) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oFrameStyle.RelativeHeightRelation = $iHeightRelativeTo
		$iError = ($oFrameStyle.RelativeHeightRelation() = $iHeightRelativeTo) ? $iError : BitOR($iError, 64)
	EndIf

	If ($bAutoHeight <> Null) Then
		If Not IsBool($bAutoHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oFrameStyle.SizeType = ($bAutoHeight) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF
		$iError = ($oFrameStyle.SizeType = (($bAutoHeight) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF)) ? $iError : BitOR($iError, 128)
	EndIf

	If ($bKeepRatio <> Null) Then
		If Not IsBool($bKeepRatio) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$oFrameStyle.IsSyncHeightToWidth = $bKeepRatio
		$oFrameStyle.IsSyncWidthToHeight = $bKeepRatio
		$iError = (($oFrameStyle.IsSyncHeightToWidth() = $bKeepRatio) And ($oFrameStyle.IsSyncWidthToHeight() = $bKeepRatio)) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleTypeSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleWrap
; Description ...: Set or Retrieve Frame Style Wrap and Spacing settings.
; Syntax ........: _LOWriter_FrameStyleWrap(Byref $oFrameStyle[, $iWrapType = Null[, $iLeft = Null[, $iRight = Null[, $iTop = Null[, $iBottom = Null]]]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $iWrapType           - [optional] an integer value. Default is Null. The way you want text to wrap around the
;				   +						frame. See Constants.
;                  $iLeft               - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the left edge of the frame and the text. Set in Micrometers.
;                  $iRight              - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Right edge of the frame and the text. Set in Micrometers.
;                  $iTop                - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Top edge of the frame and the text. Set in Micrometers.
;                  $iBottom             - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Bottom edge of the frame and the text. Set in Micrometers.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWrapType not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iBottom not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Property Set Info Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iWrapType
;				   |								2 = Error setting $iLeft
;				   |								4 = Error setting $iRight
;				   |								8 = Error setting $iTop
;				   |								16 = Error setting $iBottom
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Wrap Type Constants:  $LOW_WRAP_MODE_NONE(0), Places the frame on a separate line in the document.
;						$LOW_WRAP_MODE_THROUGH(1), Places the frame in front of the text.
;						$LOW_WRAP_MODE_PARALLEL(2), Wraps text on all four sides of the border frame of the frame.
;						$LOW_WRAP_MODE_DYNAMIC(3), the same as "Optimal", Automatically wraps text to the left, to the right, or
;								on all four sides of the border frame of the frame.
;						$LOW_WRAP_MODE_LEFT(4), the same as "Before", Wraps text on the left side of the frame.
;						$LOW_WRAP_MODE_RIGHT(5), the same as "After", Wraps text on the right side of the frame.
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleWrap(ByRef $oFrameStyle, $iWrapType = Null, $iLeft = Null, $iRight = Null, $iTop = Null, $iBottom = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPropInfo
	Local $iError = 0
	Local $avWrap[5]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oPropInfo = $oFrameStyle.getPropertySetInfo()
	If Not IsObj($oPropInfo) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWrapType, $iLeft, $iRight, $iTop, $iBottom) Then

		If $oPropInfo.hasPropertyByName("Surround") Then ;Surround is marked as deprecated, but there is no indication of what version of L.O. this occurred. So Test for its existence.
			__LOWriter_ArrayFill($avWrap, $oFrameStyle.Surround(), $oFrameStyle.LeftMargin(), $oFrameStyle.RightMargin(), $oFrameStyle.TopMargin(), _
					$oFrameStyle.BottomMargin())
		Else
			__LOWriter_ArrayFill($avWrap, $oFrameStyle.TextWrap(), $oFrameStyle.LeftMargin(), $oFrameStyle.RightMargin(), $oFrameStyle.TopMargin(), _
					$oFrameStyle.BottomMargin())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avWrap)
	EndIf

	If ($iWrapType <> Null) Then
		If Not __LOWriter_IntIsBetween($iWrapType, $LOW_WRAP_MODE_NONE, $LOW_WRAP_MODE_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If $oPropInfo.hasPropertyByName("Surround") Then $oFrameStyle.Surround = $iWrapType
		If $oPropInfo.hasPropertyByName("TextWrap") Then $oFrameStyle.TextWrap = $iWrapType
		If $oPropInfo.hasPropertyByName("Surround") Then
			$iError = ($oFrameStyle.Surround() = $iWrapType) ? $iError : BitOR($iError, 1)
		Else
			$iError = ($oFrameStyle.TextWrap() = $iWrapType) ? $iError : BitOR($iError, 1)
		EndIf
	EndIf

	If ($iLeft <> Null) Then
		If Not IsInt($iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.LeftMargin = $iLeft
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.LeftMargin(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iRight <> Null) Then
		If Not IsInt($iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.RightMargin = $iRight
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.RightMargin(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iTop <> Null) Then
		If Not IsInt($iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrameStyle.TopMargin = $iTop
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.TopMargin(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iBottom <> Null) Then
		If Not IsInt($iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrameStyle.BottomMargin = $iBottom
		$iError = (__LOWriter_IntIsBetween($oFrameStyle.BottomMargin(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleWrap

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameStyleWrapOptions
; Description ...: Set or Retrieve Frame Style Wrap Options.
; Syntax ........: _LOWriter_FrameStyleWrapOptions(Byref $oFrameStyle[, $bFirstPar = Null[, $bInBackground = Null[, $bAllowOverlap = Null]]])
; Parameters ....: $oFrameStyle           - [in/out] an object. A Frame Style object returned by previous FrameStyle Create or
;				   +						Object Retrieval function.
;                  $bFirstPar           - [optional] a boolean value. Default is Null. If True, Starts a new paragraph below
;				   +						the Frame.
;                  $bInBackground       - [optional] a boolean value. Default is Null. If True, Moves the selected Frame to the
;				   +						background. This option is only available with the "Through" wrap type.
;                  $bAllowOverlap       - [optional] a boolean value. Default is Null. If True, the Frame is allowed to
;				   +						overlap another Frame. This option has no effect on wrap through Frames, which
;				   +						can always overlap.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrameStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrameStyle not a Frame Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bFirstPar not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bInBackground not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bAllowOverlap not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bFirstPar
;				   |								2 = Error setting $bInBackground
;				   |								4 = Error setting $bAllowOverlap
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					This function may indicate the settings were set successfully when they haven't been if the appropriate
;						wrap type, anchor type etc. hasn't been set before hand.
; Related .......:  _LOWriter_FrameStyleCreate, _LOWriter_FrameStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameStyleWrapOptions(ByRef $oFrameStyle, $bFirstPar = Null, $bInBackground = Null, $bAllowOverlap = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $abWrapOptions[3]

	If Not IsObj($oFrameStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oFrameStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bFirstPar, $bInBackground, $bAllowOverlap) Then
		__LOWriter_ArrayFill($abWrapOptions, $oFrameStyle.SurroundAnchorOnly(), (($oFrameStyle.Opaque()) ? False : True), _
				$oFrameStyle.AllowOverlap()) ;Opaque/Background is False when InBackground is checked, so switch Boolean values around.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $abWrapOptions)
	EndIf

	If ($bFirstPar <> Null) Then
		If Not IsBool($bFirstPar) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrameStyle.SurroundAnchorOnly = $bFirstPar
		$iError = ($oFrameStyle.SurroundAnchorOnly() = $bFirstPar) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bInBackground <> Null) Then
		If Not IsBool($bInBackground) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrameStyle.Opaque = (($bInBackground) ? False : True)
		$iError = ($oFrameStyle.Opaque() = (($bInBackground) ? False : True)) ? $iError : BitOR($iError, 2) ;Opaque/Background is False when InBackground is checked, so switch Boolean values around.
	EndIf

	If ($bAllowOverlap <> Null) Then
		If Not IsBool($bAllowOverlap) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrameStyle.AllowOverlap = $bAllowOverlap
		$iError = ($oFrameStyle.AllowOverlap() = $bAllowOverlap) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameStyleWrapOptions

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameTransparency
; Description ...:  Set or retrieve Transparency settings for a Frame.
; Syntax ........: _LOWriter_FrameTransparency(Byref $oFrame[, $iTransparency = Null])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +					Retrieval function.
;                  $iTransparency       - [optional] an integer value. Default is Null. The color transparency. 0% is fully
;				   +					opaque and 100% is fully transparent.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTransparency not an Integer, less than 0 or greater than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iTransparency
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning
;				   +								current setting for Transparency in integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameTransparency(ByRef $oFrame, $iTransparency = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iTransparency) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oFrame.FillTransparence())

	If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oFrame.FillTransparenceGradientName = "" ;Turn of Gradient if it is on, else settings wont be applied.
	$oFrame.FillTransparence = $iTransparency
	$iError = ($oFrame.FillTransparence() = $iTransparency) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameTransparency

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameTransparencyGradient
; Description ...:  Set or retrieve the Frame transparency gradient settings.
; Syntax ........: _LOWriter_FrameTransparencyGradient(Byref $oDoc, Byref $oFrame[, $iType = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iStart = Null[, $iEnd = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iType               - [optional] an integer value. Default is Null. The type of transparency gradient that
;				   +							you want to apply. See Constants. Set to $LOW_GRAD_TYPE_OFF to turn Transparency
;				   +							Gradient off.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iStart              - [optional] an integer value. Default is Null. The transparency value for the beginning
;				   +						point of the gradient, where 0% is fully opaque and 100% is fully transparent.
;                  $iEnd                - [optional] an integer value. Default is Null. The transparency value for the endpoint
;				   +						of the gradient, where 0% is fully opaque and 100% is fully transparent.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 3 Return 0 = $iType Not an Integer, less than 0 or greater than 5, see constants list.
;				   @Error 1 @Extended 4 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 5 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 6 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 7 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iStart Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iEnd Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillTransparenceGradient" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.drawing.TransparencyGradientTable" Object.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.awt.Gradient" structure.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iType
;				   |								2 = Error setting $iXCenter
;				   |								4 = Error setting $iYCenter
;				   |								8 = Error setting $iAngle
;				   |								16 = Error setting $iBorder
;				   |								32 = Error setting $iStart
;				   |								64 = Error setting $iEnd
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameTransparencyGradient(ByRef $oDoc, ByRef $oFrame, $iType = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iStart = Null, $iEnd = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tGradient
	Local $sTGradName
	Local $iError = 0
	Local $aiTransparent[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tGradient = $oFrame.FillTransparenceGradient()
	If Not IsObj($tGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iType, $iXCenter, $iYCenter, $iAngle, $iBorder, $iStart, $iEnd) Then
		__LOWriter_ArrayFill($aiTransparent, $tGradient.Style(), $tGradient.XOffset(), $tGradient.YOffset(), _
				($tGradient.Angle() / 10), $tGradient.Border(), __LOWriter_TransparencyGradientConvert(Null, $tGradient.StartColor()), _
				__LOWriter_TransparencyGradientConvert(Null, $tGradient.EndColor())) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiTransparent)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oFrame.FillTransparenceGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tGradient.Style = $iType
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tGradient.Border = $iBorder
	EndIf

	If ($iStart <> Null) Then
		If Not __LOWriter_IntIsBetween($iStart, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tGradient.StartColor = __LOWriter_TransparencyGradientConvert($iStart)
	EndIf

	If ($iEnd <> Null) Then
		If Not __LOWriter_IntIsBetween($iEnd, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tGradient.EndColor = __LOWriter_TransparencyGradientConvert($iEnd)
	EndIf

	If ($oFrame.FillTransparenceGradientName() = "") Then
		$sTGradName = __LOWriter_TransparencyGradientNameInsert($oDoc, $tGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oFrame.FillTransparenceGradientName = $sTGradName
		If ($oFrame.FillTransparenceGradientName <> $sTGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oFrame.FillTransparenceGradient = $tGradient

	$iError = ($iType = Null) ? $iError : ($oFrame.FillTransparenceGradient.Style() = $iType) ? $iError : BitOR($iError, 1)
	$iError = ($iXCenter = Null) ? $iError : ($oFrame.FillTransparenceGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 2)
	$iError = ($iYCenter = Null) ? $iError : ($oFrame.FillTransparenceGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 4)
	$iError = ($iAngle = Null) ? $iError : (($oFrame.FillTransparenceGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 8)
	$iError = ($iBorder = Null) ? $iError : ($oFrame.FillTransparenceGradient.Border() = $iBorder) ? $iError : BitOR($iError, 16)
	$iError = ($iStart = Null) ? $iError : ($oFrame.FillTransparenceGradient.StartColor() = __LOWriter_TransparencyGradientConvert($iStart)) ? $iError : BitOR($iError, 32)
	$iError = ($iEnd = Null) ? $iError : ($oFrame.FillTransparenceGradient.EndColor() = __LOWriter_TransparencyGradientConvert($iEnd)) ? $iError : BitOR($iError, 64)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameTransparencyGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameTypePosition
; Description ...:  Set or Retrieve Frame Position Settings.
; Syntax ........: _LOWriter_FrameTypePosition(Byref $oFrame[, $iHorAlign = Null[, $iHorPos = Null[, $iHorRelation = Null[, $bMirror = Null[, $iVertAlign = Null[, $iVertPos = Null[, $iVertRelation = Null[, $bKeepInside = Null[, $iAnchorPos = Null]]]]]]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iHorAlign           - [optional] an integer value. Default is Null. The horizontal orientation of the Frame.
;				   +							See Constants below. Can't be set if Anchor position is set to "As Character".
;                  $iHorPos             - [optional] an integer value. Default is Null. The horizontal position of the Frame. set
;				   +							in Micrometer(uM). Only valid if $iHorAlign is set to $LOW_ORIENT_HORI_NONE().
;                  $iHorRelation        - [optional] an integer value. Default is Null. The reference point for the selected
;				   +							horizontal alignment option. See Constants below, and Remarks for acceptable
;				   +							values.
;                  $bMirror             - [optional] a boolean value. Default is Null. If True, Reverses the current horizontal
;				   +							alignment settings on even pages.
;                  $iVertAlign          - [optional] an integer value. Default is Null. The vertical orientation of the Frame.
;				   +							See Constants below.
;                  $iVertPos            - [optional] an integer value. Default is Null. The vertical position of the Frame. set
;				   +							in Micrometer(uM). Only valid if $iVertAlign is set to $LOW_ORIENT_VERT_NONE().
;                  $iVertRelation       - [optional] an integer value. Default is Null. The reference point for the selected
;				   +							vertical alignment option. See Constants below, and Remarks for acceptable
;				   +							values.
;                  $bKeepInside         - [optional] a boolean value. Default is Null. If True, Keeps the frame within the
;				   +							layout boundaries of the text that the frame is anchored to.
;                  $iAnchorPos          - [optional] an integer value. Default is Null. Specify the anchoring options for the
;				   +							frame. See Constants.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iHorAlign Not an Integer, or less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iHorPos not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iHorRelation not an Integer, or less than 0 or greater than 8. See
;				   +									Constants.
;				   @Error 1 @Extended 5 Return 0 = $bMirror not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iVertAlign not an integer, or less than 0 or greater than 9. See Constants.
;				   @Error 1 @Extended 7 Return 0 = $iVertPos not an integer.
;				   @Error 1 @Extended 8 Return 0 = $iVertRelation Not an Integer, Less than -1 or greater than 9. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $bKeepInside not a Boolean.
;				   @Error 1 @Extended 10 Return 0 = $iAnchorPos not an Integer, or less than 0 or greater than 4, or equal to 3.
;				   +									See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $iHorAlign
;				   |								2 = Error setting $iHorPos
;				   |								4 = Error setting $iHorRelation
;				   |								8 = Error setting $bMirror
;				   |								16 = Error setting $iVertAlign
;				   |								32 = Error setting $iVertPos
;				   |								64 = Error setting $iVertRelation
;				   |								128 = Error setting $bKeepInside
;				   |								256 = Error setting $iAnchorPos
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 9 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$iHorRelation has varying acceptable values, depending on the current Anchor position and also the current
;							$iHorAlign setting. The Following is a list of acceptable values per anchor position.
;						$LOW_ANCHOR_AT_PARAGRAPH(0) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0),
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_LEFT (5),
;							$LOW_RELATIVE_PARAGRAPH_RIGHT (6),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AS_CHARACTER(1) Accepts No $iHorRelation Values.
;						$LOW_ANCHOR_AT_PAGE(2) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AT_CHARACTER(4) Accepts the following $iHorRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0),
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_CHARACTER (2),
;							$LOW_RELATIVE_PAGE_LEFT (3)[Same as Left Page Border in L.O. UI],
;							$LOW_RELATIVE_PAGE_RIGHT (4)[Same as Right Page Border in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_LEFT (5),
;							$LOW_RELATIVE_PARAGRAPH_RIGHT (6),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;					$iVertRelation has varying acceptable values, depending on the current Anchor position. The Following is a
;							list of acceptable values per anchor position.
;						$LOW_ANCHOR_AT_PARAGRAPH(0) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0)[The Same as "Margin" in L.O. UI],
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AS_CHARACTER(1) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_ROW(-1),
;							$LOW_RELATIVE_PARAGRAPH (0)[The Same as "Baseline" in L.O. UI],
;							$LOW_RELATIVE_CHARACTER (2),
;						$LOW_ANCHOR_AT_PAGE(2) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;						$LOW_ANCHOR_AT_CHARACTER(4) Accepts the following $iVertRelation Values:
;							$LOW_RELATIVE_PARAGRAPH (0)[The same as "Margin" in L.O. UI],
;							$LOW_RELATIVE_PARAGRAPH_TEXT (1),
;							$LOW_RELATIVE_CHARACTER (2),
;							$LOW_RELATIVE_PAGE (7),
;							$LOW_RELATIVE_PAGE_PRINT (8)[Same as Page Text Area in L.O. UI].
;							$LOW_RELATIVE_TEXT_LINE (9)[The same as "Line of Text" in L.O. UI]
;Horizontal Alignment Constants: $LOW_ORIENT_HORI_NONE(0), no hard alignment is applied. Equal to "From Left" in L.O. UI.
;								 $LOW_ORIENT_HORI_RIGHT(1), The frame is aligned at the right side.
;								 $LOW_ORIENT_HORI_CENTER(2), The frame is aligned at the middle.
;								 $LOW_ORIENT_HORI_LEFT(3), The frame is aligned at the left side.
;Vertical Alignment Constants: $LOW_ORIENT_VERT_NONE(0), no hard alignment. The same as "From Top"/From Bottom" in L.O. UI, the
;									only difference is the combination setting of $iVertRelation.
;								$LOW_ORIENT_VERT_TOP(1), aligned at the top.
;								$LOW_ORIENT_VERT_CENTER(2), aligned at the center.
;								$LOW_ORIENT_VERT_BOTTOM(3), aligned at the bottom.
;								$LOW_ORIENT_VERT_CHAR_TOP(4), aligned at the top of a character. Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Top, and "To" = Character.
;								$LOW_ORIENT_VERT_CHAR_CENTER(5), aligned at the center of a character. Available only when
;									anchor is set to "As character". Equal to L.O. UI setting of "Vertical" = Center, and "To" =
;									Character.
;								$LOW_ORIENT_VERT_CHAR_BOTTOM(6), aligned at the bottom of a character. Available only when
;									anchor is set to "As character". Equal to L.O. UI setting of "Vertical" = Bottom, and "To" =
;									Character.
;								$LOW_ORIENT_VERT_LINE_TOP(7), aligned at the top of the line Available only when anchor is set
;									to "As character". Equal to L.O. UI setting of "Vertical" = Top, and "To" = Row.
;								$LOW_ORIENT_VERT_LINE_CENTER(8), aligned at the center of the line Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Center, and "To" = Row.
;								$LOW_ORIENT_VERT_LINE_BOTTOM(9), aligned at the bottom of the line Available only when anchor is
;									set to "As character". Equal to L.O. UI setting of "Vertical" = Bottom, and "To" = Row.
;Relation Constants: $LOW_RELATIVE_ROW(-1), This option will position the frame considering the height of the row where the
;							anchor is placed.
;						$LOW_RELATIVE_PARAGRAPH (0), [For Horizontal Relation:] the frame is positioned considering the whole
;							width available for the paragraph, including indent spaces.[For Vertical Relation:]
;							{$LOW_RELATIVE_PARAGRAPH  is also called "Margin" or "Baseline" in L.O. UI], Depending on the
;							anchoring type, the frame is positioned considering the space between the top margin and the
;							character ("To character" anchoring) or bottom edge of the paragraph ("To paragraph" anchoring)
;							where the anchor is placed. Or will position the frame considering the text baseline over which all
;							characters are placed. ("As Character" anchoring.)
;						$LOW_RELATIVE_PARAGRAPH_TEXT (1), [For Horizontal Relation:] the frame is positioned considering the
;							whole width available for text in the paragraph, excluding indent spaces.
;							[$LOW_RELATIVE_PARAGRAPH_TEXT for Vertical relation:] the frame is positioned considering the height
;							of the paragraph where the anchor is placed.
;						$LOW_RELATIVE_CHARACTER (2), [For Horizontal Relation:] the frame is positioned considering the
;							horizontal space used by the character. [$LOW_RELATIVE_CHARACTER for Vertical relation:] the frame
;							is positioned considering the vertical space used by the character.
;						$LOW_RELATIVE_PAGE_LEFT (3),[For Horizontal Relation:], the frame is positioned considering the space
;							available between the left page border and the left paragraph border. [Same as Left Page Border in
;							L.O. UI]
;						$LOW_RELATIVE_PAGE_RIGHT (4),[For Horizontal Relation:], the frame is positioned considering the space
;							available between the Right page border and the right paragraph border. [Same as Left Page Border in
;							L.O. UI]
;						$LOW_RELATIVE_PARAGRAPH_LEFT (5),[For Horizontal Relation:] the frame is positioned considering the
;							width of the indent space available to the left of the paragraph.
;						$LOW_RELATIVE_PARAGRAPH_RIGHT (6),[For Horizontal Relation:], the frame is positioned considering the
;							width of the indent space available to the right of the paragraph.
;						$LOW_RELATIVE_PAGE (7),[For Horizontal Relation:], the frame is positioned considering the whole width
;							of the page, from the left to the right page borders. [$LOW_RELATIVE_PAGE for Vertical relation:],
;							the frame is positioned considering the full page height, from top to bottom page borders.
;						$LOW_RELATIVE_PAGE_PRINT (8),[For Horizontal Relation:], [Same as Page Text Area in L.O. UI] the frame
;							is positioned considering the whole width available for text in the page, from the left to the right
;							page margins. [$LOW_RELATIVE_PAGE_PRINT for Vertical relation:], the frame is positioned considering
;							the full height available for text, from top to bottom margins.
;						$LOW_RELATIVE_TEXT_LINE (9),[For Vertical relation:], the frame is positioned considering the height of
;							the line of text where the anchor is placed.
;Anchor Constants: $LOW_ANCHOR_AT_PARAGRAPH(0), Anchors the frame to the current paragraph.
;					$LOW_ANCHOR_AS_CHARACTER(1), Anchors the frame as character. The height of the current line is resized to
;						match the height of the selection.
;					$LOW_ANCHOR_AT_PAGE(2), Anchors the frame to the current page.
;					$LOW_ANCHOR_AT_CHARACTER(4), Anchors the frame to a character.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameTypePosition(ByRef $oFrame, $iHorAlign = Null, $iHorPos = Null, $iHorRelation = Null, $bMirror = Null, $iVertAlign = Null, $iVertPos = Null, $iVertRelation = Null, $bKeepInside = Null, $iAnchorPos = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0, $iCurrentAnchor
	Local $avPosition[9]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iHorAlign, $iHorPos, $iHorRelation, $bMirror, $iVertAlign, $iVertPos, $iVertRelation, $bKeepInside, _
			$iAnchorPos) Then
		__LOWriter_ArrayFill($avPosition, $oFrame.HoriOrient(), $oFrame.HoriOrientPosition(), $oFrame.HoriOrientRelation(), _
				$oFrame.PageToggle(), $oFrame.VertOrient(), $oFrame.VertOrientPosition(), $oFrame.VertOrientRelation(), _
				$oFrame.IsFollowingTextFlow(), $oFrame.AnchorType())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPosition)
	EndIf
	;Accepts HoriOrient Left,Right, Center, and "None" = "From Left"
	If ($iHorAlign <> Null) Then ;Cant be set if Anchor is set to "As Char"
		If Not __LOWriter_IntIsBetween($iHorAlign, $LOW_ORIENT_HORI_NONE, $LOW_ORIENT_HORI_LEFT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.HoriOrient = $iHorAlign
		$iError = ($oFrame.HoriOrient() = $iHorAlign) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iHorPos <> Null) Then
		If Not IsInt($iHorPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.HoriOrientPosition = $iHorPos
		$iError = (__LOWriter_IntIsBetween($oFrame.HoriOrientPosition(), $iHorPos - 1, $iHorPos + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iHorRelation <> Null) Then
		If Not __LOWriter_IntIsBetween($iHorRelation, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PAGE_PRINT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.HoriOrientRelation = $iHorRelation
		$iError = ($oFrame.HoriOrientRelation() = $iHorRelation) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bMirror <> Null) Then
		If Not IsBool($bMirror) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.PageToggle = $bMirror
		$iError = ($oFrame.PageToggle() = $bMirror) ? $iError : BitOR($iError, 8)
	EndIf

	;Accepts Orient Top,Bottom, Center, and "None" = "From Top"/From Bottom, plus Row and Char.
	If ($iVertAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertAlign, $LOW_ORIENT_VERT_NONE, $LOW_ORIENT_VERT_LINE_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.VertOrient = $iVertAlign
		$iError = ($oFrame.VertOrient() = $iVertAlign) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iVertPos <> Null) Then
		If Not IsInt($iVertPos) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrame.VertOrientPosition = $iVertPos
		$iError = (__LOWriter_IntIsBetween($oFrame.VertOrientPosition(), $iVertPos - 1, $iVertPos + 1)) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iVertRelation <> Null) Then
		If Not __LOWriter_IntIsBetween($iVertRelation, $LOW_RELATIVE_ROW, $LOW_RELATIVE_TEXT_LINE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$iCurrentAnchor = (($iAnchorPos <> Null) ? $iAnchorPos : $oFrame.AnchorType())

		;Libre Office is a bit complex in this anchor setting; When set to "As Character", there aren't specific setting
		;		values for "Baseline, "Character" and "Row", But For Baseline the VertOrientRelation value is 0, or
		;"$LOW_RELATIVE_PARAGRAPH", For "Character", The VertOrientRelation value is still 0, and the "VertOrient" value (In the
		;L.O. UI the furthest left drop down box)  is modified, which can be either $LOW_ORIENT_VERT_CHAR_TOP(1),
		;$LOW_ORIENT_VERT_CHAR_CENTER(2), $LOW_ORIENT_VERT_CHAR_BOTTOM(3), depending on the current value of Top, Bottom and
		;Center, or "From Bottom"/ "From Top", of "VertOrient". The same is true For "Row", which means when the anchor is set
		;to "As Character", I need to first determine the the desired user setting, $LOW_RELATIVE_ROW(-1),
		;$LOW_RELATIVE_PARAGRAPH(0), or $LOW_RELATIVE_CHARACTER(2), and then determine the current "VertOrient" setting, and
		;then manually set the value to the correct setting. Such as Line_Top, Line_Bottom etc.

		If ($iCurrentAnchor = $LOW_ANCHOR_AS_CHARACTER) Then

			If ($iVertRelation = $LOW_RELATIVE_ROW) Then
				Switch $oFrame.VertOrient()
					Case $LOW_ORIENT_VERT_NONE ; None = "From Bottom or From Top in L.O. UI
						$iError = BitOR($iError, 64) ; -- Row not accepted with this VertOrient Setting.
					Case $LOW_ORIENT_VERT_TOP, $LOW_ORIENT_VERT_CHAR_TOP, $LOW_ORIENT_VERT_LINE_TOP
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_LINE_TOP
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_LINE_TOP)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_CENTER, $LOW_ORIENT_VERT_CHAR_CENTER, $LOW_ORIENT_VERT_LINE_CENTER
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_LINE_CENTER
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_LINE_CENTER)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_BOTTOM, $LOW_ORIENT_VERT_CHAR_BOTTOM, $LOW_ORIENT_VERT_LINE_BOTTOM
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_LINE_BOTTOM
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_LINE_BOTTOM)) ? $iError : BitOR($iError, 64)
				EndSwitch

			ElseIf ($iVertRelation = $LOW_RELATIVE_PARAGRAPH) Then ;Paragraph = Baseline setting in L.O. UI
				$oFrame.VertOrientRelation = $iVertRelation ;Paragraph = Baseline in this case
				$iError = (($oFrame.VertOrientRelation() = $iVertRelation)) ? $iError : BitOR($iError, 64)
			ElseIf ($iVertRelation = $LOW_RELATIVE_CHARACTER) Then
				Switch $oFrame.VertOrient()
					Case $LOW_ORIENT_VERT_NONE ; None = "From Bottom or From Top in L.O. UI
						$iError = BitOR($iError, 64) ; -- Character not accepted with this VertOrient Setting.
					Case $LOW_ORIENT_VERT_TOP, $LOW_ORIENT_VERT_CHAR_TOP, $LOW_ORIENT_VERT_LINE_TOP
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_CHAR_TOP
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_CHAR_TOP)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_CENTER, $LOW_ORIENT_VERT_CHAR_CENTER, $LOW_ORIENT_VERT_LINE_CENTER
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_CHAR_CENTER
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_CHAR_CENTER)) ? $iError : BitOR($iError, 64)
					Case $LOW_ORIENT_VERT_BOTTOM, $LOW_ORIENT_VERT_CHAR_BOTTOM, $LOW_ORIENT_VERT_LINE_BOTTOM
						$oFrame.VertOrientRelation = $LOW_RELATIVE_PARAGRAPH
						$oFrame.VertOrient = $LOW_ORIENT_VERT_CHAR_BOTTOM
						$iError = (($oFrame.VertOrientRelation() = $LOW_RELATIVE_PARAGRAPH) And ($oFrame.VertOrient() = $LOW_ORIENT_VERT_CHAR_BOTTOM)) ? $iError : BitOR($iError, 64)
				EndSwitch
			EndIf

		Else
			$oFrame.VertOrientRelation = $iVertRelation
			$iError = ($oFrame.VertOrientRelation() = $iVertRelation) ? $iError : BitOR($iError, 64)
		EndIf
	EndIf

	If ($bKeepInside <> Null) Then
		If Not IsBool($bKeepInside) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oFrame.IsFollowingTextFlow = $bKeepInside
		$iError = ($oFrame.IsFollowingTextFlow() = $bKeepInside) ? $iError : BitOR($iError, 128)
	EndIf

	If ($iAnchorPos <> Null) Then
		If Not __LOWriter_IntIsBetween($iAnchorPos, $LOW_ANCHOR_AT_PARAGRAPH, $LOW_ANCHOR_AT_CHARACTER, $LOW_ANCHOR_AT_FRAME) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oFrame.AnchorType = $iAnchorPos
		$iError = ($oFrame.AnchorType() = $iAnchorPos) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameTypePosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameTypeSize
; Description ...: Set or Retrieve Frame Size related settings.
; Syntax ........: _LOWriter_FrameTypeSize(Byref $oDoc, Byref $oFrame[, $iWidth = Null[, $iRelativeWidth = Null[, $iWidthRelativeTo = Null[, $bAutoWidth = Null[, $iHeight = Null[, $iRelativeHeight = Null[, $iHeightRelativeTo = Null[, $bAutoHeight = Null[, $bKeepRatio = Null]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the Frame, in
;				   +						Micrometers(uM). Min. 51.
;                  $iRelativeWidth      - [optional] an integer value. Default is Null. Calculates the width of the frame as a
;				   +						percentage of the width of the page text area. Min. 0 (off). Max 254.
;                  $iWidthRelativeTo    - [optional] an integer value. Default is Null. Decides what 100% width means: either
;				   +						text area (excluding margins) or the entire page (including margins). See Constants.
;				   +						Libre Office 4.3 and Up.
;                  $bAutoWidth          - [optional] a boolean value. Default is Null. Automatically adjusts the width of a
;				   +						frame to match the contents of the frame. $iWidth becomes the minimum width the
;				   +						frame must be.
;                  $iHeight             - [optional] an integer value. Default is Null. The height that you want for the Frame,
;				   +						in Micrometers(uM). Min. 51.
;                  $iRelativeHeight     - [optional] an integer value. Default is Null. Calculates the Height of the frame as a
;				   +						percentage of the Height of the page text area. Min. 0 (off). Max 254.
;                  $iHeightRelativeTo   - [optional] an integer value. Default is Null. Decides what 100% Height means: either
;				   +						text area (excluding margins) or the entire page (including margins). See Constants.
;				   +						Libre Office 4.3 and Up.
;                  $bAutoHeight         - [optional] a boolean value. Default is Null. Automatically adjusts the height of a
;				   +						frame to match the contents of the frame. $iHeight becomes the minimum height the
;				   +						frame must be.
;                  $bKeepRatio          - [optional] a boolean value. Default is Null. Maintains the height and width ratio
;				   +						when you change the width or the height setting.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth Not an Integer, or less than 51.
;				   @Error 1 @Extended 4 Return 0 = $iRelativeWidth not an Integer, less than 0 or greater than 254.
;				   @Error 1 @Extended 5 Return 0 = $iWidthRelativeTo not an Integer, not equal to 0 and not equal to 7. See
;				   +									Constants.
;				   @Error 1 @Extended 6 Return 0 = $bAutoWidth not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iHeight Not an Integer, or less than 51.
;				   @Error 1 @Extended 8 Return 0 = $iRelativeHeight not an Integer, less than 0 or greater than 254.
;				   @Error 1 @Extended 9 Return 0 =$iHeightRelativeTo not an Integer, not equal to 0 and not equal to 7. See
;				   +									Constants.
;				   @Error 1 @Extended 10 Return 0 = $bAutoHeight not a Boolean.
;				   @Error 1 @Extended 11 Return 0 = $bKeepRatio not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iRelativeWidth
;				   |								4 = Error setting $iWidthRelativeTo
;				   |								8 = Error setting $bAutoWidth
;				   |								16 = Error setting $iHeight
;				   |								32 = Error setting $iRelativeHeight
;				   |								64 = Error setting $iHeightRelativeTo
;				   |								128 = Error setting $bAutoHeight
;				   |								256 = Error setting $bKeepRatio
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.3.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 or 9 Element Array depending on current Libre Office
;				   +								Version, If the current Libre Office version is greater or equal to than
;				   +								4.3, then a 9 element Array is returned, else 7 element array with both
;				   +								$iWidthRelativeTo and $iHeightRelativeTo skipped. Array Element values will
;				   +								be in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					This function can successfully set "Keep Ratio" however when the user changes this setting in the UI, for
;						some reason the applicable setting values are not updated, so this function may return incorrect values
;						for "Keep Ratio".
;Relative Constants: $LOW_RELATIVE_PARAGRAPH(0), means: text area (excluding margins).
;						$LOW_RELATIVE_PAGE(7), means: entire page (including margins).
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameTypeSize(ByRef $oDoc, ByRef $oFrame, $iWidth = Null, $iRelativeWidth = Null, $iWidthRelativeTo = Null, $bAutoWidth = Null, $iHeight = Null, $iRelativeHeight = Null, $iHeightRelativeTo = Null, $bAutoHeight = Null, $bKeepRatio = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avSize[7]
	Local Const $iCONST_AutoHW_OFF = 1, $iCONST_AutoHW_ON = 2

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iWidth, $iRelativeWidth, $iWidthRelativeTo, $bAutoWidth, $iHeight, $iRelativeHeight, $iHeightRelativeTo, _
			$bAutoHeight, $bKeepRatio) Then
		If __LOWriter_VersionCheck(4.3) Then
			__LOWriter_ArrayFill($avSize, $oFrame.Width(), $oFrame.RelativeWidth(), $oFrame.RelativeWidthRelation(), _
					($oFrame.WidthType() = $iCONST_AutoHW_ON) ? True : False, $oFrame.Height(), $oFrame.RelativeHeight(), _
					$oFrame.RelativeHeightRelation(), ($oFrame.SizeType() = $iCONST_AutoHW_ON) ? True : False, _
					(($oFrame.IsSyncHeightToWidth() And $oFrame.IsSyncWidthToHeight()) ? True : False))
		Else
			__LOWriter_ArrayFill($avSize, $oFrame.Width(), $oFrame.RelativeWidth(), _
					($oFrame.WidthType() = $iCONST_AutoHW_ON) ? True : False, $oFrame.Height(), _
					$oFrame.RelativeHeight(), ($oFrame.SizeType() = $iCONST_AutoHW_ON) ? True : False, _
					(($oFrame.IsSyncHeightToWidth() And $oFrame.IsSyncWidthToHeight()) ? True : False))
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avSize)
	EndIf

	If ($iWidth <> Null) Then ;Min 51
		If Not __LOWriter_IntIsBetween($iWidth, 51, $iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.Width = $iWidth
		$iError = (__LOWriter_IntIsBetween($oFrame.Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRelativeWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iRelativeWidth, 0, 254) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.RelativeWidth = $iRelativeWidth
		$iError = ($oFrame.RelativeWidth() = $iRelativeWidth) ? $iError : BitOR($iError, 2)

		If ($iRelativeWidth <> 0) And ($bAutoWidth <> True) Then ;If AutoWidth is not On, and Relative Width isn't being turned off, then set Width Value.
			If ($oFrame.WidthType() = $iCONST_AutoHW_OFF) Or ($bAutoWidth = False) Then __LOWriter_FrameRelativeSize($oDoc, $oFrame, True)
		EndIf
	EndIf

	If ($iWidthRelativeTo <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidthRelativeTo, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PARAGRAPH, "", $LOW_RELATIVE_PAGE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not __LOWriter_VersionCheck(4.3) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oFrame.RelativeWidthRelation = $iWidthRelativeTo
		$iError = ($oFrame.RelativeWidthRelation() = $iWidthRelativeTo) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bAutoWidth <> Null) Then
		If Not IsBool($bAutoWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.WidthType = ($bAutoWidth) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF
		$iError = ($oFrame.WidthType() = (($bAutoWidth) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 51, $iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oFrame.Height = $iHeight
		$iError = ($oFrame.Height() = $iHeight) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iRelativeHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRelativeHeight, 0, 254) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oFrame.RelativeHeight = $iRelativeHeight
		$iError = ($oFrame.RelativeHeight() = $iRelativeHeight) ? $iError : BitOR($iError, 32)

		If ($iRelativeHeight <> 0) And ($bAutoHeight <> True) Then ;If AutoHeight is not On, and Relative Height isn't being turned off, then set Height Value.
			If ($oFrame.SizeType() = $iCONST_AutoHW_OFF) Or ($bAutoHeight = False) Then __LOWriter_FrameRelativeSize($oDoc, $oFrame, False, True)
		EndIf
	EndIf

	If ($iHeightRelativeTo <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeightRelativeTo, $LOW_RELATIVE_PARAGRAPH, $LOW_RELATIVE_PARAGRAPH, "", $LOW_RELATIVE_PAGE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not __LOWriter_VersionCheck(4.3) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oFrame.RelativeHeightRelation = $iHeightRelativeTo
		$iError = ($oFrame.RelativeHeightRelation() = $iHeightRelativeTo) ? $iError : BitOR($iError, 64)
	EndIf

	If ($bAutoHeight <> Null) Then
		If Not IsBool($bAutoHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oFrame.SizeType = ($bAutoHeight) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF
		$iError = ($oFrame.SizeType = (($bAutoHeight) ? $iCONST_AutoHW_ON : $iCONST_AutoHW_OFF)) ? $iError : BitOR($iError, 128)
	EndIf

	If ($bKeepRatio <> Null) Then
		If Not IsBool($bKeepRatio) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oFrame.IsSyncHeightToWidth = $bKeepRatio
		$oFrame.IsSyncWidthToHeight = $bKeepRatio
		$iError = (($oFrame.IsSyncHeightToWidth() = $bKeepRatio) And ($oFrame.IsSyncWidthToHeight() = $bKeepRatio)) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameTypeSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameWrap
; Description ...: Set or Retrieve Frame Wrap and Spacing settings.
; Syntax ........: _LOWriter_FrameWrap(Byref $oFrame[, $iWrapType = Null[, $iLeft = Null[, $iRight = Null[, $iTop = Null[, $iBottom = Null]]]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $iWrapType           - [optional] an integer value. Default is Null. The way you want text to wrap around the
;				   +						frame. See Constants.
;                  $iLeft               - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the left edge of the frame and the text. Set in Micrometers.
;                  $iRight              - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Right edge of the frame and the text. Set in Micrometers.
;                  $iTop                - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Top edge of the frame and the text. Set in Micrometers.
;                  $iBottom             - [optional] an integer value. Default is Null. The amount of space that you want between
;				   +						the Bottom edge of the frame and the text. Set in Micrometers.
; Return values .: Success: 1 or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iWrapType not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $iLeft not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iRight not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Property Set Info Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iWrapType
;				   |								2 = Error setting $iLeft
;				   |								4 = Error setting $iRight
;				   |								8 = Error setting $iTop
;				   |								16 = Error setting $iBottom
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Wrap Type Constants:  $LOW_WRAP_MODE_NONE(0), Places the frame on a separate line in the document.
;						$LOW_WRAP_MODE_THROUGH(1), Places the frame in front of the text.
;						$LOW_WRAP_MODE_PARALLEL(2), Wraps text on all four sides of the border frame of the frame.
;						$LOW_WRAP_MODE_DYNAMIC(3), the same as "Optimal", Automatically wraps text to the left, to the right, or
;								on all four sides of the border frame of the frame.
;						$LOW_WRAP_MODE_LEFT(4), the same as "Before", Wraps text on the left side of the frame.
;						$LOW_WRAP_MODE_RIGHT(5), the same as "After", Wraps text on the right side of the frame.
; Related .......:  _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameWrap(ByRef $oFrame, $iWrapType = Null, $iLeft = Null, $iRight = Null, $iTop = Null, $iBottom = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPropInfo
	Local $iError = 0
	Local $avWrap[5]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oPropInfo = $oFrame.getPropertySetInfo()
	If Not IsObj($oPropInfo) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWrapType, $iLeft, $iRight, $iTop, $iBottom) Then

		If $oPropInfo.hasPropertyByName("Surround") Then ;Surround is marked as deprecated, but there is no indication of what version of L.O. this occurred. So Test for its existence.
			__LOWriter_ArrayFill($avWrap, $oFrame.Surround(), $oFrame.LeftMargin(), $oFrame.RightMargin(), $oFrame.TopMargin(), _
					$oFrame.BottomMargin())
		Else
			__LOWriter_ArrayFill($avWrap, $oFrame.TextWrap(), $oFrame.LeftMargin(), $oFrame.RightMargin(), $oFrame.TopMargin(), _
					$oFrame.BottomMargin())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avWrap)
	EndIf

	If ($iWrapType <> Null) Then
		If Not __LOWriter_IntIsBetween($iWrapType, $LOW_WRAP_MODE_NONE, $LOW_WRAP_MODE_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		If $oPropInfo.hasPropertyByName("Surround") Then $oFrame.Surround = $iWrapType
		If $oPropInfo.hasPropertyByName("TextWrap") Then $oFrame.TextWrap = $iWrapType

		If $oPropInfo.hasPropertyByName("Surround") Then
			$iError = ($oFrame.Surround() = $iWrapType) ? $iError : BitOR($iError, 1)
		Else
			$iError = ($oFrame.TextWrap() = $iWrapType) ? $iError : BitOR($iError, 1)
		EndIf

	EndIf

	If ($iLeft <> Null) Then
		If Not IsInt($iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.LeftMargin = $iLeft
		$iError = (__LOWriter_IntIsBetween($oFrame.LeftMargin(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iRight <> Null) Then
		If Not IsInt($iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.RightMargin = $iRight
		$iError = (__LOWriter_IntIsBetween($oFrame.RightMargin(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iTop <> Null) Then
		If Not IsInt($iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oFrame.TopMargin = $iTop
		$iError = (__LOWriter_IntIsBetween($oFrame.TopMargin(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iBottom <> Null) Then
		If Not IsInt($iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oFrame.BottomMargin = $iBottom
		$iError = (__LOWriter_IntIsBetween($oFrame.BottomMargin(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameWrap

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_FrameWrapOptions
; Description ...: Set or Retrieve Frame Wrap Options.
; Syntax ........: _LOWriter_FrameWrapOptions(Byref $oFrame[, $bFirstPar = Null[, $bInBackground = Null[, $bAllowOverlap = Null]]])
; Parameters ....: $oFrame              - [in/out] an object. A Frame object returned by previous FrameCreate or Object
;				   +						Retrieval function.
;                  $bFirstPar           - [optional] a boolean value. Default is Null. If True, Starts a new paragraph below
;				   +						the object.
;                  $bInBackground       - [optional] a boolean value. Default is Null. If True, Moves the selected object to the
;				   +						background. This option is only available with the "Through" wrap type.
;                  $bAllowOverlap       - [optional] a boolean value. Default is Null. If True, the object is allowed to
;				   +						overlap another object. This option has no effect on wrap through objects, which
;				   +						can always overlap.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oFrame not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bFirstPar not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bInBackground not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bAllowOverlap not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bFirstPar
;				   |								2 = Error setting $bInBackground
;				   |								4 = Error setting $bAllowOverlap
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Contour and Outside only, though shown on the L.O. UI, are not available for frames, as stated in the
;						L.O. Offline help file.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					This function may indicate the settings were set successfully when they haven't been if the appropriate
;						wrap type, anchor type etc. hasn't been set before hand.
; Related .......: _LOWriter_FrameCreate, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_FrameWrapOptions(ByRef $oFrame, $bFirstPar = Null, $bInBackground = Null, $bAllowOverlap = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $abWrapOptions[3]

	If Not IsObj($oFrame) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bFirstPar, $bInBackground, $bAllowOverlap) Then
		__LOWriter_ArrayFill($abWrapOptions, $oFrame.SurroundAnchorOnly(), (($oFrame.Opaque()) ? False : True), $oFrame.AllowOverlap())
		;Opaque/Background is False when InBackground is checked, so switch Boolean values around.
		Return SetError($__LOW_STATUS_SUCCESS, 1, $abWrapOptions)
	EndIf

	If ($bFirstPar <> Null) Then
		If Not IsBool($bFirstPar) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oFrame.SurroundAnchorOnly = $bFirstPar
		$iError = ($oFrame.SurroundAnchorOnly() = $bFirstPar) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bInBackground <> Null) Then
		If Not IsBool($bInBackground) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oFrame.Opaque = (($bInBackground) ? False : True)
		$iError = ($oFrame.Opaque() = (($bInBackground) ? False : True)) ? $iError : BitOR($iError, 2) ;Opaque/Background is False when InBackground is checked, so switch Boolean values around.
	EndIf

	If ($bAllowOverlap <> Null) Then
		If Not IsBool($bAllowOverlap) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oFrame.AllowOverlap = $bAllowOverlap
		$iError = ($oFrame.AllowOverlap() = $bAllowOverlap) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_FrameWrapOptions

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleCreate
; Description ...: Create a new Numbering Style in a Document.
; Syntax ........: _LOWriter_NumStyleCreate(Byref $oDoc, $sNumStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sNumStyle           - a string value. The Name of the New Numbering Style to Create.
; Return values .:   Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sNumStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sNumStyle Name already exists in this document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Retrieving "NumberingStyle" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Creating "com.sun.star.style.NumberingStyle" Object.
;				   @Error 2 @Extended 3 Return 0 = Error Retrieving New Numbering Style Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating new Numbering Style by Name.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. New Numbering Style successfully created. Returning Numbering
;				   +										Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_NumStyleDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleCreate(ByRef $oDoc, $sNumStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oNumStyles, $oStyle, $oNumStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oNumStyles = $oDoc.StyleFamilies().getByName("NumberingStyles")
	If Not IsObj($oNumStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If _LOWriter_NumStyleExists($oDoc, $sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyle = $oDoc.createInstance("com.sun.star.style.NumberingStyle")
	If Not IsObj($oStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oNumStyles.insertByName($sNumStyle, $oStyle)

	If Not $oNumStyles.hasByName($sNumStyle) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oNumStyle = $oNumStyles.getByName($sNumStyle)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oNumStyle)
EndFunc   ;==>_LOWriter_NumStyleCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleCustomize
; Description ...: Retrieve and Set Numbering Style Customize settings. See Remarks.
; Syntax ........: _LOWriter_NumStyleCustomize(Byref $oDoc, $oNumStyle, $iLevel[, $iNumFormat = Null[, $iStartAt = Null[, $sCharStyle = Null[, $iSubLevels = Null[, $sSepBefore = Null[, $sSepAfter = Null[, $bConsecutiveNum = Null[, $sBulletFont = Null[, $iCharDecimal = Null]]]]]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oNumStyle           - [in/out] an object. A Numbering Style object returned by previous NumStyle Create or
;				   +						Object Retrieval function.
;                  $iLevel              - an integer value. The Numbering Level to modify; enter 0 to modify all levels.
;                  $iNumFormat             - [optional] an integer value. Default is Null. The numbering scheme for the selected
;				   +						levels. See Constants.
;                  $iStartAt            - [optional] an integer value. Default is Null. A new starting number for the current
;				   +						level
;                  $sCharStyle          - [optional] a string value. Default is Null. The Character Style that you want to use
;				   +						in an ordered list.
;                  $iSubLevels          - [optional] an integer value. Default is Null. Enter the number of previous levels to
;				   +						include in the outline format. For example, if you enter "2" and the previous level
;				   +						uses the "A, B, C..." numbering scheme, the numbering scheme for the current level
;				   +						becomes: "A.1". Maximum value, if $iLevel is set to 0, is 1.
;                  $sSepBefore          - [optional] a string value. Default is Null. A character or the text to display in
;				   +						front of the number in the list
;                  $sSepAfter           - [optional] a string value. Default is Null. A character or the text to display behind
;				   +						the number in the list.
;                  $bConsecutiveNum     - [optional] a boolean value. Default is Null. Increases the numbering by one as you go
;				   +						down each level in the list hierarchy.
;                  $sBulletFont         - [optional] a string value. Default is Null. The font to use for special characters
;				   +						that are associated with it. Note: $iNumFormat must be set to
;				   +						$LOW_NUM_STYLE_CHAR_SPECIAL(6) before these can be set.
;                  $iCharDecimal        - [optional] an integer value. Default is Null. The decimal value of the desired
;				   +						character. Note: $iNumFormat must be set to $LOW_NUM_STYLE_CHAR_SPECIAL(6) before
;				   +						these can be set.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oNumStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oNumStyle not a Num Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iLevel not between 0 - 10.
;				   @Error 1 @Extended 5 Return 0 = $iNumFormat not an integer, less than 0 or greater than 71, see Constants.
;				   @Error 1 @Extended 6 Return 0 = $iStartAt Not an integer.
;				   @Error 1 @Extended 7 Return 0 = $sCharStyle not a string.
;				   @Error 1 @Extended 8 Return 0 = Character Style called in $sCharStyle, not found in document.
;				   @Error 1 @Extended 9 Return 0 = $iSubLevels Not an Integer, less than 1 or greater than 10.
;				   @Error 1 @Extended 10 Return 0 = $iLevel set to 0 (all levels) And $iSubLevels greater than 1.
;				   @Error 1 @Extended 11 Return 0 = $iSubLevels greater than $iLevel.
;				   @Error 1 @Extended 12 Return 0 = $sSepBefore Not a string.
;				   @Error 1 @Extended 13 Return 0 = $sSepAfter Not a string.
;				   @Error 1 @Extended 14 Return 0 = $bConsecutiveNum not a Boolean.
;				   @Error 1 @Extended 15 Return 0 = $sBulletFont not a string.
;				   @Error 1 @Extended 16 Return 0 = Font style called in $sBulletFont not found in document.
;				   @Error 1 @Extended 17 Return 0 = $iCharDecimal not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving NumberingRules Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving NumberingRules Object for error checking.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving current settings, $iLevel set to 0, cannot retrieve settings
;				   +								for more than one level at a time.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $iNumFormat
;				   |								2 = Error setting $iStartAt
;				   |								4 = Error setting $sCharStyle
;				   |								8 = Error setting $iSubLevels
;				   |								16 = Error setting $sSepBefore
;				   |								32 = Error setting $sSepAfter
;				   |								64 = Error setting $bConsecutiveNum
;				   |								128 = Error setting $sBulletFont
;				   |								256 = Error setting $iCharDecimal
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully set the requested Properties.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 or 9 Element Array with values in order of function
;				   +								parameters. See remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function should work just fine as the others do for modifying styles, but for setting Numbering Style
;						settings, it would seem that the Array of Setting Objects passed by Autoit is not recognized as an
;						appropriate array/Sequence by LibreOffice, and consequently causes a
;						com.sun.star.lang.IllegalArgumentException COM error. See __LOWriter_NumStyleModify function for a more
;						detailed explanation. This function can still be used to set and retrieve, setting values, however now,
;						this function either inserts a temporary macro into $oDoc for performing the needed procedure, or if
;						that fails, it invisibly opens an .odt Libre document and inserts a macro, see
;						__LOWriter_NumStyleInitiateDocument which is then called with the necessary parameters to set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings. Note: Can only request setting values for one numbering level at a time, you
;						aren't able to call $iLevel with 0 to retrieve all at once. If Current numbering type is set to Bullet,
;						the returned array will contain 9 elements, in the order of parameters, if the current numbering type is
;						other than bullet style, a 7 element array will be returned, with the last two parameters excluded.
;					Call any optional parameter with Null keyword to skip it.
;					When a lot of settings are set, especially for all levels, this function can be a bit slow.
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_NumStyleCreate, _LOWriter_NumStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleCustomize(ByRef $oDoc, $oNumStyle, $iLevel, $iNumFormat = Null, $iStartAt = Null, $sCharStyle = Null, $iSubLevels = Null, $sSepBefore = Null, $sSepAfter = Null, $bConsecutiveNum = Null, $sBulletFont = Null, $iCharDecimal = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oNumRules
	Local $iError = 0
	Local $aNumSettings[9][2]
	Local $iRowCount = 0
	Local $avCustomize[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oNumStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IntIsBetween($iLevel, 0, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iLevel = ($iLevel - 1) ; Numbering Levels are  0 based, minus 1 to compensate.

	$oNumRules = $oNumStyle.NumberingRules()
	If Not IsObj($oNumRules) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iNumFormat, $iStartAt, $sCharStyle, $iSubLevels, $sSepBefore, $sSepAfter, $bConsecutiveNum, $sBulletFont, $iCharDecimal) Then
		If ($iLevel = -1) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;can only get settings for one level at a time.

		If (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "NumberingType") = $LOW_NUM_STYLE_CHAR_SPECIAL) Then
			__LOWriter_ArrayFill($avCustomize, __LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "NumberingType"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "StartWith"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "CharStyleName"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "ParentNumbering"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Prefix"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Suffix"), _
					$oNumStyle.NumberingRules.IsContinuousNumbering(), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "BulletFont").Name(), _
					Asc(__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "BulletChar")))

		Else ; If not set for Bullet style, return only these settings.
			__LOWriter_ArrayFill($avCustomize, __LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "NumberingType"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "StartWith"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "CharStyleName"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "ParentNumbering"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Prefix"), _
					__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Suffix"), _
					$oNumStyle.NumberingRules.IsContinuousNumbering())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avCustomize)
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$aNumSettings[$iRowCount][0] = "NumberingType"
		$aNumSettings[$iRowCount][1] = $iNumFormat
		$iRowCount += 1
	EndIf

	If ($iStartAt <> Null) Then
		If Not IsInt($iStartAt) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$aNumSettings[$iRowCount][0] = "StartWith"
		$aNumSettings[$iRowCount][1] = $iStartAt
		$iRowCount += 1
	EndIf

	If ($sCharStyle <> Null) Then
		If Not IsString($sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$aNumSettings[$iRowCount][0] = "CharStyleName"
		$aNumSettings[$iRowCount][1] = $sCharStyle
		$iRowCount += 1
	EndIf

	If ($iSubLevels <> Null) Then
		If Not __LOWriter_IntIsBetween($iSubLevels, 1, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If ($iLevel = -1) And ($iSubLevels > 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0) ;-1 for $iLevel = 0 = Modify all Num Style levels.
		If ($iLevel <> -1) And ($iLevel < $iSubLevels) Then SetError($__LOW_STATUS_INPUT_ERROR, 11, 0) ;SubLevel higher than requested level
		$aNumSettings[$iRowCount][0] = "ParentNumbering"
		$aNumSettings[$iRowCount][1] = $iSubLevels
		$iRowCount += 1

		;If Document has "ListFormat" setting (Libre 7.2 +), Sub Levels ("ParentNumbering") wont accept a setting without
		; also setting "List format", which means combining the corresponding "ListFormat"  number values + Prefix & Suffix.
		__LOWriter_NumStyleRetrieve($oNumRules, 9, "ListFormat") ;Test if "ListFormat" exists in the Numbering Rules.
		If (@error = 0) Then ; If List Format does exist, modify it.
			$aNumSettings[$iRowCount][0] = "ListFormat"
			$aNumSettings[$iRowCount][1] = __LOWriter_NumStyleListFormat($oNumRules, $iLevel, $iSubLevels)
			If (@error = 0) Then $iRowCount += 1 ;If No errors count up, else just let it be overwritten.
		EndIf
	EndIf

	If ($sSepBefore <> Null) Then
		If Not IsString($sSepBefore) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$aNumSettings[$iRowCount][0] = "Prefix"
		$aNumSettings[$iRowCount][1] = $sSepBefore
		$iRowCount += 1
	EndIf

	If ($sSepAfter <> Null) Then
		If Not IsString($sSepAfter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$aNumSettings[$iRowCount][0] = "Suffix"
		$aNumSettings[$iRowCount][1] = $sSepAfter
		$iRowCount += 1
	EndIf

	If ($bConsecutiveNum <> Null) Then
		If Not IsBool($bConsecutiveNum) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 14, 0)
		$oNumRules.IsContinuousNumbering = $bConsecutiveNum
	EndIf

	If ($sBulletFont <> Null) Then
		If Not IsString($sBulletFont) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 15, 0)
		If Not _LOWriter_FontExists($oDoc, $sBulletFont) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 16, 0)
		$aNumSettings[$iRowCount][0] = "BulletFontName"
		$aNumSettings[$iRowCount][1] = $sBulletFont
		$iRowCount += 1
	EndIf

	If ($iCharDecimal <> Null) Then
		If Not IsInt($iCharDecimal) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 17, 0)
		$aNumSettings[$iRowCount][0] = "BulletChar"
		$aNumSettings[$iRowCount][1] = Chr($iCharDecimal)
		$iRowCount += 1
	EndIf

	ReDim $aNumSettings[$iRowCount][2]

	__LOWriter_NumStyleModify($oDoc, $oNumRules, $iLevel, $aNumSettings)

	$oNumStyle.NumberingRules = $oNumRules

	$oNumRules = $oNumStyle.NumberingRules() ;Retrieve Numbering Rules a second time for error checking.
	If Not IsObj($oNumRules) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$iLevel = ($iLevel = -1) ? 9 : $iLevel ;If Level is set to -1 (modify all), set to last level to check the settings.

	;Error Checking
	$iError = ($iNumFormat = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "NumberingType") = $iNumFormat) ? $iError : BitOR($iError, 1)
	$iError = ($iStartAt = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "StartWith") = $iStartAt) ? $iError : BitOR($iError, 2)
	$iError = ($sCharStyle = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "CharStyleName") = $sCharStyle) ? $iError : BitOR($iError, 4)
	$iError = ($iSubLevels = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "ParentNumbering") = $iSubLevels) ? $iError : BitOR($iError, 8)
	$iError = ($sSepBefore = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Prefix") = $sSepBefore) ? $iError : BitOR($iError, 16)
	$iError = ($sSepAfter = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Suffix") = $sSepAfter) ? $iError : BitOR($iError, 32)
	$iError = ($bConsecutiveNum = Null) ? $iError : ($oNumStyle.NumberingRules.IsContinuousNumbering = $bConsecutiveNum) ? $iError : BitOR($iError, 64)
	$iError = ($sBulletFont = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "BulletFont").Name() = $sBulletFont) ? $iError : BitOR($iError, 128)
	$iError = ($iCharDecimal = Null) ? $iError : (Asc(__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "BulletChar")) = $iCharDecimal) ? $iError : BitOR($iError, 256)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_NumStyleCustomize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleDelete
; Description ...: Delete a User-Created Numbering Style from a Document.
; Syntax ........: _LOWriter_NumStyleDelete(Byref $oDoc, $oNumStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oNumStyle           - [in/out] an object. A Numbering Style object returned by previous NumStyle Create or
;				   +						Object Retrieval function.
; Return values .:   Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oNumStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oNumStyle not a Num Style Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "NumberingStyles" Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Numbering Style Name.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $sNumStyle is not a User-Created Numbering Style and cannot be deleted.
;				   @Error 3 @Extended 2 Return 0 = $sNumStyle is in use.
;				   @Error 3 @Extended 3 Return 0 = $sNumStyle still exists after deletion attempt.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. $sNumStyle was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_NumStyleCreate, _LOWriter_NumStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleDelete(ByRef $oDoc, $oNumStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oNumStyles
	Local $sNumStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oNumStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oNumStyles = $oDoc.StyleFamilies().getByName("NumberingStyles")
	If Not IsObj($oNumStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$sNumStyle = $oNumStyle.Name()
	If Not IsString($sNumStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not $oNumStyle.isUserDefined() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If $oNumStyle.isInUse() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; If Style is in use return an error unless force delete is true.

	$oNumStyles.removeByName($sNumStyle)

	Return ($oNumStyles.hasByName($sNumStyle)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_NumStyleDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleExists
; Description ...: Check whether a specified Numbering Style is available in a Document to use.
; Syntax ........: _LOWriter_NumStyleExists(Byref $oDoc, $sNumStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sNumStyle           - a string value. a Numbering Style name to search for.
; Return values .:  Success: Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sNumStyle not a String.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean  = Success. Returns True if Numbering Style exists in the document,
;				   +										 else False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleExists(ByRef $oDoc, $sNumStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $oDoc.StyleFamilies.getByName("NumberingStyles").hasByName($sNumStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_NumStyleExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleStyleGetObj
; Description ...: Retrieve a Numbering Style Style Object for use with other  Numbering Style Style functions.
; Syntax ........: _LOWriter_NumStyleStyleGetObj(Byref $oDoc, $sNumStyle)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sNumStyle           - a string value. The Numbering Style Style name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sNumbering StyleStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = Numbering Style Style defined in $sNumbering StyleStyle not found in
;				   +										Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Numbering Style Style Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Numbering Style Style successfully retrieved, returning
;				   +										Style Numbering Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_NumStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleGetObj(ByRef $oDoc, $sNumStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oNumStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_NumStyleExists($oDoc, $sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oNumStyle = $oDoc.StyleFamilies().getByName("NumberingStyles").getByName($sNumStyle)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oNumStyle)
EndFunc   ;==>_LOWriter_NumStyleGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleOrganizer
; Description ...: Set or retrieve the Organizer settings of a Numbering Style.
; Syntax ........: _LOWriter_NumStyleOrganizer(Byref $oDoc, $oNumStyle[, $sNewNumStyleName = Null[, $bHidden = Null]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oNumStyle           - [in/out] an object. A Numbering Style object returned by previous NumStyle Create or
;				   +						Object Retrieval function.
;                  $sNewNumStyleName    - [optional] a string value. Default is Null. The new name to set $sNumStyle page
;				   +						style to.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether to hide the style in the UI.
; Return values .:   Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oNumStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oNumStyle not a Num Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sNewNumStyleName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sNewNumStyleName already exists in document.
;				   @Error 1 @Extended 6 Return 0 = $bHidden not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $sNewParStyleName
;				   |								2 = Error setting $bHidden
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 1 or 2 Element Array with values in order of function
;				   +								parameters. If the Libre Office version is below 4.0, the Array will contain
;				   +								1 element because $bHidden is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_NumStyleCreate, _LOWriter_NumStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleOrganizer(ByRef $oDoc, $oNumStyle, $sNewNumStyleName = Null, $bHidden = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOrganizer[1]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oNumStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($sNewNumStyleName, $bHidden) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avOrganizer, $oNumStyle.Name(), $oNumStyle.Hidden())
		Else
			__LOWriter_ArrayFill($avOrganizer, $oNumStyle.Name())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOrganizer)
	EndIf

	If ($sNewNumStyleName <> Null) Then
		If Not IsString($sNewNumStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If _LOWriter_NumStyleExists($oDoc, $sNewNumStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oNumStyle.Name = $sNewNumStyleName
		$iError = ($oNumStyle.Name() = $sNewNumStyleName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bHidden <> Null) Then
		If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oNumStyle.Hidden = $bHidden
		$iError = ($oNumStyle.Hidden() = $bHidden) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_NumStyleOrganizer

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStylePosition
; Description ...: Retrieve and Set Numbering Style Position settings. See Remarks.
; Syntax ........: _LOWriter_NumStylePosition(Byref $oDoc, $sNumStyle, $iLevel[, $iAlignedAt = Null[, $iNumAlign = Null[, $iFollowedBy = Null[, $iTabstop = Null[, $iIndent = Null]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oNumStyle           - [in/out] an object. A Numbering Style object returned by previous NumStyle Create or
;				   +						Object Retrieval function.
;                  $iLevel              - an integer value. The Numbering Level to modify; enter 0 to modify all of them.
;                  $iAlignedAt          - [optional] an integer value. Default is Null. Specifies the first line indent. Set in
;				   +						Micrometers.
;                  $iNumAlign           - [optional] an integer value. Default is Null. The alignment of the numbering symbols.
;				   +									in comparison to the "Aligned at" position. See Constants.
;                  $iFollowedBy         - [optional] an integer value. Default is Null. Select the element that will follow the
;				   +									numbering: a tab stop, a space, or nothing; See Constants.
;                  $iTabstop            - [optional] an integer value. Default is Null. If you select a tab stop to follow the
;				   +									numbering, you can enter a non-negative value as the tab stop position.
;				   +									Set in Micrometers.
;                  $iIndent             - [optional] an integer value. Default is Null. Enter the distance from the left page
;				   +									margin to the start of all lines in the numbered paragraph that follow
;				   +									the first line. Set in Micrometers.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oNumStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oNumStyle not a Num Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iLevel not between 0 - 10.
;				   @Error 1 @Extended 5 Return 0 = $iAlignedAt not an integer.
;				   @Error 1 @Extended 6 Return 0 = $iNumAlign Not an integer, less than 1 or higher than 3. See Constants list.
;				   @Error 1 @Extended 7 Return 0 = $iFollowedBy Not an integer, less than 0 or higher than 2. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iTabstop Not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $iIndent Not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving NumberingRules Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving NumberingRules Object for error checking.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error retrieving current settings, $iLevel set to 0, cannot retrieve settings
;				   +								for more than one level at a time.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAlignedAt
;				   |								2 = Error setting $iNumAlign
;				   |								4 = Error setting $iFollowedBy
;				   |								8 = Error setting $iTabStop
;				   |								16 = Error setting $iIndent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Successfully set the requested Properties.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  This function should work just fine as the others do for modifying styles, but for setting Numbering Style
;						settings, it would seem that the Array of Setting Objects passed by Autoit is not recognized as an
;						appropriate array/Sequence by LibreOffice, and consequently causes a
;						com.sun.star.lang.IllegalArgumentException COM error. See __LOWriter_NumStyleModify function for a more
;						detailed explanation. This function can still be used to set and retrieve, setting values, however now,
;						this function either inserts a temporary macro into $oDoc for performing the needed procedure, or if
;						that fails, it invisibly opens an .odt Libre document and inserts a macro, (see
;						__LOWriter_NumStyleInitiateDocument), which is then called with the necessary parameters to set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings. Note: You can only request setting values for one numbering level at a time,
;						you aren't able to call $iLevel with 0 to retrieve all at once.
;					Call any optional parameter with Null keyword to skip it.
;Number Alignment Constants: $LOW_ORIENT_HORI_RIGHT(1),
;								$LOW_ORIENT_HORI_CENTER(2),
;								$LOW_ORIENT_HORI_LEFT(3)
;Followed By Constants: $LOW_FOLLOW_BY_TABSTOP(0),
;							$LOW_FOLLOW_BY_SPACE(1),
;							$LOW_FOLLOW_BY_NOTHING(2),
;							$LOW_FOLLOW_BY_NEWLINE(3)
; Related .......: _LOWriter_NumStyleCreate, _LOWriter_NumStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStylePosition(ByRef $oDoc, $oNumStyle, $iLevel, $iAlignedAt = Null, $iNumAlign = Null, $iFollowedBy = Null, $iTabStop = Null, $iIndent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oNumRules
	Local $iError = 0
	Local $aNumSettings[5][2]
	Local $iRowCount = 0
	Local $avPosition[5]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oNumStyle.supportsService("com.sun.star.style.Style") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IntIsBetween($iLevel, 0, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iLevel = ($iLevel - 1) ; Numbering Levels are  0 based, minus 1 to compensate.

	$oNumRules = $oNumStyle.NumberingRules()
	If Not IsObj($oNumRules) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iAlignedAt, $iNumAlign, $iFollowedBy, $iTabStop, $iIndent) Then
		If ($iLevel = -1) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ; only get settings for one level at a time.
		__LOWriter_ArrayFill($avPosition, __LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "FirstLineIndent"), _
				__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Adjust"), _
				__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "LabelFollowedBy"), _
				__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "ListtabStopPosition"), _
				__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "IndentAt"))

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avPosition)
	EndIf

	If ($iAlignedAt <> Null) Then
		If Not IsInt($iAlignedAt) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$aNumSettings[$iRowCount][0] = "FirstLineIndent"
		$aNumSettings[$iRowCount][1] = $iAlignedAt
		$iRowCount += 1
	EndIf

	If ($iNumAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumAlign, $LOW_ORIENT_HORI_RIGHT, $LOW_ORIENT_HORI_LEFT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$aNumSettings[$iRowCount][0] = "Adjust"
		$aNumSettings[$iRowCount][1] = $iNumAlign
		$iRowCount += 1
	EndIf

	If ($iFollowedBy <> Null) Then
		If Not __LOWriter_IntIsBetween($iFollowedBy, $LOW_FOLLOW_BY_TABSTOP, $LOW_FOLLOW_BY_NEWLINE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$aNumSettings[$iRowCount][0] = "LabelFollowedBy"
		$aNumSettings[$iRowCount][1] = $iFollowedBy
		$iRowCount += 1
	EndIf

	If ($iTabStop <> Null) Then
		If Not IsInt($iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$aNumSettings[$iRowCount][0] = "ListtabStopPosition"
		$aNumSettings[$iRowCount][1] = $iTabStop
		$iRowCount += 1
	EndIf

	If ($iIndent <> Null) Then
		If Not IsInt($iIndent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$aNumSettings[$iRowCount][0] = "IndentAt"
		$aNumSettings[$iRowCount][1] = $iIndent
		$iRowCount += 1
	EndIf

	ReDim $aNumSettings[$iRowCount][2]

	__LOWriter_NumStyleModify($oDoc, $oNumRules, $iLevel, $aNumSettings)

	$oNumStyle.NumberingRules = $oNumRules

	;Error Checking:
	$oNumRules = $oNumStyle.NumberingRules()
	If Not IsObj($oNumRules) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$iLevel = ($iLevel = -1) ? 9 : $iLevel ;If Level is set to -1 (modify all), set to last level to check the settings.

	$iError = ($iAlignedAt = Null) ? $iError : (__LOWriter_IntIsBetween(__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "FirstLineIndent"), $iAlignedAt - 1, $iAlignedAt + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iNumAlign = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "Adjust") = $iNumAlign) ? $iError : BitOR($iError, 2)
	$iError = ($iFollowedBy = Null) ? $iError : (__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "LabelFollowedBy") = $iFollowedBy) ? $iError : BitOR($iError, 4)
	$iError = ($iTabStop = Null) ? $iError : (__LOWriter_IntIsBetween(__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "ListtabStopPosition"), $iTabStop - 1, $iTabStop + 1)) ? $iError : BitOR($iError, 8)
	$iError = ($iIndent = Null) ? $iError : (__LOWriter_IntIsBetween(__LOWriter_NumStyleRetrieve($oNumRules, $iLevel, "IndentAt"), $iIndent - 1, $iIndent + 1)) ? $iError : BitOR($iError, 16)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_NumStylePosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleSet
; Description ...: Set a numbering style for a paragraph by Cursor or paragraph Object.
; Syntax ........: _LOWriter_NumStyleSet(Byref $oDoc, Byref $oObj, $sNumStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oObj                - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
;                  $sNumStyle           - a string value. The Numbering Style name.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oObj does not support Paragraph Properties Service.
;				   @Error 1 @Extended 4 Return 0 = $sNumStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = Numbering Style defined in $sNumStyle doesn't exist in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Numbering Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Numbering Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParObjCreateList, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor,
;					_LOWriter_NumStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleSet(ByRef $oDoc, ByRef $oObj, $sNumStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oObj.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not _LOWriter_NumStyleExists($oDoc, $sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	$oObj.NumberingStyleName = $sNumStyle
	Return ($oObj.NumberingStyleName() = $sNumStyle) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

EndFunc   ;==>_LOWriter_NumStyleSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStyleSetLevel
; Description ...: Set the numbering style level for a paragraph by Cursor or paragraph Object.
; Syntax ........: _LOWriter_NumStyleSetLevel(Byref $oDoc, Byref $oObj[, $iLevel = Null])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oObj                - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
;                  $iLevel              - [optional] an integer value. Default is Null. The Numbering Style level to set the
;											paragraph to, Min 1, Max 10. Set to Null to retrieve the current level set.
; Return values .: Success: 1 or Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oObj does not support Paragraph Properties Service.
;				   @Error 1 @Extended 4 Return 0 = $iLevel not an Integer, less than 1 or greater than 10.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Numbering Style level.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Numbering Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParObjCreateList, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor, _LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStyleSetLevel(ByRef $oDoc, ByRef $oObj, $iLevel = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oObj.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IntIsBetween($iLevel, 1, 10) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	If ($iLevel = Null) Then Return SetError($__LOW_STATUS_SUCCESS, 1, ($oObj.NumberingLevel() + 1)) ;Plus one to compensate for Levels being 0 Based.

	$iLevel -= 1 ;Level is 0 Based, minus one to compensate.

	$oObj.NumberingLevel = $iLevel

	Return ($oObj.NumberingLevel() = $iLevel) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_NumStyleSetLevel

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_NumStylesGetNames
; Description ...: Retrieve a list of all Numbering Style names available for a document.
; Syntax ........: _LOWriter_NumStylesGetNames(Byref $oDoc[, $bUserOnly = False[, $bAppliedOnly = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True only User-Created Numbering
;				   +						Styles are returned.
;                  $bAppliedOnly        - [optional] a boolean value. Default is False. If True only Applied Numbering Styles
;				   +						are returned.
; Return values .: ; Success: Integer or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAppliedOnly not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Numbering Styles Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 0 = Success. No Numbering Styles found according to parameters.
;				   @Error 0 @Extended ? Return Array = Success. An Array containing all Numbering Styles matching the
;				   +		input parameters. @Extended contains the count of results returned. If Only a Document object is
;				   +		input, all available Numbering styles will be returned. Else if $bUserOnly is set to True, only
;				   +		User-Created Numbering Styles are returned. Else, only Applied Numbering Styles are returned. If
;				   +		Both are true then only User-Created Numbering styles that are applied are returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_NumStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_NumStylesGetNames(ByRef $oDoc, $bUserOnly = False, $bAppliedOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCount = 0
	Local $sExecute = ""
	Local $aStyles[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bAppliedOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	Local $oStyles = $oDoc.StyleFamilies.getByName("NumberingStyles")
	If Not IsObj($oStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $aStyles[$oStyles.getCount()]

	If Not $bUserOnly And Not $bAppliedOnly Then
		For $i = 0 To $oStyles.getCount() - 1
			$aStyles[$i] = $oStyles.getByIndex($i).Name() ;DisplayName -- Can't use Display name due to special characters.
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		Return SetError($__LOW_STATUS_SUCCESS, $i, $aStyles)
	EndIf

	$sExecute = ($bUserOnly) ? "($oStyles.getByIndex($i).isUserDefined())" : $sExecute
	$sExecute = ($bUserOnly And $bAppliedOnly) ? ($sExecute & " And ") : $sExecute
	$sExecute = ($bAppliedOnly) ? ($sExecute & "($oStyles.getByIndex($i).isInUse())") : $sExecute

	For $i = 0 To $oStyles.getCount() - 1
		If Execute($sExecute) Then
			$aStyles[$iCount] = $oStyles.getByIndex($i).Name() ;DisplayName
			$iCount += 1
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	ReDim $aStyles[$iCount]

	Return ($iCount = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_SUCCESS, $iCount, $aStyles)
EndFunc   ;==>_LOWriter_NumStylesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleAreaColor
; Description ...: Set or Retrieve background color settings for a Page style.
; Syntax ........: _LOWriter_PageStyleAreaColor(Byref $oPageStyle[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value. Set to
;				   +							$LOW_COLOR_OFF(-1) for "None".
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 4 Return 0 = $bBackTransparent not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Note: If transparency is set, it can cause strange values to be displayed for Background color.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleAreaColor(ByRef $oPageStyle, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oPageStyle.BackColor(), $oPageStyle.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.BackColor = $iBackColor
		$iError = ($oPageStyle.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.BackTransparent = $bBackTransparent
		$iError = ($oPageStyle.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_PageStyleAreaColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleAreaGradient
; Description ...: Modify or retrieve the settings for Page Style BackGround color Gradient.
; Syntax ........: _LOWriter_PageStyleAreaGradient(Byref $oDoc, Byref $oPageStyle[, $sGradientName = Null[, $iType = Null[, $iIncrement = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iFromColor = Null[, $iToColor = Null[, $iFromIntense = Null[, $iToIntense = Null ]]]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $sGradientName       - [optional] a string value. Default is Null. A Preset Gradient Name. See Constants List.
;				   +								See remarks.
;                  $iType               - [optional] an integer value. Default is Null. The gradient that you want to apply. See
;				   +						Constants List.
;                  $iIncrement          - [optional] an integer value. Default is Null. Specifies the number of steps of change
;				   +						color. Allowed values are: 0, 3 to 256. 0 = Automatic.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the
;				   +						gradient, where 0% corresponds to the current horizontal location of the endpoint
;				   +						color in the gradient. The endpoint color is the color that is selected in the
;				   +						"To Color" setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient,
;				   +						where 0% corresponds to the current vertical location of the endpoint color in the
;				   +						gradient. The endpoint color is the color that is selected in the "To Color"
;				   +						Setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than "Linear",
;				   +						or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iFromColor          - [optional] an integer value. Default is Null. A color for the beginning point of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iToColor            - [optional] an integer value. Default is Null. A color for the endpoint of the gradient,
;				   +						set in Long Color Integer format. Can be one of the below Constants or a custom
;				   +						value.
;                  $iFromIntense        - [optional] an integer value. Default is Null. Enter the intensity for the color in the
;				   +						"From Color", where 0% corresponds to black, and 100 % to the selected color. Min.
;				   +						0%, Max 100%
;                  $iToIntense          - [optional] an integer value. Default is Null . Enter the intensity for the color in the
;				   +						"To Color", where 0% corresponds to black, and 100 % to the selected color. Min. 0%,
;				   +						Max 100%
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sGradientName Not a String.
;				   @Error 1 @Extended 5 Return 0 = $iType Not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iIncrement Not an Integer, less than 3 but not 0, or greater than 256.
;				   @Error 1 @Extended 7 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 10 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 11 Return 0 = $iFromColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 12 Return 0 = $iToColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 13 Return 0 = $iFromIntense Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 14 Return 0 = $iToIntense Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillGradient" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024
;				   |								1 = Error setting $sGradientName
;				   |								2 = Error setting $iType
;				   |								4 = Error setting $iIncrement
;				   |								8 = Error setting $iXCenter
;				   |								16 = Error setting $iYCenter
;				   |								32 = Error setting $iAngle
;				   |								64 = Error setting $iBorder
;				   |								128 = Error setting $iFromColor
;				   |								256 = Error setting $iToColor
;				   |								512 = Error setting $iFromIntense
;				   |								1024 = Error setting $iToIntense
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 11 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: Gradient Name has no use other than for applying a pre-existing preset gradient.
;Gradient Name Constants: $LOW_GRAD_NAME_PASTEL_BOUQUET("Pastel Bouquet",
;							$LOW_GRAD_NAME_PASTEL_DREAM("Pastel Dream",
;							$LOW_GRAD_NAME_BLUE_TOUCH = "Blue Touch"),
;							$LOW_GRAD_NAME_BLANK_W_GRAY("Blank with Gray"),
;							$LOW_GRAD_NAME_SPOTTED_GRAY("Spotted Gray"),
;							$LOW_GRAD_NAME_LONDON_MIST("London Mist"),
;							$LOW_GRAD_NAME_TEAL_TO_BLUE("Teal to Blue"),
;							$LOW_GRAD_NAME_MIDNIGHT("Midnight"),
;							$LOW_GRAD_NAME_DEEP_OCEAN("Deep Ocean"),
;							$LOW_GRAD_NAME_SUBMARINE("Submarine"),
;							$LOW_GRAD_NAME_GREEN_GRASS("Green Grass"),
;							$LOW_GRAD_NAME_NEON_LIGHT("Neon Light"),
;							$LOW_GRAD_NAME_SUNSHINE("Sunshine"),
;							$LOW_GRAD_NAME_PRESENT("Present"),
;							$LOW_GRAD_NAME_MAHOGANY("Mahogany")
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleAreaGradient(ByRef $oDoc, ByRef $oPageStyle, $sGradientName = Null, $iType = Null, $iIncrement = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iFromColor = Null, $iToColor = Null, $iFromIntense = Null, $iToIntense = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $avGradient[11]
	Local $sGradName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$tStyleGradient = $oPageStyle.FillGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sGradientName, $iType, $iIncrement, $iXCenter, $iYCenter, $iAngle, $iBorder, $iFromColor, $iToColor, _
			$iFromIntense, $iToIntense) Then
		__LOWriter_ArrayFill($avGradient, $oPageStyle.FillGradientName(), $tStyleGradient.Style(), _
				$oPageStyle.FillGradientStepCount(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), ($tStyleGradient.Angle() / 10), _
				$tStyleGradient.Border(), $tStyleGradient.StartColor(), $tStyleGradient.EndColor(), $tStyleGradient.StartIntensity(), _
				$tStyleGradient.EndIntensity()) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGradient)
	EndIf

	If ($oPageStyle.FillStyle() <> $__LOWCONST_FILL_STYLE_GRADIENT) Then $oPageStyle.FillStyle = $__LOWCONST_FILL_STYLE_GRADIENT

	If ($sGradientName <> Null) Then
		If Not IsString($sGradientName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		__LOWriter_GradientPresets($oDoc, $oPageStyle, $tStyleGradient, $sGradientName)
		$iError = ($oPageStyle.FillGradientName() = $sGradientName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.FillStyle = $__LOWCONST_FILL_STYLE_OFF
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iIncrement <> Null) Then
		If Not __LOWriter_IntIsBetween($iIncrement, 3, 256, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.FillGradientStepCount = $iIncrement
		$tStyleGradient.StepCount = $iIncrement ; Must set both of these in order for it to take effect.
		$iError = ($oPageStyle.FillGradientStepCount() = $iIncrement) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iFromColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$tStyleGradient.StartColor = $iFromColor
	EndIf

	If ($iToColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iToColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$tStyleGradient.EndColor = $iToColor
	EndIf

	If ($iFromIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$tStyleGradient.StartIntensity = $iFromIntense
	EndIf

	If ($iToIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iToIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 14, 0)
		$tStyleGradient.EndIntensity = $iToIntense
	EndIf

	If ($oPageStyle.FillGradientName() = "") Then

		$sGradName = __LOWriter_GradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oPageStyle.FillGradientName = $sGradName
		If ($oPageStyle.FillGradientName <> $sGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oPageStyle.FillGradient = $tStyleGradient

	;Error checking
	$iError = ($iType = Null) ? $iError : ($oPageStyle.FillGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.FillGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.FillGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 16)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.FillGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 32)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.FillGradient.Border() = $iBorder) ? $iError : BitOR($iError, 64)
	$iError = ($iFromColor = Null) ? $iError : ($oPageStyle.FillGradient.StartColor() = $iFromColor) ? $iError : BitOR($iError, 128)
	$iError = ($iToColor = Null) ? $iError : ($oPageStyle.FillGradient.EndColor() = $iToColor) ? $iError : BitOR($iError, 256)
	$iError = ($iFromIntense = Null) ? $iError : ($oPageStyle.FillGradient.StartIntensity() = $iFromIntense) ? $iError : BitOR($iError, 512)
	$iError = ($iToIntense = Null) ? $iError : ($oPageStyle.FillGradient.EndIntensity() = $iToIntense) ? $iError : BitOR($iError, 1024)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleAreaGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleBorderColor
; Description ...: Set the Page Style Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_PageStyleBorderColor(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Page in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Page in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Page in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Page in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_PageStyleBorderWidth, _LOWriter_PageStyleBorderStyle,
;					_LOWriter_PageStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleBorderColor(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oPageStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleBorderPadding
; Description ...: Set or retrieve the Page Style Border Padding settings.
; Syntax ........: _LOWriter_PageStyleBorderPadding(Byref $oPageStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[,	$iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Page contents in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Page contents in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Page contents in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Page contents in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleBorderWidth, _LOWriter_PageStyleBorderStyle,
;					_LOWriter_PageStyleBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleBorderPadding(ByRef $oPageStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[5]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oPageStyle.BorderDistance(), $oPageStyle.TopBorderDistance(), _
				$oPageStyle.BottomBorderDistance(), $oPageStyle.LeftBorderDistance(), $oPageStyle.RightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iAll <> Null) Then
		If Not __LOWriter_IntIsBetween($iAll, 0, $iAll) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.BorderDistance = $iAll
		$iError = (__LOWriter_IntIsBetween($oPageStyle.BorderDistance(), $iAll - 1, $iAll + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.TopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oPageStyle.TopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageStyle.BottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oPageStyle.BottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.LeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oPageStyle.LeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.RightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.RightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleBorderStyle
; Description ...: Set or Retrieve the Page Style Border Line style. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_PageStyleBorderStyle(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Page using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Page using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Page using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Page using one of the line style constants, See below for list.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to 0x7FFF, Or
;				   +									$iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_PageStyleBorderWidt,
;					_LOWriter_PageStyleBorderColor, _LOWriter_PageStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleBorderStyle(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oPageStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleBorderWidth
; Description ...: Set or Retrieve the Page Style Border Line Width. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_PageStyleBorderWidth(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +						Page in MicroMeters. One of the predefined constants listed below can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Page in MicroMeters. One of the predefined constants listed below can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Page in MicroMeters. One of the predefined constants listed below can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Page in MicroMeters. One of the predefined constants listed below can be used.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set Width to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleBorderStyle, _LOWriter_PageStyleBorderColor,
;					_LOWriter_PageStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleBorderWidth(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oPageStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleColumnSeparator
; Description ...: Modify or retrieve Page Style Column Separator line settings.
; Syntax ........: _LOWriter_PageStyleColumnSeparator(Byref $oPageStyle[, $bSeparatorOn = Null[, $iStyle = Null[, $iWidth = Null[, $iColor = Null[, $iHeight = Null[, $iPosition = Null]]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $bSeparatorOn        - [optional] a boolean value. Default is Null. If true, add a separator line between
;				   +						two or more columns.
;                  $iStyle              - [optional] an integer value. Default is Null. The formatting style for the column
;				   +						separator line. See Constants below.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the separator line. Set in
;				   +						Micrometers, Min 5 uM, Max 180 uM.
;                  $iColor              - [optional] an integer value. Default is Null. The color for the separator line. Can be
;				   +						one of the below constants or a custom value.
;                  $iHeight             - [optional] an integer value. Default is Null. The length of the separator line as a
;				   +						percentage of the height of the column area. Min 0%, Max 100%.
;                  $iPosition           - [optional] an integer value. Default is Null. Select the vertical alignment of the
;				   +						separator line. This option is only available if Height value of the line is less
;				   +						than 100%. See Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bSeparatorOn not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $iStyle not an Integer, less than 0 or greater than 3. See constants.
;				   @Error 1 @Extended 5 Return 0 = $iWidth not an Integer, less than 5 or greater than 180.
;				   @Error 1 @Extended 6 Return 0 = $iColor not an Integer, less than 0 or greater than 16777215. See constants.
;				   @Error 1 @Extended 7 Return 0 = $iHeight not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iPosition not an Integer, less than 0 or greater than 2. See constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $bSeparatorOn
;				   |								2 = Error setting $iStyle
;				   |								4 = Error setting $iWidth
;				   |								8 = Error setting $iColor
;				   |								16 = Error setting $iHeight
;				   |								32 = Error setting $iPosition
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Line Style Constants: $LOW_LINE_STYLE_NONE(0),
;						$LOW_LINE_STYLE_SOLID(1),
;						$LOW_LINE_STYLE_DOTTED(2),
;						$LOW_LINE_STYLE_DASHED(3)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
;Line Position Constants: $LOW_ALIGN_VERT_TOP(0),
;							$LOW_ALIGN_VERT_MIDDLE(1),
;							$LOW_ALIGN_VERT_BOTTOM(2)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleColumnSeparator(ByRef $oPageStyle, $bSeparatorOn = Null, $iStyle = Null, $iWidth = Null, $iColor = Null, $iHeight = Null, $iPosition = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0
	Local $avColumnLine[6]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns = $oPageStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($bSeparatorOn, $iStyle, $iWidth, $iColor, $iHeight, $iPosition) Then
		__LOWriter_ArrayFill($avColumnLine, $oTextColumns.SeparatorLineIsOn(), $oTextColumns.SeparatorLineStyle(), $oTextColumns.SeparatorLineWidth(), _
				$oTextColumns.SeparatorLineColor(), $oTextColumns.SeparatorLineRelativeHeight(), $oTextColumns.SeparatorLineVerticalAlignment())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnLine)
	EndIf

	If ($bSeparatorOn <> Null) Then
		If Not IsBool($bSeparatorOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTextColumns.SeparatorLineIsOn = $bSeparatorOn
		$iError = ($oTextColumns.SeparatorLineIsOn() = $bSeparatorOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iStyle <> Null) Then
		If Not __LOWriter_IntIsBetween($iStyle, $LOW_LINE_STYLE_NONE, $LOW_LINE_STYLE_DASHED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oTextColumns.SeparatorLineStyle = $iStyle
		$iError = ($oTextColumns.SeparatorLineStyle() = $iStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidth, 5, 180) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTextColumns.SeparatorLineWidth = $iWidth
		$iError = (__LOWriter_IntIsBetween($oTextColumns.SeparatorLineWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTextColumns.SeparatorLineColor = $iColor
		$iError = ($oTextColumns.SeparatorLineColor() = $iColor) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeight, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oTextColumns.SeparatorLineRelativeHeight = $iHeight
		$iError = ($oTextColumns.SeparatorLineRelativeHeight() = $iHeight) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iPosition <> Null) Then
		If Not __LOWriter_IntIsBetween($iPosition, $LOW_ALIGN_VERT_TOP, $LOW_ALIGN_VERT_BOTTOM) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oTextColumns.SeparatorLineVerticalAlignment = $iPosition
		$iError = ($oTextColumns.SeparatorLineVerticalAlignment() = $iPosition) ? $iError : BitOR($iError, 32)
	EndIf

	$oPageStyle.TextColumns = $oTextColumns

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleColumnSeparator

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleColumnSettings
; Description ...: Modify or retrieve page style Column count.
; Syntax ........: _LOWriter_PageStyleColumnSettings(Byref $oPageStyle[, $iColumns = Null ])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iColumns            - [optional] an integer value. Default is Null. The number of columns that you want in
;				   +						the page. Minimum 1.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iColumns not an Integer or less than 1.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iColumns
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning current
;				   +								column count.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleColumnSettings(ByRef $oPageStyle, $iColumns = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $iError = 0

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oTextColumns = $oPageStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iColumns) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oTextColumns.ColumnCount())

	If Not __LOWriter_IntIsBetween($iColumns, 1, $iColumns) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oTextColumns.ColumnCount = $iColumns
	$oPageStyle.TextColumns = $oTextColumns

	$iError = ($oPageStyle.TextColumns.ColumnCount() = $iColumns) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleColumnSettings

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleColumnSize
; Description ...: Modify or retrieve Column sizing settings. See remarks.
; Syntax ........: _LOWriter_PageStyleColumnSize(Byref $oPageStyle, $iColumn[, $bAutoWidth = Null[, $iGlobalSpacing = Null[, $iSpacing = Null[, $iWidth = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iColumn             - an integer value. The column to modify the settings on. See Remarks.
;                  $bAutoWidth          - [optional] a boolean value. Default is Null. If True Column Width is automatically
;				   +						adjusted.
;                  $iGlobalSpacing      - [optional] an integer value. Default is Null. Set a spacing value for between all
;				   +						columns. Set in Micrometers. See remarks.
;                  $iSpacing            - [optional] an integer value. Default is Null. The Space between two columns, in
;				   +						Micrometers. Cannot be set for the last column.
;                  $iWidth              - [optional] an integer value. Default is Null. If $iGlobalSpacing is set to other than
;				   +						0, enter the width of the column. Set in Micrometers.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iColumn not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iColumn higher than number of columns in the document or less than 1.
;				   @Error 1 @Extended 5 Return 0 = $bAutoWidth not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iGlobalSpacing not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iSpacing not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iWidth not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Text Columns Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Page Style Column Object Array.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = No columns present for requested Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bAutoWidth
;				   |								2 = Error setting $iGlobalSpacing
;				   |								4 = Error setting $iSpacing
;				   |								8 = Error setting $iWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  NOTE: This function will work fine for setting AutoWidth, and Spacing values, however Width will not work the
;						best, Spacing etc is set in plain micrometer values, however width is set in a relative value, and I am
;						unable to find a way to be able to convert a specific value, such as 1" (2540 Micrometers) etc, to the
;						appropriate relative value, especially when spacing is set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: To set $bAutoWidth or $iGlobalSpacing you may enter any number in $iColumn as long as you are not
;						setting width or spacing, as AutoWidth is not column specific. If you set a value for $iGlobalSpacing
;						with $bAutoWidth set to false, the value is applied to all the columns still.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleColumnSize(ByRef $oPageStyle, $iColumn, $bAutoWidth = Null, $iGlobalSpacing = Null, $iSpacing = Null, $iWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTextColumns
	Local $atColumns
	Local $iError = 0, $iRightMargin, $iLeftMargin
	Local $avColumnSize[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oTextColumns = $oPageStyle.TextColumns()
	If Not IsObj($oTextColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$atColumns = $oTextColumns.Columns()
	If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	If ($oTextColumns.ColumnCount() <= 1) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If ($iColumn > UBound($atColumns)) Or ($iColumn < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$iColumn = $iColumn - 1 ;Libre Columns Array is 0 based -- Minus one to compensate

	If __LOWriter_VarsAreNull($bAutoWidth, $iGlobalSpacing, $iSpacing, $iWidth) Then

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If last column is called, there is no spacing value, so return the outter margin, which will be 0.
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin(), $atColumns[$iColumn].Width())
		Else
			__LOWriter_ArrayFill($avColumnSize, $oTextColumns.IsAutomatic, $oTextColumns.AutomaticDistance(), _
					$atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $atColumns[$iColumn].Width())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColumnSize)
	EndIf

	If ($bAutoWidth <> Null) Then
		If Not IsBool($bAutoWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

		If ($bAutoWidth <> $oTextColumns.IsAutomatic()) Then ;If Auto Width not already the same setting, then modify it.

			If ($bAutoWidth = True) Then
				; retrieve both outside column inner margin settings to add together for determining AutoWidth value.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? ($atColumns[0].RightMargin() + $atColumns[UBound($atColumns) - 1].LeftMargin()) : $iGlobalSpacing
				; If $iGlobalSpacing is not called with a value, set my own, else use the called value.

				$oTextColumns.ColumnCount = $oTextColumns.ColumnCount()
				$oPageStyle.TextColumns = $oTextColumns
				; Setting the number of columns activates the AutoWidth option, so set it to the same number of columns.

			Else ;If False
				; If GlobalSpacing isn't set, then set it myself to the current automatic distance.
				$iGlobalSpacing = ($iGlobalSpacing = Null) ? $oTextColumns.AutomaticDistance() : $iGlobalSpacing
				$oTextColumns.setColumns($atColumns) ;Inserting the Column Array(Sequence) again, even without changes, deactivates AutoWidth.

			EndIf
		EndIf

		$oPageStyle.TextColumns = $oTextColumns
		$iError = ($oPageStyle.TextColumns.IsAutomatic() = $bAutoWidth) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iGlobalSpacing <> Null) Then
		If Not IsInt($iGlobalSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTextColumns.AutomaticDistance = $iGlobalSpacing
		$oPageStyle.TextColumns = $oTextColumns

		If ($oPageStyle.TextColumns.IsAutomatic() = True) Then ;If AutoWidth is on (True) Then error test, else dont, because I use $iGlobalSpacing
			;for setting the width internally also.
			$iError = (__LOWriter_IntIsBetween($oPageStyle.TextColumns.AutomaticDistance(), $iGlobalSpacing - 2, $iGlobalSpacing + 2)) ? $iError : BitOR($iError, 2)
		EndIf
	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

		If ($iColumn = (UBound($atColumns) - 1)) Then ;If the requested column is the last column (furthest right), then set property setting error.
			;because spacing can't be set for the last column.
			$iError = BitOR($iError, 4)

		Else
			;Spacing is equally divided between the two ajoining columns, so set the first columns right margin,
			;and the next column's left margin to half of the spacing value each.
			$iRightMargin = Int($iSpacing / 2)
			$atColumns[$iColumn].RightMargin = $iRightMargin

			$iLeftMargin = Int($iSpacing - ($iSpacing / 2))
			$atColumns[$iColumn + 1].LeftMargin = $iLeftMargin

			;Set the settings into the document.
			$oTextColumns.setColumns($atColumns)
			$oPageStyle.TextColumns = $oTextColumns

			;Retrieve Array of columns again for testing.
			$atColumns = $oTextColumns.Columns()
			If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

			;See if setting spacing worked. Spacing is equally divided between the two ajoining columns, so retrieve the first columns right
			;margin, and the next column's left margin.
			$iError = (__LOWriter_IntIsBetween($atColumns[$iColumn].RightMargin() + $atColumns[$iColumn + 1].LeftMargin(), $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 4)
		EndIf
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$atColumns[$iColumn].Width = $iWidth

		;Set the settings into the document.
		$oTextColumns.setColumns($atColumns)
		$oPageStyle.TextColumns = $oTextColumns

		;Retrieve Array of columns again for testing.
		$atColumns = $oPageStyle.TextColumns.Columns()
		If Not IsArray($atColumns) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
		$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($atColumns[$iColumn].Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleColumnSize

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleCreate
; Description ...: Create a new Page Style in a Document.
; Syntax ........: _LOWriter_PageStyleCreate(Byref $oDoc, $sPageStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sPageStyle          - a string value. The Name of the New Page Style to Create.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sPageStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sPageStyle name already exists in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Retrieving "PageStyle" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Creating "com.sun.star.style.PageStyle" Object.
;				   @Error 2 @Extended 3 Return 0 = Error Retrieving Created Page Style Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating new Page Style by Name.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. New page Style successfully created. Returning Page Style
;				   +												Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_PageStyleDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleCreate(ByRef $oDoc, $sPageStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageStyles, $oStyle, $oPageStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oPageStyles = $oDoc.StyleFamilies().getByName("PageStyles")
	If Not IsObj($oPageStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyle = $oDoc.createInstance("com.sun.star.style.PageStyle")
	If Not IsObj($oStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oPageStyles.insertByName($sPageStyle, $oStyle)

	If Not $oPageStyles.hasByName($sPageStyle) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oPageStyle = $oPageStyles.getByName($sPageStyle)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPageStyle)
EndFunc   ;==>_LOWriter_PageStyleCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleDelete
; Description ...: Delete a User-Created Page Style from a Document.
; Syntax ........: _LOWriter_PageStyleDelete(Byref $oDoc, $oPageStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function Must be User-Created, not a built-in Style native to
;				   +						Libre-Office.
; Return values .:  Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "PageStyles" Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Page Style Name.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $oPageStyle is not a User-Created Page Style and cannot be deleted.
;				   @Error 3 @Extended 2 Return 0 = $oPageStyle is in use.
;				   @Error 3 @Extended 3 Return 0 = $oPageStyle still exists after deletion attempt.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Page Style called in $oPageStyle was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleDelete(ByRef $oDoc, $oPageStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageStyles
	Local $sPageStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oPageStyles = $oDoc.StyleFamilies().getByName("PageStyles")
	If Not IsObj($oPageStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$sPageStyle = $oPageStyle.Name()
	If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not $oPageStyle.isUserDefined() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If $oPageStyle.isInUse() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; If Style is in use return an error.

	$oPageStyles.removeByName($sPageStyle)

	Return ($oPageStyles.hasByName($sPageStyle)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleExists
; Description ...: Check whether a document contains the requested Page Style by Name.
; Syntax ........: _LOWriter_PageStyleExists(Byref $oDoc, $sPageStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sPageStyle          - a string value. The Page Style Name
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object,
;				   @Error 1 @Extended 2 Return 0 = $sPageStyle not a String
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean  = Success. If PageStyle exists then True is returned, else, False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleExists(ByRef $oDoc, $sPageStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If $oDoc.StyleFamilies.getByName("PageStyles").hasByName($sPageStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_PageStyleExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooter
; Description ...: Modify or retrieve Footer settings for a page style.
; Syntax ........: _LOWriter_PageStyleFooter(Byref $oPageStyle[, $bFooterOn = Null[, $bSameLeftRight = Null[, $bSameOnFirst = Null[, $iLeftMargin = Null[, $iRightMargin = Null[, $iSpacing = Null[, $bDynamicSpacing = Null[, $iHeight = Null[, $bAutoHeight = Null]]]]]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $bFooterOn           - [optional] a boolean value. Default is Null. If True, adds a footer to the
;				   +						page style.
;                  $bSameLeftRight      - [optional] a boolean value. Default is Null. If True, Even and odd pages share the
;				   +						same content.
;                  $bSameOnFirst        - [optional] a boolean value. Default is Null. If True, First and even/odd pages share
;				   +						the same content. LibreOffice 4.0 and up.
;                  $iLeftMargin         - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						left edge of the page and the left edge of the footer. Set in Micrometers.
;                  $iRightMargin        - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						right edge of the page and the right edge of the footer. Set in Micrometers.
;                  $iSpacing            - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						maintain between the bottom edge of the document text and the top edge of the
;				   +						footer. Set in Micrometers.
;                  $bDynamicSpacing     - [optional] a boolean value. Default is Null. If True, Overrides the Spacing setting
;				   +						and allows the footer to expand into the area between the footer and document text.
;                  $iHeight             - [optional] an integer value. Default is Null. The height you want for the footer. Set
;				   +						in Micrometers.
;                  $bAutoHeight         - [optional] a boolean value. Default is Null. Automatically adjusts the height of the
;				   +						footer to fit the content you enter.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bFooterOn not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $bSameLeftRight not a Boolean value.
;				   @Error 1 @Extended 5 Return 0 = $bSameOnFirst not a Boolean value.
;				   @Error 1 @Extended 6 Return 0 = $iLeftMargin not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRightMargin not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iSpacing not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $bDynamicSpacing not a Boolean value.
;				   @Error 1 @Extended 10 Return 0 = $iHeight not an Integer.
;				   @Error 1 @Extended 11 Return 0 = $bAutoHeight not a Boolean value.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $bFooterOn
;				   |								2 = Error setting $bSameLeftRight
;				   |								4 = Error setting $bSameOnFirst
;				   |								8 = Error setting $iLeftMargin
;				   |								16 = Error setting $iRightMargin
;				   |								32= Error setting $iSpacing
;				   |								64 = Error setting $bDynamicSpacing
;				   |								128 = Error setting $iHeight
;				   |								256 = Error setting $bAutoHeight
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 8 or 9 Element Array with values in order of function
;				   +								parameters. If Libre Office version is less than 4.0, then the Array
;				   +								returned will contain 8 elements, because $bSameOnFirst will not be
;				   +								available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooter(ByRef $oPageStyle, $bFooterOn = Null, $bSameLeftRight = Null, $bSameOnFirst = Null, $iLeftMargin = Null, $iRightMargin = Null, $iSpacing = Null, $bDynamicSpacing = Null, $iHeight = Null, $bAutoHeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFooter[8]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bFooterOn, $bSameLeftRight, $bSameOnFirst, $iLeftMargin, $iRightMargin, $iSpacing, $bDynamicSpacing, _
			$iHeight, $bAutoHeight) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avFooter, $oPageStyle.FooterIsOn(), $oPageStyle.FooterIsShared(), $oPageStyle.FirstIsShared(), $oPageStyle.FooterLeftMargin(), _
					$oPageStyle.FooterRightMargin(), $oPageStyle.FooterBodyDistance(), $oPageStyle.FooterDynamicSpacing(), $oPageStyle.FooterHeight(), _
					$oPageStyle.FooterIsDynamicHeight())
		Else
			__LOWriter_ArrayFill($avFooter, $oPageStyle.FooterIsOn(), $oPageStyle.FooterIsShared(), $oPageStyle.FooterLeftMargin(), _
					$oPageStyle.FooterRightMargin(), $oPageStyle.FooterBodyDistance(), $oPageStyle.FooterDynamicSpacing(), $oPageStyle.FooterHeight(), _
					$oPageStyle.FooterIsDynamicHeight())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFooter)
	EndIf

	If ($bFooterOn <> Null) Then
		If Not IsBool($bFooterOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.FooterIsOn = $bFooterOn
		$iError = ($oPageStyle.FooterIsOn() = $bFooterOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bSameLeftRight <> Null) Then
		If Not IsBool($bSameLeftRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.FooterIsShared = $bSameLeftRight
		$iError = ($oPageStyle.FooterIsShared() = $bSameLeftRight) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bSameOnFirst <> Null) Then
		If Not IsBool($bSameOnFirst) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.FirstIsShared = $bSameOnFirst
		$iError = ($oPageStyle.FirstIsShared() = $bSameOnFirst) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeftMargin <> Null) Then
		If Not IsInt($iLeftMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.FooterLeftMargin = $iLeftMargin
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterLeftMargin(), $iLeftMargin - 1, $iLeftMargin + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRightMargin <> Null) Then
		If Not IsInt($iRightMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.FooterRightMargin = $iRightMargin
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterRightMargin(), $iRightMargin - 1, $iRightMargin + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oPageStyle.FooterBodyDistance = $iSpacing
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterBodyDistance(), $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 32)
	EndIf

	If ($bDynamicSpacing <> Null) Then
		If Not IsBool($bDynamicSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oPageStyle.FooterDynamicSpacing = $bDynamicSpacing
		$iError = ($oPageStyle.FooterDynamicSpacing() = $bDynamicSpacing) ? $iError : BitOR($iError, 64)
	EndIf

	If ($iHeight <> Null) Then
		If Not IsInt($iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oPageStyle.FooterHeight = $iHeight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterHeight(), $iHeight - 1, $iHeight + 1)) ? $iError : BitOR($iError, 128)
	EndIf

	If ($bAutoHeight <> Null) Then
		If Not IsBool($bAutoHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oPageStyle.FooterIsDynamicHeight = $bAutoHeight
		$iError = ($oPageStyle.FooterIsDynamicHeight() = $bAutoHeight) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooter

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterAreaColor
; Description ...: Set or Retrieve background color settings for a Page style Footer.
; Syntax ........: _LOWriter_PageStyleFooterAreaColor(Byref $oPageStyle[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value. Set to
;				   +							$LOW_COLOR_OFF(-1) for "None".
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 4 Return 0 = $bBackTransparent not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Note: If transparency is set, it can cause strange values to be displayed for Background color.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterAreaColor(ByRef $oPageStyle, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oPageStyle.FooterBackColor(), $oPageStyle.FooterBackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.FooterBackColor = $iBackColor
		$iError = ($oPageStyle.FooterBackColor() = $iBackColor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.FooterBackTransparent = $bBackTransparent
		$iError = ($oPageStyle.FooterBackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterAreaColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterAreaGradient
; Description ...: Modify or retrieve the settings for Page Style Footer BackGround color Gradient.
; Syntax ........: _LOWriter_PageStyleFooterAreaGradient(Byref $oDoc, Byref $oPageStyle[, $sGradientName = Null[, $iType = Null[, $iIncrement = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iFromColor = Null[, $iToColor = Null[, $iFromIntense = Null[, $iToIntense = Null]]]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $sGradientName       - [optional] a string value. Default is Null. A Preset Gradient Name. See Constants
;				   +								List. See remarks.
;                  $iType               - [optional] an integer value. Default is Null. The gradient that you want to apply. See
;				   +						Constants List.
;                  $iIncrement          - [optional] an integer value. Default is Null. Specifies the number of steps of change
;				   +						color. Allowed values are: 0, 3 to 256. 0 = Automatic.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the
;				   +						gradient, where 0% corresponds to the current horizontal location of the endpoint
;				   +						color in the gradient. The endpoint color is the color that is selected in the
;				   +						"To Color" setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient,
;				   +						where 0% corresponds to the current vertical location of the endpoint color in the
;				   +						gradient. The endpoint color is the color that is selected in the "To Color"
;				   +						Setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than "Linear",
;				   +						or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iFromColor          - [optional] an integer value. Default is Null. A color for the beginning point of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iToColor            - [optional] an integer value. Default is Null. A color for the endpoint of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iFromIntense        - [optional] an integer value. Default is Null. Enter the intensity for the color in
;				   +						"From Color", where 0% corresponds to black, and 100 % to the selected color. Min.
;				   +						0%, Max 100%
;                  $iToIntense          - [optional] an integer value. Default is Null. Enter the intensity for the color in
;				   +						"To Color", where 0% corresponds to black, and 100 % to the selected color. Min. 0%,
;				   +						Max 100%
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sGradientName Not a String.
;				   @Error 1 @Extended 5 Return 0 = $iType Not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iIncrement Not an Integer, less than 3 but not 0, or greater than 256.
;				   @Error 1 @Extended 7 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 10 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 11 Return 0 = $iFromColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 12 Return 0 = $iToColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 13 Return 0 = $iFromIntense Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 14 Return 0 = $iToIntense Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillGradient" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   @Error 3 @Extended 2 Return 0 = Error creating Gradient Name.
;				   @Error 3 @Extended 3 Return 0 = Error setting Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024
;				   |								1 = Error setting $sGradientName
;				   |								2 = Error setting $iType
;				   |								4 = Error setting $iIncrement
;				   |								8 = Error setting $iXCenter
;				   |								16 = Error setting $iYCenter
;				   |								32 = Error setting $iAngle
;				   |								64 = Error setting $iBorder
;				   |								128 = Error setting $iFromColor
;				   |								256 = Error setting $iToColor
;				   |								512 = Error setting $iFromIntense
;				   |								1024 = Error setting $iToIntense
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 11 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: Gradient Name has no use other than for applying a pre-existing preset gradient.
;Gradient Name Constants: $LOW_GRAD_NAME_PASTEL_BOUQUET("Pastel Bouquet",
;							$LOW_GRAD_NAME_PASTEL_DREAM("Pastel Dream",
;							$LOW_GRAD_NAME_BLUE_TOUCH = "Blue Touch"),
;							$LOW_GRAD_NAME_BLANK_W_GRAY("Blank with Gray"),
;							$LOW_GRAD_NAME_SPOTTED_GRAY("Spotted Gray"),
;							$LOW_GRAD_NAME_LONDON_MIST("London Mist"),
;							$LOW_GRAD_NAME_TEAL_TO_BLUE("Teal to Blue"),
;							$LOW_GRAD_NAME_MIDNIGHT("Midnight"),
;							$LOW_GRAD_NAME_DEEP_OCEAN("Deep Ocean"),
;							$LOW_GRAD_NAME_SUBMARINE("Submarine"),
;							$LOW_GRAD_NAME_GREEN_GRASS("Green Grass"),
;							$LOW_GRAD_NAME_NEON_LIGHT("Neon Light"),
;							$LOW_GRAD_NAME_SUNSHINE("Sunshine"),
;							$LOW_GRAD_NAME_PRESENT("Present"),
;							$LOW_GRAD_NAME_MAHOGANY("Mahogany")
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterAreaGradient(ByRef $oDoc, ByRef $oPageStyle, $sGradientName = Null, $iType = Null, $iIncrement = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iFromColor = Null, $iToColor = Null, $iFromIntense = Null, $iToIntense = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $avGradient[11]
	Local $sGradName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$tStyleGradient = $oPageStyle.FooterFillGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sGradientName, $iType, $iIncrement, $iXCenter, $iYCenter, $iAngle, $iBorder, $iFromColor, $iToColor, _
			$iFromIntense, $iToIntense) Then
		__LOWriter_ArrayFill($avGradient, $oPageStyle.FooterFillGradientName(), $tStyleGradient.Style(), _
				$oPageStyle.FooterFillGradientStepCount(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), ($tStyleGradient.Angle() / 10), _
				$tStyleGradient.Border(), $tStyleGradient.StartColor(), $tStyleGradient.EndColor(), $tStyleGradient.StartIntensity(), _
				$tStyleGradient.EndIntensity()) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGradient)
	EndIf

	If ($oPageStyle.FooterFillStyle() <> $__LOWCONST_FILL_STYLE_GRADIENT) Then $oPageStyle.FooterFillStyle = $__LOWCONST_FILL_STYLE_GRADIENT

	If ($sGradientName <> Null) Then
		If Not IsString($sGradientName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		__LOWriter_GradientPresets($oDoc, $oPageStyle, $tStyleGradient, $sGradientName, True)
		$iError = ($oPageStyle.FooterFillGradientName() = $sGradientName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.FooterFillStyle = $__LOWCONST_FILL_STYLE_OFF
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iIncrement <> Null) Then
		If Not __LOWriter_IntIsBetween($iIncrement, 3, 256, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.FooterFillGradientStepCount = $iIncrement
		$tStyleGradient.StepCount = $iIncrement ; Must set both of these in order for it to take effect.
		$iError = ($oPageStyle.FooterFillGradientStepCount() = $iIncrement) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iFromColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$tStyleGradient.StartColor = $iFromColor
	EndIf

	If ($iToColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iToColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$tStyleGradient.EndColor = $iToColor
	EndIf

	If ($iFromIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$tStyleGradient.StartIntensity = $iFromIntense
	EndIf

	If ($iToIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iToIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 14, 0)
		$tStyleGradient.EndIntensity = $iToIntense
	EndIf

	If ($oPageStyle.FooterFillGradientName = "") Then

		$sGradName = __LOWriter_GradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

		$oPageStyle.FooterFillGradientName = $sGradName
		If ($oPageStyle.FooterFillGradientName <> $sGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
	EndIf

	$oPageStyle.FooterFillGradient = $tStyleGradient

	;Error checking
	$iError = ($iType = Null) ? $iError : ($oPageStyle.FooterFillGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.FooterFillGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.FooterFillGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 16)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.FooterFillGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 32)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.FooterFillGradient.Border() = $iBorder) ? $iError : BitOR($iError, 64)
	$iError = ($iFromColor = Null) ? $iError : ($oPageStyle.FooterFillGradient.StartColor() = $iFromColor) ? $iError : BitOR($iError, 128)
	$iError = ($iToColor = Null) ? $iError : ($oPageStyle.FooterFillGradient.EndColor() = $iToColor) ? $iError : BitOR($iError, 256)
	$iError = ($iFromIntense = Null) ? $iError : ($oPageStyle.FooterFillGradient.StartIntensity() = $iFromIntense) ? $iError : BitOR($iError, 512)
	$iError = ($iToIntense = Null) ? $iError : ($oPageStyle.FooterFillGradient.EndIntensity() = $iToIntense) ? $iError : BitOR($iError, 1024)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterAreaGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterBorderColor
; Description ...: Set and Retrieve the Page Style Footer Border Line Color.
; Syntax ........: _LOWriter_PageStyleFooterBorderColor(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Border Width must be set first to be able to set Border Style and Color.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_PageStyleFooterBorderWidth, _LOWriter_PageStyleFooterBorderStyle,
;					_LOWriter_PageStyleFooterBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterBorderColor(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_FooterBorder($oPageStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleFooterBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterBorderPadding
; Description ...: Set or retrieve the Footer Border Padding settings.
; Syntax ........: _LOWriter_PageStyleFooterBorderPadding(Byref $oPageStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[,	$iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Page contents in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Page contents in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Page contents in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Page contents in Micrometers(uM).
; Return values .: Success: 1 or Array, see Remarks.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRight not an Integer.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleFooterBorderWidth, _LOWriter_PageStyleFooterBorderStyle,
;					_LOWriter_PageStyleFooterBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterBorderPadding(ByRef $oPageStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[5]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oPageStyle.FooterBorderDistance(), $oPageStyle.FooterTopBorderDistance(), _
				$oPageStyle.FooterBottomBorderDistance(), $oPageStyle.FooterLeftBorderDistance(), $oPageStyle.FooterRightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iAll <> Null) Then
		If Not (IsInt($iAll) Or ($iAll > 0)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.FooterBorderDistance = $iAll
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterBorderDistance(), $iAll - 1, $iAll + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTop <> Null) Then
		If Not (IsInt($iTop) Or ($iTop > 0)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.FooterTopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterTopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iBottom <> Null) Then
		If Not (IsInt($iBottom) Or ($iBottom > 0)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageStyle.FooterBottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterBottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeft <> Null) Then
		If Not (IsInt($iLeft) Or ($iLeft > 0)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.FooterLeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterLeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRight <> Null) Then
		If Not (IsInt($iRight) Or ($iRight > 0)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.FooterRightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FooterRightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterBorderStyle
; Description ...: Set and retrieve the Page Style Footer Border Line style.
; Syntax ........: _LOWriter_PageStyleFooterBorderStyle(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Border Width must be set first to be able to set Border Style and Color.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;						$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_PageStyleFooterBorderWidth,
;					_LOWriter_PageStyleFooterBorderColor, _LOWriter_PageStyleFooterBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterBorderStyle(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_FooterBorder($oPageStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleFooterBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterBorderWidth
; Description ...: Set and retrieve the Page Style Footer Border Line Width.
; Syntax ........: _LOWriter_PageStyleFooterBorderWidth(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Footers are not on for this Page Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  To "Turn Off" Borders, set Width to 0.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleFooterBorderStyle, _LOWriter_PageStyleFooterBorderColor,
;					_LOWriter_PageStyleFooterBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterBorderWidth(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_FooterBorder($oPageStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleFooterBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterShadow
; Description ...: Set or Retrieve the shadow settings for a Page Style  Footer.
; Syntax ........: _LOWriter_PageStyleFooterShadow(Byref $oPageStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[,	$iLocation = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the footer Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Footer shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Footer Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Footer Shadow, must
;				   +						be one of the Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving ShadowFormat Object for Error checking.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterShadow(ByRef $oPageStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tShdwFrmt
	Local $iError = 0
	Local $avShadow[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$tShdwFrmt = $oPageStyle.FooterShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Or ($iWidth < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_SHADOW_BOTTOM_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oPageStyle.FooterShadowFormat = $tShdwFrmt
	;Error Checking
	$tShdwFrmt = $oPageStyle.FooterShadowFormat
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($tShdwFrmt.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($tShdwFrmt.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($tShdwFrmt.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($tShdwFrmt.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterTransparency
; Description ...:  Modify or retrieve Transparency settings for a page style Footer.
; Syntax ........: _LOWriter_PageStyleFooterTransparency(Byref $oPageStyle[, $iTransparency = Null])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTransparency       - [optional] an integer value. Default is Null. The color transparency. 0% is fully
;				   +						opaque and 100% is fully transparent.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTransparency not an Integer, less than 0 or greater than 100.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iTransparency
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning
;				   +								current setting for Transparency in integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterTransparency(ByRef $oPageStyle, $iTransparency = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iTransparency) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oPageStyle.FooterFillTransparence())

	If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oPageStyle.FooterFillTransparenceGradientName = ""
	$oPageStyle.FooterFillTransparence = $iTransparency
	$iError = ($oPageStyle.FooterFillTransparence() = $iTransparency) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterTransparency

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFooterTransparencyGradient
; Description ...: Modify or retrieve the Page Style Footer transparency gradient settings.
; Syntax ........: _LOWriter_PageStyleFooterTransparencyGradient(Byref $oDoc, Byref $oPageStyle[, $iType = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iStart = Null[, $iEnd = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iType               - [optional] an integer value. Default is Null. The type of transparency gradient that
;				   +							you want to apply. See Constants. Set to $LOW_GRAD_TYPE_OFF to turn Transparency
;				   +							Gradient off.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iStart              - [optional] an integer value. Default is Null. The transparency value for the beginning
;				   +						point of the gradient, where 0% is fully opaque and 100% is fully transparent.
;                  $iEnd                - [optional] an integer value. Default is Null. The transparency value for the endpoint
;				   +						of the gradient, where 0% is fully opaque and 100% is fully transparent.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iType Not an Integer, less than 0 or greater than 5, see constants list.
;				   @Error 1 @Extended 5 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 6 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 7 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 8 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iStart Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 10 Return 0 = $iEnd Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillTransparenceGradient" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.drawing.TransparencyGradientTable" Object.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.awt.Gradient" structure.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Footers are not on for this Page Style.
;				   @Error 3 @Extended 2 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 3 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iType
;				   |								2 = Error setting $iXCenter
;				   |								4 = Error setting $iYCenter
;				   |								8 = Error setting $iAngle
;				   |								16 = Error setting $iBorder
;				   |								32 = Error setting $iStart
;				   |								64 = Error setting $iEnd
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFooterTransparencyGradient(ByRef $oDoc, ByRef $oPageStyle, $iType = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iStart = Null, $iEnd = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $sTGradName
	Local $iError = 0
	Local $aiTransparent[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($oPageStyle.FooterIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$tStyleGradient = $oPageStyle.FooterFillTransparenceGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iType, $iXCenter, $iYCenter, $iAngle, $iBorder, $iStart, $iEnd) Then
		__LOWriter_ArrayFill($aiTransparent, $tStyleGradient.Style(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), _
				($tStyleGradient.Angle() / 10), $tStyleGradient.Border(), __LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.StartColor()), _
				__LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.EndColor())) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiTransparent)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.FooterFillTransparenceGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iStart <> Null) Then
		If Not __LOWriter_IntIsBetween($iStart, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.StartColor = __LOWriter_TransparencyGradientConvert($iStart)
	EndIf

	If ($iEnd <> Null) Then
		If Not __LOWriter_IntIsBetween($iEnd, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.EndColor = __LOWriter_TransparencyGradientConvert($iEnd)
	EndIf

	If ($oPageStyle.FooterFillTransparenceGradientName() = "") Then
		$sTGradName = __LOWriter_TransparencyGradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

		$oPageStyle.FooterFillTransparenceGradientName = $sTGradName
		If ($oPageStyle.FooterFillTransparenceGradientName <> $sTGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
	EndIf

	$oPageStyle.FooterFillTransparenceGradient = $tStyleGradient

	$iError = ($iType = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 4)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.FooterFillTransparenceGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 16)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.Border() = $iBorder) ? $iError : BitOR($iError, 32)
	$iError = ($iStart = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.StartColor() = __LOWriter_TransparencyGradientConvert($iStart)) ? $iError : BitOR($iError, 64)
	$iError = ($iEnd = Null) ? $iError : ($oPageStyle.FooterFillTransparenceGradient.EndColor() = __LOWriter_TransparencyGradientConvert($iEnd)) ? $iError : BitOR($iError, 128)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFooterTransparencyGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFootnoteArea
; Description ...: Modify or retrieve Page Style Footnote Size settings.
; Syntax ........: _LOWriter_PageStyleFootnoteArea(Byref $oPageStyle[, $iFootnoteHeight = Null[, $iSpaceToText = Null]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iFootnoteHeight     - [optional] an integer value. Default is Null. The maximum height for the footnote area.
;				   +						Set in Micrometers. Enter 0 for "Not larger than page", else minimum 508 uM.
;                  $iSpaceToText        - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						bottom page margin and the first line of text in the footnote area. Set in
;				   +						Micrometers.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iFootnoteHeight not an Integer, less than 508 but not 0.
;				   @Error 1 @Extended 4 Return 0 = $iSpaceToText not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iFootnoteHeight
;				   |								2 = Error setting $iSpaceToText
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFootnoteArea(ByRef $oPageStyle, $iFootnoteHeight = Null, $iSpaceToText = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiFootnote[2]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iFootnoteHeight, $iSpaceToText) Then
		__LOWriter_ArrayFill($aiFootnote, $oPageStyle.FootnoteHeight(), $oPageStyle.FootnoteLineTextDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiFootnote)
	EndIf

	If ($iFootnoteHeight <> Null) Then
		If Not __LOWriter_IntIsBetween($iFootnoteHeight, 508, $iFootnoteHeight, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.FootnoteHeight = $iFootnoteHeight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FootnoteHeight(), $iFootnoteHeight - 1, $iFootnoteHeight + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iSpaceToText <> Null) Then
		If Not IsInt($iSpaceToText) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.FootnoteLineTextDistance = $iSpaceToText
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FootnoteLineTextDistance(), $iSpaceToText - 1, $iSpaceToText + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFootnoteArea

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleFootnoteLine
; Description ...: Modify or retrieve the page style footnote separator line settings.
; Syntax ........: _LOWriter_PageStyleFootnoteLine(Byref $oPageStyle[, $iPosition = Null[, $iStyle = Null[, $nThickness = Null[, $iColor = Null[, $iLength = Null[, $iSpacing = Null]]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iPosition           - [optional] an integer value. Default is Null. The horizontal alignment for the line
;				   +						that separates the main text from the footnote area. See Constants below.
;                  $iStyle              - [optional] an integer value. Default is Null. The formatting style for the separator
;				   +						line. See Constants below.
;                  $nThickness          - [optional] a general number value. Default is Null. The thickness of the separator
;				   +						line. Set in Printer's Points. Min., 0, Max 9 Pt.
;                  $iColor              - [optional] an integer value. Default is Null. The color of the separator line. Can be
;				   +						one of the below constants or a custom value.
;                  $iLength             - [optional] an integer value. Default is Null. The length of the separator line as a
;				   +						percentage of the page width area. Min., 0, Max 100%.
;                  $iSpacing            - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						separator line and the first line of the footnote area. Set in Micrometers.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iPosition not an Integer, less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iStyle not an Integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $nThickness not a Number, less than 0 or greater than 9.
;				   @Error 1 @Extended 6 Return 0 = $iColor not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 7 Return 0 = $iLength not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iSpacing not an Integer.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error converting from Printer's Points to Micrometers.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iPosition
;				   |								2 = Error setting $iStyle
;				   |								4 = Error setting $nThickness
;				   |								8 = Error setting $iColor
;				   |								16 = Error setting $iLength
;				   |								32 = Error setting $iSpacing
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Line Position Constants: $LOW_ALIGN_HORI_LEFT(0),
;							$LOW_ALIGN_HORI_CENTER(1),
;							$LOW_ALIGN_HORI_RIGHT(2)
;Line Style Constants: $LOW_LINE_STYLE_NONE(0),
;						$LOW_LINE_STYLE_SOLID(1),
;						$LOW_LINE_STYLE_DOTTED(2),
;						$LOW_LINE_STYLE_DASHED(3)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,	_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleFootnoteLine(ByRef $oPageStyle, $iPosition = Null, $iStyle = Null, $nThickness = Null, $iColor = Null, $iLength = Null, $iSpacing = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFootnoteLine[6]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iPosition, $iStyle, $nThickness, $iColor, $iLength, $iSpacing) Then
		__LOWriter_ArrayFill($avFootnoteLine, $oPageStyle.FootnoteLineAdjust(), $oPageStyle.FootnoteLineStyle(), _
				__LOWriter_UnitConvert($oPageStyle.FootnoteLineWeight(), $__LOWCONST_CONVERT_UM_PT), _ ;Convert Thickness from uM to Point.
				$oPageStyle.FootnoteLineColor(), $oPageStyle.FootnoteLineRelativeWidth(), $oPageStyle.FootnoteLineDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFootnoteLine)
	EndIf

	If ($iPosition <> Null) Then
		If Not __LOWriter_IntIsBetween($iPosition, $LOW_ALIGN_HORI_LEFT, $LOW_ALIGN_HORI_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.FootnoteLineAdjust = $iPosition
		$iError = ($oPageStyle.FootnoteLineAdjust() = $iPosition) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iStyle <> Null) Then
		If Not __LOWriter_IntIsBetween($iStyle, $LOW_LINE_STYLE_NONE, $LOW_LINE_STYLE_DASHED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.FootnoteLineStyle = $iStyle
		$iError = ($oPageStyle.FootnoteLineStyle() = $iStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($nThickness <> Null) Then
		If Not __LOWriter_NumIsBetween($nThickness, 0, 9) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$nThickness = __LOWriter_UnitConvert($nThickness, $__LOWCONST_CONVERT_PT_UM) ;Convert Thickness from Point to uM
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$oPageStyle.FootnoteLineWeight = $nThickness
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FootnoteLineWeight, $nThickness - 1, $nThickness + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.FootnoteLineColor = $iColor
		$iError = ($oPageStyle.FootnoteLineColor() = $iColor) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iLength <> Null) Then
		If Not __LOWriter_IntIsBetween($iLength, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.FootnoteLineRelativeWidth = $iLength
		$iError = ($oPageStyle.FootnoteLineRelativeWidth() = $iLength) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oPageStyle.FootnoteLineDistance = $iSpacing
		$iError = (__LOWriter_IntIsBetween($oPageStyle.FootnoteLineDistance, $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 32)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleFootnoteLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleGetObj
; Description ...: Retrieve a Page Style Object for use with other PageStyle functions.
; Syntax ........: _LOWriter_PageStyleGetObj(Byref $oDoc, $sPageStyle)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sPageStyle           - a string value. The Page Style name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sPageStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = Page Style defined in $sPageStyle not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Page Style Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Page Style successfully retrieved, returning Page
;				   +										Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_PageStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleGetObj(ByRef $oDoc, $sPageStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oPageStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oPageStyle = $oDoc.StyleFamilies().getByName("PageStyles").getByName($sPageStyle)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oPageStyle)
EndFunc   ;==>_LOWriter_PageStyleGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeader
; Description ...:  Modify or retrieve Header settings for a page style.
; Syntax ........: _LOWriter_PageStyleHeader(Byref $oPageStyle[, $bHeaderOn = Null[, $bSameLeftRight = Null[, $bSameOnFirst = Null[, $iLeftMargin = Null[, $iRightMargin = Null[, $iSpacing = Null[, $bDynamicSpacing = Null[, $iHeight = Null[, $bAutoHeight = Null]]]]]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $bHeaderOn           - [optional] a boolean value. Default is Null. If True, adds a Header to the
;				   +						page style.
;                  $bSameLeftRight      - [optional] a boolean value. Default is Null. If True, Even and odd pages share the
;				   +						same content.
;                  $bSameOnFirst        - [optional] a boolean value. Default is Null. If True, First and even/odd pages share
;				   +						the same content. LibreOffice 4.0 and up.
;                  $iLeftMargin         - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						left edge of the page and the left edge of the Header. Set in Micrometers.
;                  $iRightMargin        - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						right edge of the page and the right edge of the Header. Set in Micrometers.
;                  $iSpacing            - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						maintain between the Top edge of the document text and the bottom edge of the
;				   +						Header. Set in Micrometers.
;                  $bDynamicSpacing     - [optional] a boolean value. Default is Null. If True, Overrides the Spacing setting
;				   +						and allows the Header to expand into the area between the Header and document text.
;                  $iHeight             - [optional] an integer value. Default is Null. The height you want for the Header. Set
;				   +						in Micrometers.
;                  $bAutoHeight         - [optional] a boolean value. Default is Null. Automatically adjusts the height of the
;				   +						Header to fit the content you enter.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $bHeaderOn not a Boolean value.
;				   @Error 1 @Extended 4 Return 0 = $bSameLeftRight not a Boolean value.
;				   @Error 1 @Extended 5 Return 0 = $bSameOnFirst not a Boolean value.
;				   @Error 1 @Extended 6 Return 0 = $iLeftMargin not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRightMargin not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iSpacing not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $bDynamicSpacing not a Boolean value.
;				   @Error 1 @Extended 10 Return 0 = $iHeight not an Integer.
;				   @Error 1 @Extended 11 Return 0 = $bAutoHeight not a Boolean value.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256
;				   |								1 = Error setting $bHeaderOn
;				   |								2 = Error setting $bSameLeftRight
;				   |								4 = Error setting $bSameOnFirst
;				   |								8 = Error setting $iLeftMargin
;				   |								16 = Error setting $iRightMargin
;				   |								32= Error setting $iSpacing
;				   |								64 = Error setting $bDynamicSpacing
;				   |								128 = Error setting $iHeight
;				   |								256 = Error setting $bAutoHeight
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 8 or 9 Element Array with values in order of function
;				   +								parameters. If Libre Office version is less than 4.0, then the Array
;				   +								returned will contain 8 elements, because $bSameOnFirst will not be
;				   +								available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeader(ByRef $oPageStyle, $bHeaderOn = Null, $bSameLeftRight = Null, $bSameOnFirst = Null, $iLeftMargin = Null, $iRightMargin = Null, $iSpacing = Null, $bDynamicSpacing = Null, $iHeight = Null, $bAutoHeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avHeader[8]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bHeaderOn, $bSameLeftRight, $bSameOnFirst, $iLeftMargin, $iRightMargin, $iSpacing, $bDynamicSpacing, _
			$iHeight, $bAutoHeight) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avHeader, $oPageStyle.HeaderIsOn(), $oPageStyle.HeaderIsShared(), $oPageStyle.FirstIsShared(), $oPageStyle.HeaderLeftMargin(), _
					$oPageStyle.HeaderRightMargin(), $oPageStyle.HeaderBodyDistance(), $oPageStyle.HeaderDynamicSpacing(), $oPageStyle.HeaderHeight(), _
					$oPageStyle.HeaderIsDynamicHeight())
		Else
			__LOWriter_ArrayFill($avHeader, $oPageStyle.HeaderIsOn(), $oPageStyle.HeaderIsShared(), $oPageStyle.HeaderLeftMargin(), _
					$oPageStyle.HeaderRightMargin(), $oPageStyle.HeaderBodyDistance(), $oPageStyle.HeaderDynamicSpacing(), $oPageStyle.HeaderHeight(), _
					$oPageStyle.HeaderIsDynamicHeight())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avHeader)
	EndIf

	If ($bHeaderOn <> Null) Then
		If Not IsBool($bHeaderOn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.HeaderIsOn = $bHeaderOn
		$iError = ($oPageStyle.HeaderIsOn() = $bHeaderOn) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bSameLeftRight <> Null) Then
		If Not IsBool($bSameLeftRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.HeaderIsShared = $bSameLeftRight
		$iError = ($oPageStyle.HeaderIsShared() = $bSameLeftRight) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bSameOnFirst <> Null) Then
		If Not IsBool($bSameOnFirst) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.FirstIsShared = $bSameOnFirst
		$iError = ($oPageStyle.FirstIsShared() = $bSameOnFirst) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeftMargin <> Null) Then
		If Not IsInt($iLeftMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.HeaderLeftMargin = $iLeftMargin
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderLeftMargin(), $iLeftMargin - 1, $iLeftMargin + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRightMargin <> Null) Then
		If Not IsInt($iRightMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.HeaderRightMargin = $iRightMargin
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderRightMargin(), $iRightMargin - 1, $iRightMargin + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	If ($iSpacing <> Null) Then
		If Not IsInt($iSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oPageStyle.HeaderBodyDistance = $iSpacing
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderBodyDistance(), $iSpacing - 1, $iSpacing + 1)) ? $iError : BitOR($iError, 32)
	EndIf

	If ($bDynamicSpacing <> Null) Then
		If Not IsBool($bDynamicSpacing) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oPageStyle.HeaderDynamicSpacing = $bDynamicSpacing
		$iError = ($oPageStyle.HeaderDynamicSpacing() = $bDynamicSpacing) ? $iError : BitOR($iError, 64)
	EndIf

	If ($iHeight <> Null) Then
		If Not IsInt($iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oPageStyle.HeaderHeight = $iHeight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderHeight(), $iHeight - 1, $iHeight + 1)) ? $iError : BitOR($iError, 128)
	EndIf

	If ($bAutoHeight <> Null) Then
		If Not IsBool($bAutoHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oPageStyle.HeaderIsDynamicHeight = $bAutoHeight
		$iError = ($oPageStyle.HeaderIsDynamicHeight() = $bAutoHeight) ? $iError : BitOR($iError, 256)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeader

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderAreaColor
; Description ...: Set or Retrieve background color settings for a Page style header.
; Syntax ........: _LOWriter_PageStyleHeaderAreaColor(Byref $oPageStyle[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value. Set to
;				   +							$LOW_COLOR_OFF(-1) for "None".
;                  $bBackTransparent    - [optional] a boolean value. Default is Null.Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 4 Return 0 = $bBackTransparent not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Note: If transparency is set, it can cause strange values to be displayed for Background color.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderAreaColor(ByRef $oPageStyle, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oPageStyle.HeaderBackColor(), $oPageStyle.HeaderBackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.HeaderBackColor = $iBackColor
		$iError = ($oPageStyle.HeaderBackColor() = $iBackColor) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.HeaderBackTransparent = $bBackTransparent
		$iError = ($oPageStyle.HeaderBackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderAreaColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderAreaGradient
; Description ...: Modify or retrieve the settings for Page Style Header BackGround color Gradient.
; Syntax ........: _LOWriter_PageStyleHeaderAreaGradient(Byref $oDoc, Byref $oPageStyle[, $sGradientName = Null[, $iType = Null[, $iIncrement = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iFromColor = Null[, $iToColor = Null[, $iFromIntense = Null[, $iToIntense = Null ]]]]]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $sGradientName       - [optional] a string value. Default is Null. A Preset Gradient Name. See Constants
;				   +								List. See remarks.
;                  $iType               - [optional] an integer value. Default is Null. The gradient that you want to apply. See
;				   +						Constants List.
;                  $iIncrement          - [optional] an integer value. Default is Null. Specifies the number of steps of change
;				   +						color. Allowed values are: 0, 3 to 256. 0 = Automatic.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the
;				   +						gradient, where 0% corresponds to the current horizontal location of the endpoint
;				   +						color in the gradient. The endpoint color is the color that is selected in the
;				   +						"To Color" setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient,
;				   +						where 0% corresponds to the current vertical location of the endpoint color in the
;				   +						gradient. The endpoint color is the color that is selected in the "To Color"
;				   +						Setting. Set in percentage, Min. 0%, Max 100%. $iType must be other than "Linear",
;				   +						or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iFromColor          - [optional] an integer value. Default is Null. A color for the beginning point of the
;				   +						gradient, set in Long Color Integer format. Can be one of the below Constants or a
;				   +						custom value.
;                  $iToColor            - [optional] an integer value. Default is Null. A color for the endpoint of the gradient,
;				   +						set in Long Color Integer format. Can be one of the below Constants or a custom
;				   +						value.
;                  $iFromIntense        - [optional] an integer value. Default is Null. Enter the intensity for the color in
;				   +						"From Color", where 0% corresponds to black, and 100 % to the selected color. Min.
;				   +						0%, Max 100%
;                  $iToIntense          - [optional] an integer value. Default is Null. Enter the intensity for the color in
;				   +						"To Color", where 0% corresponds to black, and 100 % to the selected color. Min. 0%,
;				   +						Max 100%
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sGradientName Not a String.
;				   @Error 1 @Extended 5 Return 0 = $iType Not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $iIncrement Not an Integer, less than 3 but not 0, or greater than 256.
;				   @Error 1 @Extended 7 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 10 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 11 Return 0 = $iFromColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 12 Return 0 = $iToColor Not an Integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 13 Return 0 = $iFromIntense Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 14 Return 0 = $iToIntense Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillGradient" Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   @Error 3 @Extended 2 Return 0 = Error creating Gradient Name.
;				   @Error 3 @Extended 3 Return 0 = Error setting Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024
;				   |								1 = Error setting $sGradientName
;				   |								2 = Error setting $iType
;				   |								4 = Error setting $iIncrement
;				   |								8 = Error setting $iXCenter
;				   |								16 = Error setting $iYCenter
;				   |								32 = Error setting $iAngle
;				   |								64 = Error setting $iBorder
;				   |								128 = Error setting $iFromColor
;				   |								256 = Error setting $iToColor
;				   |								512 = Error setting $iFromIntense
;				   |								1024 = Error setting $iToIntense
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 11 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: Gradient Name has no use other than for applying a pre-existing preset gradient.
;Gradient Name Constants: $LOW_GRAD_NAME_PASTEL_BOUQUET("Pastel Bouquet",
;							$LOW_GRAD_NAME_PASTEL_DREAM("Pastel Dream",
;							$LOW_GRAD_NAME_BLUE_TOUCH = "Blue Touch"),
;							$LOW_GRAD_NAME_BLANK_W_GRAY("Blank with Gray"),
;							$LOW_GRAD_NAME_SPOTTED_GRAY("Spotted Gray"),
;							$LOW_GRAD_NAME_LONDON_MIST("London Mist"),
;							$LOW_GRAD_NAME_TEAL_TO_BLUE("Teal to Blue"),
;							$LOW_GRAD_NAME_MIDNIGHT("Midnight"),
;							$LOW_GRAD_NAME_DEEP_OCEAN("Deep Ocean"),
;							$LOW_GRAD_NAME_SUBMARINE("Submarine"),
;							$LOW_GRAD_NAME_GREEN_GRASS("Green Grass"),
;							$LOW_GRAD_NAME_NEON_LIGHT("Neon Light"),
;							$LOW_GRAD_NAME_SUNSHINE("Sunshine"),
;							$LOW_GRAD_NAME_PRESENT("Present"),
;							$LOW_GRAD_NAME_MAHOGANY("Mahogany")
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderAreaGradient(ByRef $oDoc, ByRef $oPageStyle, $sGradientName = Null, $iType = Null, $iIncrement = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iFromColor = Null, $iToColor = Null, $iFromIntense = Null, $iToIntense = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $iError = 0
	Local $avGradient[11]
	Local $sGradName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$tStyleGradient = $oPageStyle.HeaderFillGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($sGradientName, $iType, $iIncrement, $iXCenter, $iYCenter, $iAngle, $iBorder, $iFromColor, $iToColor, _
			$iFromIntense, $iToIntense) Then
		__LOWriter_ArrayFill($avGradient, $oPageStyle.HeaderFillGradientName(), $tStyleGradient.Style(), _
				$oPageStyle.HeaderFillGradientStepCount(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), ($tStyleGradient.Angle() / 10), _
				$tStyleGradient.Border(), $tStyleGradient.StartColor(), $tStyleGradient.EndColor(), $tStyleGradient.StartIntensity(), _
				$tStyleGradient.EndIntensity()) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avGradient)
	EndIf

	If ($oPageStyle.HeaderFillStyle() <> $__LOWCONST_FILL_STYLE_GRADIENT) Then $oPageStyle.HeaderFillStyle = $__LOWCONST_FILL_STYLE_GRADIENT

	If ($sGradientName <> Null) Then
		If Not IsString($sGradientName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		__LOWriter_GradientPresets($oDoc, $oPageStyle, $tStyleGradient, $sGradientName, False, True)
		$iError = ($oPageStyle.HeaderFillGradientName() = $sGradientName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.HeaderFillStyle = $__LOWCONST_FILL_STYLE_OFF
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iIncrement <> Null) Then
		If Not __LOWriter_IntIsBetween($iIncrement, 3, 256, "", 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.HeaderFillGradientStepCount = $iIncrement
		$tStyleGradient.StepCount = $iIncrement ; Must set both of these in order for it to take effect.
		$iError = ($oPageStyle.HeaderFillGradientStepCount() = $iIncrement) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iFromColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$tStyleGradient.StartColor = $iFromColor
	EndIf

	If ($iToColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iToColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0)
		$tStyleGradient.EndColor = $iToColor
	EndIf

	If ($iFromIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iFromIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 13, 0)
		$tStyleGradient.StartIntensity = $iFromIntense
	EndIf

	If ($iToIntense <> Null) Then
		If Not __LOWriter_IntIsBetween($iToIntense, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 14, 0)
		$tStyleGradient.EndIntensity = $iToIntense
	EndIf

	If ($oPageStyle.HeaderFillGradientName = "") Then

		$sGradName = __LOWriter_GradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

		$oPageStyle.HeaderFillGradientName = $sGradName
		If ($oPageStyle.HeaderFillGradientName <> $sGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
	EndIf

	$oPageStyle.HeaderFillGradient = $tStyleGradient

	;Error checking
	$iError = ($iType = Null) ? $iError : ($oPageStyle.HeaderFillGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.HeaderFillGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.HeaderFillGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 16)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.HeaderFillGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 32)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.HeaderFillGradient.Border() = $iBorder) ? $iError : BitOR($iError, 64)
	$iError = ($iFromColor = Null) ? $iError : ($oPageStyle.HeaderFillGradient.StartColor() = $iFromColor) ? $iError : BitOR($iError, 128)
	$iError = ($iToColor = Null) ? $iError : ($oPageStyle.HeaderFillGradient.EndColor() = $iToColor) ? $iError : BitOR($iError, 256)
	$iError = ($iFromIntense = Null) ? $iError : ($oPageStyle.HeaderFillGradient.StartIntensity() = $iFromIntense) ? $iError : BitOR($iError, 512)
	$iError = ($iToIntense = Null) ? $iError : ($oPageStyle.HeaderFillGradient.EndIntensity() = $iToIntense) ? $iError : BitOR($iError, 1024)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderAreaGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderBorderColor
; Description ...: Set and Retrieve the Page Style Header Border Line Color.
; Syntax ........: _LOWriter_PageStyleHeaderBorderColor(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Page Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Border Width must be set first to be able to set Border Style and Color.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_PageStyleHeaderBorderWidth, _LOWriter_PageStyleHeaderBorderStyle,
;					_LOWriter_PageStyleHeaderBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderBorderColor(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_HeaderBorder($oPageStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleHeaderBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderBorderPadding
; Description ...: Set or retrieve the Header Border Padding settings.
; Syntax ........: _LOWriter_PageStyleHeaderBorderPadding(Byref $oPageStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Page Header contents in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Page Header contents in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Page Header contents in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Page Header contents in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iRight not an Integer.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleHeaderBorderWidth, _LOWriter_PageStyleHeaderBorderStyle,
;					_LOWriter_PageStyleHeaderBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderBorderPadding(ByRef $oPageStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiBPadding[5]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iAll, $iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oPageStyle.HeaderBorderDistance(), $oPageStyle.HeaderTopBorderDistance(), _
				$oPageStyle.HeaderBottomBorderDistance(), $oPageStyle.HeaderLeftBorderDistance(), $oPageStyle.HeaderRightBorderDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	If ($iAll <> Null) Then
		If Not __LOWriter_IntIsBetween($iAll, 0, $iAll) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.HeaderBorderDistance = $iAll
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderBorderDistance(), $iAll - 1, $iAll + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.HeaderTopBorderDistance = $iTop
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderTopBorderDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageStyle.HeaderBottomBorderDistance = $iBottom
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderBottomBorderDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.HeaderLeftBorderDistance = $iLeft
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderLeftBorderDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oPageStyle.HeaderRightBorderDistance = $iRight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.HeaderRightBorderDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderBorderStyle
; Description ...: Set and retrieve the Page Style Header Border Line style.
; Syntax ........: _LOWriter_PageStyleHeaderBorderStyle(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Page Style using one of the line style constants, See below for list.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, set to higher than 17 and not equal to 0x7FFF, Or is
;				   +									set to less than 0 or not set to Null. See Constants
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Border Width must be set first to be able to set Border Style and Color.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword),
;					to get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_PageStyleHeaderBorderWidth,
;					_LOWriter_PageStyleHeaderBorderColor, _LOWriter_PageStyleHeaderBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderBorderStyle(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_HeaderBorder($oPageStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleHeaderBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderBorderWidth
; Description ...: Set and retrieve the Page Style Header Border Line Width.
; Syntax ........: _LOWriter_PageStyleHeaderBorderWidth(Byref $oPageStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[,	$iRight = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Page Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   @Error 3 @Extended 2 Return 0 = Headers are not on for this Page Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set Width to 0.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_PageStyleHeaderBorderStyle, _LOWriter_PageStyleHeaderBorderColor,
;					_LOWriter_PageStyleHeaderBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderBorderWidth(ByRef $oPageStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_HeaderBorder($oPageStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_PageStyleHeaderBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderShadow
; Description ...: Set or Retrieve the shadow settings for a Page Style Header.
; Syntax ........: _LOWriter_PageStyleHeaderShadow(Byref $oPageStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Header Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Header shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Header Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Header Shadow, must
;				   +						be one of the Constants below.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving ShadowFormat Object for Error Checking.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderShadow(ByRef $oPageStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tShdwFrmt
	Local $iError = 0
	Local $avShadow[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$tShdwFrmt = $oPageStyle.HeaderShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Or ($iWidth < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oPageStyle.HeaderShadowFormat = $tShdwFrmt
	;Error Checking
	$tShdwFrmt = $oPageStyle.HeaderShadowFormat
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($tShdwFrmt.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($tShdwFrmt.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($tShdwFrmt.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($tShdwFrmt.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderTransparency
; Description ...: Modify or retrieve Transparency settings for a page style Header.
; Syntax ........: _LOWriter_PageStyleHeaderTransparency(Byref $oPageStyle[, $iTransparency = Null])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTransparency       - [optional] an integer value. Default is Null. The color transparency. 0% is fully
;				   +						opaque and 100% is fully transparent.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTransparency not an Integer, less than 0 or greater than 100.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iTransparency
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning
;				   +								current setting for Transparency in integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderTransparency(ByRef $oPageStyle, $iTransparency = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iTransparency) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oPageStyle.HeaderFillTransparence())

	If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oPageStyle.HeaderFillTransparenceGradientName = ""
	$oPageStyle.HeaderFillTransparence = $iTransparency
	$iError = ($oPageStyle.HeaderFillTransparence() = $iTransparency) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderTransparency

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleHeaderTransparencyGradient
; Description ...: Modify or retrieve the Page Style Header transparency gradient settings.
; Syntax ........: _LOWriter_PageStyleHeaderTransparencyGradient(Byref $oDoc, Byref $oPageStyle[, $iType = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iStart = Null[, $iEnd = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iType               - [optional] an integer value. Default is Null. The type of transparency gradient that
;				   +							you want to apply. See Constants. Set to $LOW_GRAD_TYPE_OFF to turn Transparency
;				   +							Gradient off.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iStart              - [optional] an integer value. Default is Null. The transparency value for the beginning
;				   +						point of the gradient, where 0% is fully opaque and 100% is fully transparent.
;                  $iEnd                - [optional] an integer value. Default is Null. The transparency value for the endpoint
;				   +						of the gradient, where 0% is fully opaque and 100% is fully transparent.
; Return values .:Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $iType Not an Integer, less than 0 or greater than 5, see constants list.
;				   @Error 1 @Extended 5 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 6 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 7 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 8 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iStart Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 10 Return 0 = $iEnd Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillTransparenceGradient" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.drawing.TransparencyGradientTable" Object.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.awt.Gradient" structure.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Headers are not on for this Page Style.
;				   @Error 3 @Extended 2 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 3 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iType
;				   |								2 = Error setting $iXCenter
;				   |								4 = Error setting $iYCenter
;				   |								8 = Error setting $iAngle
;				   |								16 = Error setting $iBorder
;				   |								32 = Error setting $iStart
;				   |								64 = Error setting $iEnd
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleHeaderTransparencyGradient(ByRef $oDoc, ByRef $oPageStyle, $iType = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iStart = Null, $iEnd = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $sTGradName
	Local $iError = 0
	Local $aiTransparent[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($oPageStyle.HeaderIsOn() = False) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	$tStyleGradient = $oPageStyle.HeaderFillTransparenceGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iType, $iXCenter, $iYCenter, $iAngle, $iBorder, $iStart, $iEnd) Then
		__LOWriter_ArrayFill($aiTransparent, $tStyleGradient.Style(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), _
				($tStyleGradient.Angle() / 10), $tStyleGradient.Border(), __LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.StartColor()), _
				__LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.EndColor())) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiTransparent)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.HeaderFillTransparenceGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iStart <> Null) Then
		If Not __LOWriter_IntIsBetween($iStart, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.StartColor = __LOWriter_TransparencyGradientConvert($iStart)
	EndIf

	If ($iEnd <> Null) Then
		If Not __LOWriter_IntIsBetween($iEnd, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.EndColor = __LOWriter_TransparencyGradientConvert($iEnd)
	EndIf

	If ($oPageStyle.HeaderFillTransparenceGradientName() = "") Then
		$sTGradName = __LOWriter_TransparencyGradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

		$oPageStyle.HeaderFillTransparenceGradientName = $sTGradName
		If ($oPageStyle.HeaderFillTransparenceGradientName <> $sTGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
	EndIf

	$oPageStyle.HeaderFillTransparenceGradient = $tStyleGradient

	$iError = ($iType = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.Style() = $iType) ? $iError : BitOR($iError, 2)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 4)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 8)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.HeaderFillTransparenceGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 16)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.Border() = $iBorder) ? $iError : BitOR($iError, 32)
	$iError = ($iStart = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.StartColor() = __LOWriter_TransparencyGradientConvert($iStart)) ? $iError : BitOR($iError, 64)
	$iError = ($iEnd = Null) ? $iError : ($oPageStyle.HeaderFillTransparenceGradient.EndColor() = __LOWriter_TransparencyGradientConvert($iEnd)) ? $iError : BitOR($iError, 128)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleHeaderTransparencyGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleLayout
; Description ...: Modify or retrieve the Layout settings for a Page Style.
; Syntax ........: _LOWriter_PageStyleLayout(Byref $oDoc, $oPageStyle[, $iLayout = Null[, $iNumFormat = Null[, $sRefStyle = Null[, $bGutterOnRight = Null[, $bGutterAtTop = Null[, $bBackCoversMargins = Null[, $sPaperTray = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iLayout             - [optional] an integer value. Default is Null. Specify the current layout style, either
;				   +						Left(Even) pages, Right(Odd) pages, or both Left(Even) and Right(Odd) pages or
;				   +						mirrored. See Constants.
;                  $iNumFormat         - [optional] an integer value. Default is Null. The page numbering format that you
;				   +						want to use for this Page Style. See Constants.
;                  $sRefStyle           - [optional] a string value. Default is Null. The Paragraph Style that you want to use
;				   +						as a reference for lining up the text on the selected Page style. To disable Page
;				   +						Spacing alignment, set to "".
;                  $bGutterOnRight      - [optional] a boolean value. Default is Null. Specifies that the page gutter shall be
;				   +						placed on the right side of the page. Libre 7.2 and up.
;                  $bGutterAtTop        - [optional] a boolean value. Default is Null. If False, the current document's gutter
;				   +						shall be positioned at the left of the document's pages (L.O. default) or If True,
;				   +						 at top of the document's pages when the document is displayed.
;                  $bBackCoversMargins  - [optional] a boolean value. Default is Null. If true, the background cover the full
;				   +						page, Else only inside the margins. Libre 7.2 and up.
;                  $sPaperTray          - [optional] a string value. Default is Null. The paper source for your printer. See
;				   +						remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iLayout not an Integer, less than 0, or greater than 4. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $iNumFormat  not an Integer, less than 0, or greater than 71. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $sRefStyle not a String.
;				   @Error 1 @Extended 6 Return 0 = Paragraph style referenced in $sRefStyle not found in document and $sRefStyle
;				   +									not equal to "".
;				   @Error 1 @Extended 7 Return 0 = $bGutterOnRight not a Boolean value.
;				   @Error 1 @Extended 8 Return 0 = $bGutterAtTop not a Boolean value.
;				   @Error 1 @Extended 9 Return 0 = $bBackCoversMargins not a Boolean value.
;				   @Error 1 @Extended 10 Return 0 = $sPaperTray not a string.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error creating Document Settings Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iLayout
;				   |								2 = Error setting $iNumFormat
;				   |								4 = Error setting $sRefStyle
;				   |								8 = Error setting  $bGutterOnRight
;				   |								16 = Error setting  $bGutterAtTop
;				   |								32 = Error setting $bBackCoversMargins
;				   |								64 = Error setting $sPaperTray
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 or 7 Element Array with values in order of function
;				   +								parameters. If the current Libre Office version is less than 7.2, the Array
;				   +								 will be a 4 element Array, because $bGutterOnRight, $bGutterAtTop, and
;				   +								$bBackCoversMargins will not be available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: I have no way to retrieve possible values for the PaperTray parameter, at least that I can find. You
;					may still use it if you know the appropriate value.
;Page Layout Constants: $LOW_PAGE_LAYOUT_ALL(0),
;							$LOW_PAGE_LAYOUT_LEFT(1),
;							$LOW_PAGE_LAYOUT_RIGHT(2),
;							$LOW_PAGE_LAYOUT_MIRRORED(3)
;Numbering Format Constants: $LOW_NUM_STYLE_CHARS_UPPER_LETTER(0), Numbering is put in upper case letters. ("A, B, C, D)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER(1), Numbering is in lower case letters. (a, b, c, d)
;	$LOW_NUM_STYLE_ROMAN_UPPER(2), Numbering is in Roman numbers with upper case letters. (I, II, III)
;	$LOW_NUM_STYLE_ROMAN_LOWER(3), Numbering is in Roman numbers with lower case letters. (i, ii, iii)
;	$LOW_NUM_STYLE_ARABIC(4), Numbering is in Arabic numbers. (1, 2, 3, 4)
;	$LOW_NUM_STYLE_NUMBER_NONE(5), Numbering is invisible.
;	$LOW_NUM_STYLE_CHAR_SPECIAL(6), Use a character from a specified font.
;	$LOW_NUM_STYLE_PAGE_DESCRIPTOR(7), Numbering is specified in the page style.
;	$LOW_NUM_STYLE_BITMAP(8), Numbering is displayed as a bitmap graphic.
;	$LOW_NUM_STYLE_CHARS_UPPER_LETTER_N(9), Numbering is put in upper case letters. (A, B, Y, Z, AA, BB)
;	$LOW_NUM_STYLE_CHARS_LOWER_LETTER_N(10), Numbering is put in lower case letters. (a, b, y, z, aa, bb)
;	$LOW_NUM_STYLE_TRANSLITERATION(11), A transliteration module will be used to produce numbers in Chinese, Japanese, etc.
;	$LOW_NUM_STYLE_NATIVE_NUMBERING(12), The NativeNumberSupplier service will be called to produce numbers in native languages.
;	$LOW_NUM_STYLE_FULLWIDTH_ARABIC(13), Numbering for full width Arabic number.
;	$LOW_NUM_STYLE_CIRCLE_NUMBER(14), 	Bullet for Circle Number.
;	$LOW_NUM_STYLE_NUMBER_LOWER_ZH(15), Numbering for Chinese lower case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH(16), Numbering for Chinese upper case number.
;	$LOW_NUM_STYLE_NUMBER_UPPER_ZH_TW(17), Numbering for Traditional Chinese upper case number.
;	$LOW_NUM_STYLE_TIAN_GAN_ZH(18), Bullet for Chinese Tian Gan.
;	$LOW_NUM_STYLE_DI_ZI_ZH(19), Bullet for Chinese Di Zi.
;	$LOW_NUM_STYLE_NUMBER_TRADITIONAL_JA(20), Numbering for Japanese traditional number.
;	$LOW_NUM_STYLE_AIU_FULLWIDTH_JA(21), Bullet for Japanese AIU fullwidth.
;	$LOW_NUM_STYLE_AIU_HALFWIDTH_JA(22), Bullet for Japanese AIU halfwidth.
;	$LOW_NUM_STYLE_IROHA_FULLWIDTH_JA(23), Bullet for Japanese IROHA fullwidth.
;	$LOW_NUM_STYLE_IROHA_HALFWIDTH_JA(24), Bullet for Japanese IROHA halfwidth.
;	$LOW_NUM_STYLE_NUMBER_UPPER_KO(25), Numbering for Korean upper case number.
;	$LOW_NUM_STYLE_NUMBER_HANGUL_KO(26), Numbering for Korean Hangul number.
;	$LOW_NUM_STYLE_HANGUL_JAMO_KO(27), Bullet for Korean Hangul Jamo.
;	$LOW_NUM_STYLE_HANGUL_SYLLABLE_KO(28), Bullet for Korean Hangul Syllable.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_JAMO_KO(29), Bullet for Korean Hangul Circled Jamo.
;	$LOW_NUM_STYLE_HANGUL_CIRCLED_SYLLABLE_KO(30), Bullet for Korean Hangul Circled Syllable.
;	$LOW_NUM_STYLE_CHARS_ARABIC(31), Numbering in Arabic alphabet letters.
;	$LOW_NUM_STYLE_CHARS_THAI(32), Numbering in Thai alphabet letters.
;	$LOW_NUM_STYLE_CHARS_HEBREW(33), Numbering in Hebrew alphabet letters.
;	$LOW_NUM_STYLE_CHARS_NEPALI(34), Numbering in Nepali alphabet letters.
;	$LOW_NUM_STYLE_CHARS_KHMER(35), Numbering in Khmer alphabet letters.
;	$LOW_NUM_STYLE_CHARS_LAO(36), Numbering in Lao alphabet letters.
;	$LOW_NUM_STYLE_CHARS_TIBETAN(37), Numbering in Tibetan/Dzongkha alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_BG(38), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_BG(39), Numbering in Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_BG(40), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_BG(41), Numbering in Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_RU(42), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_RU(43), Numbering in Russian Cyrillic alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_RU(44), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_RU(45), Numbering in Russian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_PERSIAN(46), Numbering in Persian alphabet letters.
;	$LOW_NUM_STYLE_CHARS_MYANMAR(47), Numbering in Myanmar alphabet letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_SR(48), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_SR(49), Numbering in Russian Serbian alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_UPPER_LETTER_N_SR(50), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_CYRILLIC_LOWER_LETTER_N_SR(51), Numbering in Serbian Cyrillic alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_UPPER_LETTER(52), Numbering in Greek alphabet upper case letters.
;	$LOW_NUM_STYLE_CHARS_GREEK_LOWER_LETTER(53), Numbering in Greek alphabet lower case letters.
;	$LOW_NUM_STYLE_CHARS_ARABIC_ABJAD(54), Numbering in Arabic alphabet using abjad sequence.
;	$LOW_NUM_STYLE_CHARS_PERSIAN_WORD(55), Numbering in Persian words.
;	$LOW_NUM_STYLE_NUMBER_HEBREW(56), Numbering in Hebrew numerals.
;	$LOW_NUM_STYLE_NUMBER_ARABIC_INDIC(57), Numbering in Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_EAST_ARABIC_INDIC(58), Numbering in East Arabic-Indic numerals.
;	$LOW_NUM_STYLE_NUMBER_INDIC_DEVANAGARI(59), Numbering in Indic Devanagari numerals.
;	$LOW_NUM_STYLE_TEXT_NUMBER(60), Numbering in ordinal numbers of the language of the text node. (1st, 2nd, 3rd)
;	$LOW_NUM_STYLE_TEXT_CARDINAL(61), Numbering in cardinal numbers of the language of the text node. (One, Two)
;	$LOW_NUM_STYLE_TEXT_ORDINAL(62), Numbering in ordinal numbers of the language of the text node. (First, Second)
;	$LOW_NUM_STYLE_SYMBOL_CHICAGO(63), Footnoting symbols according the University of Chicago style.
;	$LOW_NUM_STYLE_ARABIC_ZERO(64), Numbering is in Arabic numbers, padded with zero to have a length of at least two. (01, 02)
;	$LOW_NUM_STYLE_ARABIC_ZERO3(65), Numbering is in Arabic numbers, padded with zero to have a length of at least three.
;	$LOW_NUM_STYLE_ARABIC_ZERO4(66), Numbering is in Arabic numbers, padded with zero to have a length of at least four.
;	$LOW_NUM_STYLE_ARABIC_ZERO5(67), Numbering is in Arabic numbers, padded with zero to have a length of at least five.
;	$LOW_NUM_STYLE_SZEKELY_ROVAS(68), Numbering is in Szekely rovas (Old Hungarian) numerals.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL_KO(69), Numbering is in Korean Digital number.
;	$LOW_NUM_STYLE_NUMBER_DIGITAL2_KO(70), Numbering is in Korean Digital Number, reserved "koreanDigital2".
;	$LOW_NUM_STYLE_NUMBER_LEGAL_KO(71), Numbering is in Korean Legal Number, reserved "koreanLegal".
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleLayout(ByRef $oDoc, $oPageStyle, $iLayout = Null, $iNumFormat = Null, $sRefStyle = Null, $bGutterOnRight = Null, $bGutterAtTop = Null, $bBackCoversMargins = Null, $sPaperTray = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSettings
	Local $iError = 0
	Local $avLayout[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oSettings = $oDoc.createInstance("com.sun.star.text.DocumentSettings")
	If Not IsObj($oSettings) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iLayout, $iNumFormat, $sRefStyle, $bGutterOnRight, $bGutterAtTop, $bBackCoversMargins, $sPaperTray) Then
		If __LOWriter_VersionCheck(7.2) Then
			__LOWriter_ArrayFill($avLayout, $oPageStyle.PageStyleLayout(), $oPageStyle.NumberingType(), _
					__LOWriter_ParStyleNameToggle($oPageStyle.RegisterParagraphStyle(), True), _
					$oPageStyle.RtlGutter(), $oSettings.getPropertyValue("GutterAtTop"), $oPageStyle.BackgroundFullSize(), _
					$oPageStyle.PrinterPaperTray())
		Else
			__LOWriter_ArrayFill($avLayout, $oPageStyle.PageStyleLayout(), $oPageStyle.NumberingType(), _
					__LOWriter_ParStyleNameToggle($oPageStyle.RegisterParagraphStyle(), True), $oPageStyle.PrinterPaperTray())
		EndIf

		Return SetError($__LOW_STATUS_SUCCESS, 1, $avLayout)
	EndIf

	If ($iLayout <> Null) Then
		If Not __LOWriter_IntIsBetween($iLayout, $LOW_PAGE_LAYOUT_ALL, $LOW_PAGE_LAYOUT_MIRRORED) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.PageStyleLayout = $iLayout
		$iError = ($oPageStyle.PageStyleLayout() = $iLayout) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iNumFormat <> Null) Then
		If Not __LOWriter_IntIsBetween($iNumFormat, $LOW_NUM_STYLE_CHARS_UPPER_LETTER, $LOW_NUM_STYLE_NUMBER_LEGAL_KO) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.NumberingType = $iNumFormat
		$iError = ($oPageStyle.NumberingType() = $iNumFormat) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sRefStyle <> Null) Then
		If Not IsString($sRefStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not _LOWriter_ParStyleExists($oDoc, $sRefStyle) And Not ($sRefStyle = "") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$sRefStyle = __LOWriter_ParStyleNameToggle($sRefStyle)
		$oPageStyle.RegisterParagraphStyle = $sRefStyle
		$iError = ($oPageStyle.RegisterParagraphStyle() = $sRefStyle) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bGutterOnRight <> Null) Then
		If Not IsBool($bGutterOnRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not __LOWriter_VersionCheck(7.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.RtlGutter = $bGutterOnRight
		$iError = ($oPageStyle.RtlGutter() = $bGutterOnRight) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bGutterAtTop <> Null) Then
		If Not IsBool($bGutterAtTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not __LOWriter_VersionCheck(7.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oSettings.setPropertyValue("GutterAtTop", $bGutterAtTop)
		$iError = ($oSettings.getPropertyValue("GutterAtTop") = $bGutterAtTop) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bBackCoversMargins <> Null) Then
		If Not IsBool($bBackCoversMargins) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		If Not __LOWriter_VersionCheck(7.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.BackgroundFullSize = $bBackCoversMargins
		$iError = ($oPageStyle.BackgroundFullSize() = $bBackCoversMargins) ? $iError : BitOR($iError, 32)
	EndIf

	If ($sPaperTray <> Null) Then
		If Not IsString($sPaperTray) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oPageStyle.PrinterPaperTray = $sPaperTray
		$iError = ($oPageStyle.PrinterPaperTray() = $sPaperTray) ? $iError : BitOR($iError, 64)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleLayout

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleMargins
; Description ...: Modify or retrieve the margin settings for a Page Style.
; Syntax ........: _LOWriter_PageStyleMargins(Byref $oPageStyle[, $iLeft = Null[, $iRight = Null[, $iTop = Null[, $iBottom = Null[, $iGutter = Null]]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iLeft               - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						left edge of the page and the document text. If you are using the Mirrored page
;				   +						layout, enter the amount of space to leave between the inner text margin and the
;				   +						inner edge of the page. Set in Micrometers.
;                  $iRight              - [optional] an integer value. Default is Null. The amount of space to leave between
;				   +						the right edge of the page and the document text. If you are using the Mirrored page
;				   +						layout, enter the amount of space to leave between the outer text margin and the
;				   +						outer edge of the page. Set in Micrometers.
;                  $iTop                - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						upper edge of the page and the document text. Set in Micrometers.
;                  $iBottom             - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						lower edge of the page and the document text. Set in Micrometers.
;                  $iGutter             - [optional] an integer value. Default is Null. The amount of space to leave between the
;				   +						left edge of the page and the left margin. If you are using the Mirrored page
;				   +						layout, enter the amount of space to leave between the inner page margin and the
;				   +						inner edge of the page. Set in Micrometers. Libre 7.2 and up.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iLeft not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iRight not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iGutter not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iLeft
;				   |								2 = Error setting $iRight
;				   |								4 = Error setting $iTop
;				   |								8 = Error setting $iBottom
;				   |								16 = Error setting $iGutter
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.2.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 or 5 Element Array with values in order of function
;				   +								parameters. If the current Libre Office version is les than 7.2, then the
;				   +								array will have 4 elements as Gutter Margin will not be available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleMargins(ByRef $oPageStyle, $iLeft = Null, $iRight = Null, $iTop = Null, $iBottom = Null, $iGutter = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiMargins[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iLeft, $iRight, $iTop, $iBottom, $iGutter) Then
		If __LOWriter_VersionCheck(7.2) Then
			__LOWriter_ArrayFill($aiMargins, $oPageStyle.LeftMargin(), $oPageStyle.RightMargin(), $oPageStyle.TopMargin(), $oPageStyle.BottomMargin(), _
					$oPageStyle.GutterMargin())
		Else
			__LOWriter_ArrayFill($aiMargins, $oPageStyle.LeftMargin(), $oPageStyle.RightMargin(), $oPageStyle.TopMargin(), $oPageStyle.BottomMargin())
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiMargins)
	EndIf

	If ($iLeft <> Null) Then
		If Not IsInt($iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.LeftMargin = $iLeft
		$iError = (__LOWriter_IntIsBetween($oPageStyle.LeftMargin(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRight <> Null) Then
		If Not IsInt($iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.RightMargin = $iRight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.RightMargin(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iTop <> Null) Then
		If Not IsInt($iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageStyle.TopMargin = $iTop
		$iError = (__LOWriter_IntIsBetween($oPageStyle.TopMargin(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iBottom <> Null) Then
		If Not IsInt($iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oPageStyle.BottomMargin = $iBottom
		$iError = (__LOWriter_IntIsBetween($oPageStyle.BottomMargin(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	If ($iGutter <> Null) Then
		If Not IsInt($iGutter) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not __LOWriter_VersionCheck(7.2) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.GutterMargin = $iGutter
		$iError = (__LOWriter_IntIsBetween($oPageStyle.GutterMargin(), $iGutter - 1, $iGutter + 1)) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleMargins

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleOrganizer
; Description ...: Set or retrieve the Organizer settings of a Page Style.
; Syntax ........: _LOWriter_PageStyleOrganizer(Byref $oDoc, $oPageStyle[, $sNewPageStyleName = Null[, $bHidden = Null[, $sFollowStyle = Null]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $sNewPageStyleName   - [optional] a string value. Default is Null. The new name to set $sPageStyle page
;				   +						style to.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether to hide the style in the UI.
;				   +						Libre Office 4.0 and Up.
;                  $sFollowStyle        - [optional] a string value. Default is Null. The name of the style that is applied
;				   +						After this Page Style.
; Return values .:   Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 4 Return 0 = $sNewPageStyleName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sNewPageStyleName already exists in document.
;				   @Error 1 @Extended 6 Return 0 = $bHidden not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $sFollowStyle not a String.
;				   @Error 1 @Extended 8 Return 0 = $sFollowStyle doesn't exist in this document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $sNewParStyleName
;				   |								2 = Error setting $bHidden
;				   |								4 = Error setting $sFollowStyle
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 or 3 Element Array with values in order of function
;				   +								parameters. If the Libre Office version is below 4.0, the Array will contain
;				   +								2 elements because $bHidden is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_PageStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleOrganizer(ByRef $oDoc, $oPageStyle, $sNewPageStyleName = Null, $bHidden = Null, $sFollowStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOrganizer[2]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($sNewPageStyleName, $bHidden, $sFollowStyle) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avOrganizer, $oPageStyle.Name(), $oPageStyle.Hidden(), __LOWriter_PageStyleNameToggle($oPageStyle.FollowStyle(), True))
		Else
			__LOWriter_ArrayFill($avOrganizer, $oPageStyle.Name(), __LOWriter_PageStyleNameToggle($oPageStyle.FollowStyle(), True))
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOrganizer)
	EndIf

	If ($sNewPageStyleName <> Null) Then
		If Not IsString($sNewPageStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If _LOWriter_PageStyleExists($oDoc, $sNewPageStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oPageStyle.Name = $sNewPageStyleName
		$iError = ($oPageStyle.Name() = $sNewPageStyleName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bHidden <> Null) Then
		If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oPageStyle.Hidden = $bHidden
		$iError = ($oPageStyle.Hidden() = $bHidden) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sFollowStyle <> Null) Then
		If Not IsString($sFollowStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		If Not _LOWriter_PageStyleExists($oDoc, $sFollowStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$sFollowStyle = __LOWriter_PageStyleNameToggle($sFollowStyle)
		$oPageStyle.FollowStyle = $sFollowStyle
		$iError = ($oPageStyle.FollowStyle() = $sFollowStyle) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleOrganizer

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStylePaperFormat
; Description ...: Modify or retrieve the paper format settings for a Page Style.
; Syntax ........: _LOWriter_PageStylePaperFormat(Byref $oPageStyle[, $iWidth = Null[, $iHeight = Null[, $bLandscape = Null]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Page, May be one of the
;				   +						constants below or a custom value in Micrometers.
;                  $iHeight             - [optional] an integer value. Default is Null. The height of the Page, May be one of the
;				   +						constants below or a custom value in Micrometers.
;                  $bLandscape          - [optional] a boolean value. Default is Null. If true, displays the page with the paper
;				   +						oriented horizontally, else displays the page with the paper oriented vertically.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iHeight not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $bLandscape not a Boolean value.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iHeight
;				   |								4 = Error setting $bLandscape
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Paper Width Constants: $LOW_PAPER_WIDTH_A6(10490),
;							$LOW_PAPER_WIDTH_A5(14808),
;							$LOW_PAPER_WIDTH_A4(21006),
;							$LW_PAPER_WIDTH_A3(29693),
;							$LOW_PAPER_WIDTH_B6ISO(12497),
;							$LOW_PAPER_WIDTH_B5ISO(17602),
;							$LOW_PAPER_WIDTH_B4ISO(24994),
;							$LOW_PAPER_WIDTH_LETTER(21590),
;							$LOW_PAPER_WIDTH_LEGAL(21590),
;							$LOW_PAPER_WIDTH_LONG_BOND(21590),
;							$LOW_PAPER_WIDTH_TABLOID(27940),
;							$LOW_PAPER_WIDTH_B6JIS(12801),
;							$LOW_PAPER_WIDTH_B5JIS(18212),
;							$LOW_PAPER_WIDTH_B4JIS(25705),
;							$LOW_PAPER_WIDTH_16KAI(18390),
;							$LOW_PAPER_WIDTH_32KAI(13005),
;							$LOW_PAPER_WIDTH_BIG_32KAI(13995),
;							$LOW_PAPER_WIDTH_DLENVELOPE(10998),
;							$LOW_PAPER_WIDTH_C6ENVELOPE(11405),
;							$LOW_PAPER_WIDTH_C6_5_ENVELOPE(11405),
;							$LOW_PAPER_WIDTH_C5ENVELOPE(16205),
;							$LOW_PAPER_WIDTH_C4ENVELOPE(22911),
;							$LOW_PAPER_WIDTH_6_3_4ENVELOPE(9208),
;							$LOW_PAPER_WIDTH_7_3_4ENVELOPE(9855),
;							$LOW_PAPER_WIDTH_9ENVELOPE(9843),
;							$LOW_PAPER_WIDTH_10ENVELOPE(10490),
;							$LOW_PAPER_WIDTH_11ENVELOPE(11430),
;							$LOW_PAPER_WIDTH_12ENVELOPE(12065),
;							$LOW_PAPER_WIDTH_JAP_POSTCARD(10008
;Paper Height Constants: $LOW_PAPER_HEIGHT_A6(14808),
;							$LOW_PAPER_HEIGHT_A5(21006),
;							$LOW_PAPER_HEIGHT_A4(29693),
;							$LOW_PAPER_HEIGHT_A3(42012),
;							$LOW_PAPER_HEIGHT_B6ISO(17602),
;							$LOW_PAPER_HEIGHT_B5ISO(24994),
;							$LOW_PAPER_HEIGHT_B4ISO(35306),
;							$LOW_PAPER_HEIGHT_LETTER(27940),
;							$LOW_PAPER_HEIGHT_LEGAL(35560),
;							$LOW_PAPER_HEIGHT_LONG_BOND(33020),
;							$LOW_PAPER_HEIGHT_TABLOID(43180),
;							$LOW_PAPER_HEIGHT_B6JIS(18200),
;							$LOW_PAPER_HEIGHT_B5JIS(25705),
;							$LOW_PAPER_HEIGHT_B4JIS(36398),
;							$LOW_PAPER_HEIGHT_16KAI(26010),
;							$LOW_PAPER_HEIGHT_32KAI(18390),
;							$LOW_PAPER_HEIGHT_BIG_32KAI(20295),
;							$LOW_PAPER_HEIGHT_DLENVELOPE(21996),
;							$LOW_PAPER_HEIGHT_C6ENVELOPE(16205),
;							$LOW_PAPER_HEIGHT_C6_5_ENVELOPE(22911),
;							$LOW_PAPER_HEIGHT_C5ENVELOPE(22911),
;							$LOW_PAPER_HEIGHT_C4ENVELOPE(32410),
;							$LOW_PAPER_HEIGHT_6_3_4ENVELOPE(16510),
;							$LOW_PAPER_HEIGHT_7_3_4ENVELOPE(19050),
;							$LOW_PAPER_HEIGHT_9ENVELOPE(22543),
;							$LOW_PAPER_HEIGHT_10ENVELOPE(24130),
;							$LOW_PAPER_HEIGHT_11ENVELOPE(26365),
;							$LOW_PAPER_HEIGHT_12ENVELOPE(27940),
;							$LOW_PAPER_HEIGHT_JAP_POSTCARD(14808)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStylePaperFormat(ByRef $oPageStyle, $iWidth = Null, $iHeight = Null, $bLandscape = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avFormat[3]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iWidth, $iHeight, $bLandscape) Then
		__LOWriter_ArrayFill($avFormat, $oPageStyle.Width(), $oPageStyle.Height(), $oPageStyle.IsLandscape())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avFormat)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oPageStyle.Width = $iWidth
		$iError = (__LOWriter_IntIsBetween($oPageStyle.Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iHeight <> Null) Then
		If Not IsInt($iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oPageStyle.Height = $iHeight
		$iError = (__LOWriter_IntIsBetween($oPageStyle.Height(), $iHeight - 1, $iHeight + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bLandscape <> Null) Then
		If Not IsBool($bLandscape) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

		If ($oPageStyle.IsLandscape() = $bLandscape) Then
			;If $bLandscape called setting is the same as the current setting, do nothing.
		Else
			;Retrieve current settings.
			$iHeight = $oPageStyle.Height()
			$iWidth = $oPageStyle.Width()

			;Switch Width with height, height with width.
			$oPageStyle.Height = $iWidth
			$oPageStyle.Width() = $iHeight
		EndIf

		$oPageStyle.IsLandscape = $bLandscape
		$iError = ($oPageStyle.IsLandscape() = $bLandscape) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStylePaperFormat

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleSet
; Description ...: Set a Page style for a paragraph by Cursor or paragraph Object.
; Syntax ........: _LOWriter_PageStyleSet(Byref $oDoc, Byref $oObj, $sPageStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oObj                - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
;                  $sPageStyle          - a string value. The Page Style name.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oObj does not support Paragraph Properties Service.
;				   @Error 1 @Extended 4 Return 0 = $sPageStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = Page Style defined in $sPageStyle doesn't exist in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Page Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Page Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParObjCreateList, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_PageStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleSet(ByRef $oDoc, ByRef $oObj, $sPageStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oObj.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	$sPageStyle = __LOWriter_PageStyleNameToggle($sPageStyle)
	$oObj.PageDescName = $sPageStyle
	Return ($oObj.PageStyleName() = $sPageStyle) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)

EndFunc   ;==>_LOWriter_PageStyleSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStylesGetNames
; Description ...: Retrieve a list of all Paragraph Style names available for a document.
; Syntax ........: _LOWriter_PageStylesGetNames(Byref $oDoc[, $bUserOnly = False[, $bAppliedOnly = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True only User-Created Page
;				   +						Styles are returned.
;                  $bAppliedOnly        - [optional] a boolean value. Default is False. If True only Applied Page Styles
;				   +						are returned.
; Return values .: ; Success: Integer or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAppliedOnly not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Page Styles Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 0 = Success. No Page Styles found according to parameters.
;				   @Error 0 @Extended ? Return Array = Success. An Array containing all Page Styles matching the
;				   +		input parameters. @Extended contains the count of results returned. If Only a Document object is
;				   +		input, all available Page styles will be returned. Else if $bUserOnly is set to True, only
;				   +		User-Created Page Styles are returned. Else, only Applied Page Styles are returned. If Both are
;				   +		true then only User-Created Page styles that are applied are returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: One Page style has two separate names, Default Page Style is also internally called "Standard"  Either
;					name works when setting a Page Style, but on certain functions that return a Page Style Name, you may see
;					the alternative name.
; Related .......: _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStylesGetNames(ByRef $oDoc, $bUserOnly = False, $bAppliedOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCount = 0
	Local $sExecute = ""
	Local $aStyles[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bAppliedOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	Local $oStyles = $oDoc.StyleFamilies.getByName("PageStyles")
	If Not IsObj($oStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $aStyles[$oStyles.getCount()]

	If Not $bUserOnly And Not $bAppliedOnly Then
		For $i = 0 To $oStyles.getCount() - 1
			$aStyles[$i] = $oStyles.getByIndex($i).DisplayName
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		Return SetError($__LOW_STATUS_SUCCESS, $i, $aStyles)
	EndIf

	$sExecute = ($bUserOnly) ? "($oStyles.getByIndex($i).isUserDefined())" : $sExecute
	$sExecute = ($bUserOnly And $bAppliedOnly) ? ($sExecute & " And ") : $sExecute
	$sExecute = ($bAppliedOnly) ? ($sExecute & "($oStyles.getByIndex($i).isInUse())") : $sExecute

	For $i = 0 To $oStyles.getCount() - 1
		If Execute($sExecute) Then
			$aStyles[$iCount] = $oStyles.getByIndex($i).DisplayName()
			$iCount += 1
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	ReDim $aStyles[$iCount]

	Return ($iCount = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_SUCCESS, $iCount, $aStyles)
EndFunc   ;==>_LOWriter_PageStylesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleShadow
; Description ...: Set or Retrieve the shadow settings for a Page Style.
; Syntax ........: _LOWriter_PageStyleShadow(Byref $oPageStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Page Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Page shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Page Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Page Shadow, must
;				   +						be one of the Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving ShadowFormat Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,	_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleShadow(ByRef $oPageStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tShdwFrmt
	Local $iError = 0
	Local $avShadow[4]

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$tShdwFrmt = $oPageStyle.ShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Or ($iWidth < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_SHADOW_BOTTOM_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oPageStyle.ShadowFormat = $tShdwFrmt
	;Error Checking
	$tShdwFrmt = $oPageStyle.ShadowFormat
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($tShdwFrmt.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($tShdwFrmt.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($tShdwFrmt.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($tShdwFrmt.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleTransparency
; Description ...: Modify or retrieve Transparency settings for a page style.
; Syntax ........: _LOWriter_PageStyleTransparency(Byref $oPageStyle[, $iTransparency = Null])
; Parameters ....: $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iTransparency       - [optional] an integer value. Default is Null. The color transparency. 0% is fully
;				   +						opaque and 100% is fully transparent.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oPageStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iTransparency not an Integer, less than 0 or greater than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1
;				   |								1 = Error setting $iTransparency
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 1 Return Integer = Success. All optional parameters were set to Null, returning
;				   +								current setting for Transparency in integer format.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleTransparency(ByRef $oPageStyle, $iTransparency = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0

	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iTransparency) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $oPageStyle.FillTransparence())

	If Not __LOWriter_IntIsBetween($iTransparency, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oPageStyle.FillTransparenceGradientName = ""
	$oPageStyle.FillTransparence = $iTransparency
	$iError = ($oPageStyle.FillTransparence() = $iTransparency) ? $iError : BitOR($iError, 1)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleTransparency

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PageStyleTransparencyGradient
; Description ...: Modify or retrieve the transparency gradient settings.
; Syntax ........: _LOWriter_PageStyleTransparencyGradient(Byref $oDoc, Byref $oPageStyle[, $iType = Null[, $iXCenter = Null[, $iYCenter = Null[, $iAngle = Null[, $iBorder = Null[, $iStart = Null[, $iEnd = Null]]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oPageStyle           - [in/out] an object. A Page Style object returned by previous PageStyle Create or
;				   +						Object Retrieval function.
;                  $iType               - [optional] an integer value. Default is Null. The type of transparency gradient that
;				   +							you want to apply. See Constants. Set to $LOW_GRAD_TYPE_OFF to turn Transparency
;				   +							Gradient off.
;                  $iXCenter            - [optional] an integer value. Default is Null. The horizontal offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iYCenter            - [optional] an integer value. Default is Null. The vertical offset for the gradient.
;				   +						Set in percentage. Minimum is 0, Maximum is 100%. $iType must be other than
;				   +						"Linear", or "Axial".
;                  $iAngle              - [optional] an integer value. Default is Null. The rotation angle for the gradient. Set
;				   +						in degrees, min 0, max 359 degrees. $iType must be other than "Radial".
;                  $iBorder             - [optional] an integer value. Default is Null. The amount by which you want to adjust
;				   +						the transparent area of the gradient. Set in percentage. Minimum is 0, Maximum is
;				   +						100%.
;                  $iStart              - [optional] an integer value. Default is Null. The transparency value for the beginning
;				   +						point of the gradient, where 0% is fully opaque and 100% is fully transparent.
;                  $iEnd                - [optional] an integer value. Default is Null. The transparency value for the endpoint
;				   +						of the gradient, where 0% is fully opaque and 100% is fully transparent.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oPageStyle not a Page Style Object.
;				   @Error 1 @Extended 3 Return 0 = $iType Not an Integer, less than 0 or greater than 5, see constants list.
;				   @Error 1 @Extended 4 Return 0 = $iXCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 5 Return 0 = $iYCenter Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 6 Return 0 = $iAngle Not an Integer, less than 0 or greater than 359.
;				   @Error 1 @Extended 7 Return 0 = $iBorder Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 8 Return 0 = $iStart Not an Integer, less than 0 or greater than 100.
;				   @Error 1 @Extended 9 Return 0 = $iEnd Not an Integer, less than 0 or greater than 100.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "FillTransparenceGradient" Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.drawing.TransparencyGradientTable" Object.
;				   @Error 2 @Extended 3 Return 0 = Error creating "com.sun.star.awt.Gradient" structure.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating Transparency Gradient Name.
;				   @Error 3 @Extended 2 Return 0 = Error setting Transparency Gradient Name.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iType
;				   |								2 = Error setting $iXCenter
;				   |								4 = Error setting $iYCenter
;				   |								8 = Error setting $iAngle
;				   |								16 = Error setting $iBorder
;				   |								32 = Error setting $iStart
;				   |								64 = Error setting $iEnd
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings have been successfully set.
;				   @Error 0 @Extended 0 Return 2 = Success. Transparency Gradient has been successfully turned off.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 7 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Gradient Type Constants: $LOW_GRAD_TYPE_OFF(-1),
;							$LOW_GRAD_TYPE_LINEAR(0),
;							$LOW_GRAD_TYPE_AXIAL(1),
;							$LOW_GRAD_TYPE_RADIAL(2),
;							$LOW_GRAD_TYPE_ELLIPTICAL(3),
;							$LOW_GRAD_TYPE_SQUARE(4),
;							$LOW_GRAD_TYPE_RECT(5)
; Related .......: _LOWriter_PageStyleCreate, _LOWriter_PageStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PageStyleTransparencyGradient(ByRef $oDoc, ByRef $oPageStyle, $iType = Null, $iXCenter = Null, $iYCenter = Null, $iAngle = Null, $iBorder = Null, $iStart = Null, $iEnd = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $tStyleGradient
	Local $sTGradName
	Local $iError = 0
	Local $aiTransparent[7]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oPageStyle.supportsService("com.sun.star.style.PageStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$tStyleGradient = $oPageStyle.FillTransparenceGradient()
	If Not IsObj($tStyleGradient) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iType, $iXCenter, $iYCenter, $iAngle, $iBorder, $iStart, $iEnd) Then
		__LOWriter_ArrayFill($aiTransparent, $tStyleGradient.Style(), $tStyleGradient.XOffset(), $tStyleGradient.YOffset(), _
				($tStyleGradient.Angle() / 10), $tStyleGradient.Border(), __LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.StartColor()), _
				__LOWriter_TransparencyGradientConvert(Null, $tStyleGradient.EndColor())) ;Angle is set in thousands
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiTransparent)
	EndIf

	If ($iType <> Null) Then
		If ($iType = $LOW_GRAD_TYPE_OFF) Then ;Turn Off Gradient
			$oPageStyle.FillTransparenceGradientName = ""
			Return SetError($__LOW_STATUS_SUCCESS, 0, 2)
		EndIf

		If Not __LOWriter_IntIsBetween($iType, $LOW_GRAD_TYPE_LINEAR, $LOW_GRAD_TYPE_RECT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tStyleGradient.Style = $iType
	EndIf

	If ($iXCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iXCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tStyleGradient.XOffset = $iXCenter
	EndIf

	If ($iYCenter <> Null) Then
		If Not __LOWriter_IntIsBetween($iYCenter, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tStyleGradient.YOffset = $iYCenter
	EndIf

	If ($iAngle <> Null) Then
		If Not __LOWriter_IntIsBetween($iAngle, 0, 359) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$tStyleGradient.Angle = ($iAngle * 10) ;Angle is set in thousands
	EndIf

	If ($iBorder <> Null) Then
		If Not __LOWriter_IntIsBetween($iBorder, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$tStyleGradient.Border = $iBorder
	EndIf

	If ($iStart <> Null) Then
		If Not __LOWriter_IntIsBetween($iStart, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$tStyleGradient.StartColor = __LOWriter_TransparencyGradientConvert($iStart)
	EndIf

	If ($iEnd <> Null) Then
		If Not __LOWriter_IntIsBetween($iEnd, 0, 100) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$tStyleGradient.EndColor = __LOWriter_TransparencyGradientConvert($iEnd)
	EndIf

	If ($oPageStyle.FillTransparenceGradientName() = "") Then
		$sTGradName = __LOWriter_TransparencyGradientNameInsert($oDoc, $tStyleGradient)
		If @error > 0 Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		$oPageStyle.FillTransparenceGradientName = $sTGradName
		If ($oPageStyle.FillTransparenceGradientName <> $sTGradName) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndIf

	$oPageStyle.FillTransparenceGradient = $tStyleGradient

	$iError = ($iType = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.Style() = $iType) ? $iError : BitOR($iError, 1)
	$iError = ($iXCenter = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.XOffset() = $iXCenter) ? $iError : BitOR($iError, 2)
	$iError = ($iYCenter = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.YOffset() = $iYCenter) ? $iError : BitOR($iError, 4)
	$iError = ($iAngle = Null) ? $iError : (($oPageStyle.FillTransparenceGradient.Angle() / 10) = $iAngle) ? $iError : BitOR($iError, 8)
	$iError = ($iBorder = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.Border() = $iBorder) ? $iError : BitOR($iError, 16)
	$iError = ($iStart = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.StartColor() = __LOWriter_TransparencyGradientConvert($iStart)) ? $iError : BitOR($iError, 32)
	$iError = ($iEnd = Null) ? $iError : ($oPageStyle.FillTransparenceGradient.EndColor() = __LOWriter_TransparencyGradientConvert($iEnd)) ? $iError : BitOR($iError, 64)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_PageStyleTransparencyGradient

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjCopy
; Description ...: "Copies" data selected by the ViewCursor, returning an Object for use in inserting later.
; Syntax ........: _LOWriter_ParObjCopy(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +						DocCreate function.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to Copy Selected Data, make sure Data is selected using the
;				   +						ViewCursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object  = Success. Data was successfully selected, returning an Object for use in
;				   +						_LOWriter_ParObjPaste.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Data you desire to be copied MUST be selected with the ViewCursor, see _LOWriter_ParObjSelect.
;				   This function works essentially the same as Copy/ Ctrl+C, except it doesn't use your clipboard. The Object
;					returned is used in _LOWriter_ParObjPaste to insert the data again. Copying data this way works for
;					Tables, Images, frames and Text, including with direct formatting, etc. Data copied can be inserted into
;					the same or another document.
; Related .......: _LOWriter_ParObjPaste, _LOWriter_ParObjSelect, _LOWriter_DocGetViewCursor, _LOWriter_CursorMove
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjCopy(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oObj

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	$oObj = $oDoc.CurrentController.getTransferable() ;Copy
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oObj)
EndFunc   ;==>_LOWriter_ParObjCopy

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjCreateList
; Description ...: Return Objects for every paragraph contained in a specific section of a document.
; Syntax ........: _LOWriter_ParObjCreateList(Byref $oCursor[, $bTableCheck = False])
; Parameters ....: $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. See Remarks
;                  $bTableCheck         - [optional] a boolean value. Default is False. If True, returned array will be 2
;				   +						dimensional, with the second column indicating if the paragraph object is a
;				   +						Table (True) or not (False).
; Return values .: Success: 1D or 2D Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bTableCheck not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create Enumeration of Paragraphs.
;				   --Success--
;				   @Error 0 @Extended ? Return Array  = Success. Returns an Array of Paragraph Objects, @Extended is set to the
;				   +		number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: 	$oCursor can be either a ViewCursor or a TextCursor, the paragraphs are enumerated for the area the cursor
;						is currently within, for example, the ViewCursor is currently in a Table, the enumeration of paragraphs
;						would be for the Cell the cursor was presently in. In the main document the enumeration would be for
;						the entire Text Body, in the Header, it would for the that Header for that Page Style etc. The
;						different possible areas are: Text Body, Table Cell, Header, Footer, Footnote, Endnote, Frame.
;					Returns an Array of objects for Direct Formatting paragraphs in a document, or for copying and inserting
;						etc. Table Objects returned from this function can be used as a regular Table Object to modify the Table
;						with.
; Related .......: _LOWriter_ParObjSectionsGet, _LOWriter_ParObjSelect, _LOWriter_ParObjDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjCreateList(ByRef $oCursor, $bTableCheck = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oEnum, $oPar
	Local $iCount = 0
	Local $aoParagraphs[1]

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bTableCheck) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oEnum = $oCursor.Text.createEnumeration()
	If Not IsObj($oEnum) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($bTableCheck = True) Then ReDim $aoParagraphs[1][2]

	While $oEnum.hasMoreElements()
		$oPar = $oEnum.nextElement()

		If ($bTableCheck = True) Then

			If UBound($aoParagraphs) <= ($iCount) Then ReDim $aoParagraphs[UBound($aoParagraphs) * 2][2]
			$aoParagraphs[$iCount][0] = $oPar
			$aoParagraphs[$iCount][1] = ($oPar.supportsService("com.sun.star.text.TextTable"))
			$iCount += 1

		Else
			If UBound($aoParagraphs) <= ($iCount) Then ReDim $aoParagraphs[UBound($aoParagraphs) * 2]
			$aoParagraphs[$iCount] = $oPar
			$iCount += 1
		EndIf

		Sleep((IsInt($iCount / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	WEnd

	If ($bTableCheck = True) Then
		ReDim $aoParagraphs[$iCount][2]
	Else
		ReDim $aoParagraphs[$iCount]

	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $aoParagraphs)
EndFunc   ;==>_LOWriter_ParObjCreateList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjDelete
; Description ...: Delete a Paragraph Object returned from _LOWriter_ParObjCreateList. See Remarks.
; Syntax ........: _LOWriter_ParObjDelete(Byref $oParObj)
; Parameters ....: $oParObj             - [in/out] an object. A Paragraph Object returned by _LOWriter_ParObjCreateList.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParObj not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Paragraph was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: you cannot delete the last paragraph contained in a Text area, it will cause a COM error.
; Related .......: _LOWriter_ParObjCreateList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjDelete(ByRef $oParObj)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oParObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($oParObj.supportsService("com.sun.star.text.TextTable")) Then
		$oParObj.dispose()

	Else
		$oParObj.Text.removeTextContent($oParObj)

	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParObjDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjPaste
; Description ...: Inserts a ParObjCopy Object at the current ViewCursor location.
; Syntax ........: _LOWriter_ParObjPaste(Byref $oDoc, Byref $oParObj)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +						DocCreate function.
;                  $oParObj             - [in/out] an object. A Object returned from _LOWriter_ParObjCopy to insert.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParObj not an Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Data was successfully inserted as the ViewCursor location.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParObjCopy
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjPaste(ByRef $oDoc, ByRef $oParObj)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oDoc.CurrentController.insertTransferable($oParObj)

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParObjPaste

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjSectionsGet
; Description ...: Break a Paragraph Object into individual Sections for Direct Formatting etc. See Remarks.
; Syntax ........: _LOWriter_ParObjSectionsGet(Byref $oParagraph)
; Parameters ....: $oParagraph          - [in/out] an object. A Paragraph Object returned from _LOWriter_ParObjCreateList
;				   +						function. Make sure it's not a Table!
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParagraph is not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParagraph does not support Paragraph service -- Not a paragraph Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error enumerating Paragraph sections.
;				   --Success--
;				   @Error 0 @Extended 0 Return Array = Success. A two column array. See remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: A Paragraph in a Document may have more than one section if it contains direct formatting, foot/endnote
;					anchors etc. The Array returned is a two column array with array[0][0] containing the section Object. The
;					second column, array[0][1] contains the section data type column being one of the following possible types:
;					Text – String content.
;					TextField – TextField content.
;					TextContent – Indicates that text content is anchored as or to a character that is not really
;					part of the paragraph—for example, a text frame or a graphic object.
;					ControlCharacter – Control character.
;					Footnote – Footnote or endnote. (Note this is just the anchor character for the footnote/Endnote, not the
;						actual foot/endnote content.
;					ReferenceMark – Reference mark.
;					DocumentIndexMark – Document index mark.
;					Bookmark – Bookmark.
;					Redline – Redline portion, which is a result of the change-tracking feature.
;					Ruby – a ruby attribute which is used in Asian text
;					Frame — a frame
;					SoftPageBreak — a soft page break
;					InContentMetadata — a text range with attached metadata
;					For Reference marks, document index marks, etc., 2 text portions will be generated, one for the start
;						position and one for the end position.
; Related .......: _LOWriter_ParObjCreateList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjSectionsGet(ByRef $oParagraph)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSecEnum, $oParSection
	Local $aoSections[1][2]
	Local $iCount = 0

	If Not IsObj($oParagraph) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParagraph.supportsService("com.sun.star.text.Paragraph") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oSecEnum = $oParagraph.createEnumeration()
	If Not IsObj($oSecEnum) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	While $oSecEnum.hasMoreElements()
		$oParSection = $oSecEnum.nextElement()

		If UBound($aoSections) <= ($iCount + 1) Then ReDim $aoSections[UBound($aoSections) * 10][2]
		$aoSections[$iCount][0] = $oParSection
		$aoSections[$iCount][1] = $oParSection.TextPortionType
		$iCount += 1
		Sleep((IsInt($iCount / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	WEnd
	ReDim $aoSections[$iCount][2]
	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $aoSections)
EndFunc   ;==>_LOWriter_ParObjSectionsGet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParObjSelect
; Description ...: Causes a Paragraph Object to be selected by the ViewCursor.
; Syntax ........: _LOWriter_ParObjSelect(Byref $oDoc, Byref $oObj)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +						DocCreate function.
;                  $oObj             - [in/out] an object. A Paragraph Object returned from _LOWriter_ParObjCreateList,
;				   +						a Table or Frame Object, or a data selected by a Text Cursor, can be used.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to retrieve ViewCursor Object.
;				   @Error 3 @Extended 2 Return 0 = Failed to Move ViewCursor.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success. Object was successfully selected.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function causes the ViewCursor to move and select a Paragraph, Table, Frame, TextCursor data, etc.,
;					usually in preparation for calling _LOWriter_ParObjCopy.
; Related .......: _LOWriter_ParObjCreateList, _LOWriter_ParObjCopy, _LOWriter_TableGetObjByName, _LOWriter_TableGetObjByCursor,
;					_LOWriter_TableInsert, _LOWriter_FrameGetObjByCursor, _LOWriter_FrameGetObjByName,
;					_LOWriter_DocGetViewCursor,	_LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor,	_LOWriter_FootnoteGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParObjSelect(ByRef $oDoc, ByRef $oObj)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oViewCursor

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$oDoc.CurrentController.Select($oObj)

	If ($oObj.supportsService("com.sun.star.text.TextTable")) Then

		$oViewCursor = _LOWriter_DocGetViewCursor($oDoc)
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

		_LOWriter_CursorMove($oViewCursor, $LOW_VIEWCUR_GOTO_END, 1, True) ;Move and select to End of cell
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

		_LOWriter_CursorMove($oViewCursor, $LOW_VIEWCUR_GOTO_END, 1, True) ;Move and select to End of Table
		If (@error > 0) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParObjSelect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleAlignment
; Description ...: Set and Retrieve Alignment settings for a paragraph style.
; Syntax ........: _LOWriter_ParStyleAlignment(Byref $oParStyle[, $iHorAlign = Null[, $iVertAlign = Null[, $iLastLineAlign = Null[, $bExpandSingleWord = Null[, $bSnapToGrid = Null[, $iTxtDirection = Null]]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iHorAlign           - [optional] an integer value. Default is Null. The Horizontal alignment of the
;				   +						paragraph. See Constants below. See Remarks.
;                  $iVertAlign          - [optional] an integer value. Default is Null. The Vertical alignment of the
;				   +						paragraph. See Constants below.
;                  $iLastLineAlign      - [optional] an integer value. Default is Null. Specify the alignment for the last line
;				   +						 in the paragraph. See Constants below. See Remarks.
;                  $bExpandSingleWord   - [optional] a boolean value. Default is Null. If the last line of a justified paragraph
;				   +						consists of one word, the word is stretched to the width of the paragraph.
;                  $bSnapToGrid         - [optional] a boolean value. Default is Null. If True, Aligns the paragraph to a text
;				   +						grid (if one is active).
;                  $iTxtDirection       - [optional] an integer value. Default is Null. The Text Writing Direction. See Constants
;				   +						below. [Libre Office Default is 4]
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iHorAlign not an integer, less than 0 or greater than 3.
;				   @Error 1 @Extended 5 Return 0 = $iVertAlign not an integer, less than 0 or more than 4.
;				   @Error 1 @Extended 6 Return 0 = $iLastLineAlign not an integer, less than 0 or more than 3.
;				   @Error 1 @Extended 7 Return 0 = $bExpandSingleWord not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bSnapToGrid not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $iTxtDirection not an Integer, less than 0 or greater than 5, see constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iHorAlign
;				   |								2 = Error setting $iVertAlign
;				   |								4 = Error setting $iLastLineALign
;				   |								8 = Error setting $bExpandSIngleWord
;				   |								16 = Error setting $bSnapToGrid
;				   |								32 = Error setting $iTxtDirection
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iHorAlign must be set to $LOW_PAR_ALIGN_HOR_JUSTIFIED(2) before you can set $iLastLineAlign, and
;					$iLastLineAlign must be set to $LOW_PAR_LAST_LINE_JUSTIFIED(2) before $bExpandSingleWord can be set.
;					Note: $iTxtDirection constants 2,3, and 5 may not be available depending on your language settings.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Horizontal Alignment Constants: $LOW_PAR_ALIGN_HOR_LEFT(0); The Paragraph is left-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_RIGHT(1); The Paragraph is right-aligned between the borders.
;									$LOW_PAR_ALIGN_HOR_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_ALIGN_HOR_CENTER(3); The Paragraph is centered between the left and right borders.
; Vertical Alignment Constants: $LOW_PAR_ALIGN_VERT_AUTO(0); In automatic mode, horizontal text is aligned to the baseline. The
;										same applies to text that is rotated 90°. Text that is rotated 270 ° is aligned to the
;										center.
;									$LOW_PAR_ALIGN_VERT_BASELINE(1); The text is aligned to the baseline.
;									$LOW_PAR_ALIGN_VERT_TOP(2); The text is aligned to the top.
;									$LOW_PAR_ALIGN_VERT_CENTER(3); The text is aligned to the center.
;									$LOW_PAR_ALIGN_VERT_BOTTOM(4); The text is aligned to bottom.
; Last Line Alignment Constants: $LOW_PAR_LAST_LINE_START(0); The Paragraph is aligned either to the Left border or the right,
;										depending on the current text direction.
;									$LOW_PAR_LAST_LINE_JUSTIFIED(2); The Paragraph is adjusted to both borders / stretched.
;									$LOW_PAR_LAST_LINE_CENTER(3); The Paragraph is centered between the left and right borders.
; Text Direction Constants: $LOW_TXT_DIR_LR_TB(0), — text within lines is written left-to-right. Lines and blocks are placed
;								top-to-bottom. Typically, this is the writing mode for normal "alphabetic" text.
;							$LOW_TXT_DIR_RL_TB(1), — text within a line are written right-to-left. Lines and blocks are placed
;								top-to-bottom. Typically, this writing mode is used in Arabic and Hebrew text.
;							$LOW_TXT_DIR_TB_RL(2), — text within a line is written top-to-bottom. Lines and blocks are placed
;								right-to-left. Typically, this writing mode is used in Chinese and Japanese text.
;							$LOW_TXT_DIR_TB_LR(3), — text within a line is written top-to-bottom. Lines and blocks are placed
;								left-to-right. Typically, this writing mode is used in Mongolian text.
;							$LOW_TXT_DIR_CONTEXT(4)[LibreOffice Default], — obtain actual writing mode from the context of the
;								object.
;							$LOW_TXT_DIR_BT_LR(5), — text within a line is written bottom-to-top. Lines and blocks are placed
;								left-to-right. (LibreOffice 6.3)
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleAlignment(ByRef $oParStyle, $iHorAlign = Null, $iVertAlign = Null, $iLastLineAlign = Null, $bExpandSingleWord = Null, $bSnapToGrid = Null, $iTxtDirection = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParAlignment($oParStyle, $iHorAlign, $iVertAlign, $iLastLineAlign, $bExpandSingleWord, $bSnapToGrid, $iTxtDirection)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleAlignment

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleBackColor
; Description ...: Set or Retrieve background color settings for a Paragraph style.
; Syntax ........: _LOWriter_ParStyleBackColor(Byref $oDoc, $sParStyle[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iBackColor          - [optional] an integer value. Default is Null. The color to make the background. Set in
;				   +							Long integer format. Can be one of the below constants or a custom value.
;												Set to $LOW_COLOR_OFF(-1), to turn Background color off.
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. Whether the background color is
;				   +						transparent or not. True = visible.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iBackColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bBackTransparent not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleBackColor(ByRef $oParStyle, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParBackColor($oParStyle, $iBackColor, $bBackTransparent)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleBackColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleBorderColor
; Description ...: Set and Retrieve the Paragraph Style Border Line Color. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_ParStyleBorderColor(Byref $oParStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Paragraph Style in Long Color code format. One of the predefined constants listed
;				   +						below can be used, or a custom value.
; Internal Remark: Certain Error values are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong, _LOWriter_ParStyleBorderWidth, _LOWriter_ParStyleBorderStyle,
;					_LOWriter_ParStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleBorderColor(ByRef $oParStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oParStyle, False, False, True, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleBorderPadding
; Description ...: Set or retrieve the Border Padding (spacing between the Paragraph and border) settings.
; Syntax ........: _LOWriter_ParStyleBorderPadding(Byref $oParStyle[, $iAll = Null[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iAll                - [optional] an integer value. Default is Null. Set all four padding distances to one
;				   +						distance in Micrometers (uM).
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Paragraph in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Paragraph in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAll not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iRight not an Integer.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iAll border distance
;				   |								2 = Error setting $iTop border distance
;				   |								4 = Error setting $iBottom border distance
;				   |								8 = Error setting $iLeft border distance
;				   |								16 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_ParStyleBorderWidth, _LOWriter_ParStyleBorderStyle,
;					_LOWriter_ParStyleBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleBorderPadding(ByRef $oParStyle, $iAll = Null, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParBorderPadding($oParStyle, $iAll, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleBorderStyle
; Description ...: Set and retrieve the Paragraph Style Border Line style. Libre Office Version 3.4 and Up.
; Syntax ........: _LOWriter_ParStyleBorderStyle(Byref $oParStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Paragraph Style using one of the line style constants, See below for list. To
;				   +							skip a parameter, set it to Null.
; Internal Remark: Certain Error values are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line
;						with a thin line outside and a thick line inside separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;						$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line
;						inside separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border
;						line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border
;						line consisting of two fixed thin lines separated by a variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStyleBorderWidth,
;					_LOWriter_ParStyleBorderColor, _LOWriter_ParStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleBorderStyle(ByRef $oParStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$vReturn = __LOWriter_Border($oParStyle, False, True, False, $iTop, $iBottom, $iLeft, $iRight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleBorderWidth
; Description ...: Set and retrieve the Paragraph Style Border Line Width, or the Paragraph Style Connect Border option.
; Syntax ........: _LOWriter_ParStyleBorderWidth(Byref $oParStyle[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $bConnectBorder = Null]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +							Paragraph Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Paragraph Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Paragraph Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Paragraph Style in MicroMeters. One of the predefined constants listed below can
;				   +						be used. To skip a parameter, set it to Null. Libre Office Version 3.4 and Up.
;                  $bConnectBorder      - [optional] a boolean value. Default is Null. Determines if borders set for a paragraph
;				   +						are merged with the next paragraph. Note: Borders are only merged if they are
;				   +						identical. Libre Office Version 3.4 and Up.
; Internal Remark: Certain Error values are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 7 Return 0 = $bConnectBorder Not a Boolean and Not set to Null.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1  = Success.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set them to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_ParStyleBorderStyle, _LOWriter_ParStyleBorderColor,
;					_LOWriter_ParStyleBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleBorderWidth(ByRef $oParStyle, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $bConnectBorder = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If ($bConnectBorder <> Null) And Not IsBool($bConnectBorder) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight, $bConnectBorder) Then
		$vReturn = __LOWriter_Border($oParStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
		__LOWriter_AddTo1DArray($vReturn, $oParStyle.ParaIsConnectBorder())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $vReturn)
	ElseIf Not __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then
		$vReturn = __LOWriter_Border($oParStyle, True, False, False, $iTop, $iBottom, $iLeft, $iRight)
		If @error Then Return SetError(@error, @extended, $vReturn)
	EndIf
	If ($bConnectBorder <> Null) Then $oParStyle.ParaIsConnectBorder = $bConnectBorder

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParStyleBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleCreate
; Description ...: Create a new Paragraph Style in a Document.
; Syntax ........: _LOWriter_ParStyleCreate(Byref $oDoc, $sParStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParStyle           - a string value. The Name of the New Paragraph Style to Create.
; Return values .:  Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sParStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = $sParStyle name already exists in document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Retrieving "ParagraphStyle" Object.
;				   @Error 2 @Extended 2 Return 0 = Error Creating "com.sun.star.style.ParagraphStyle" Object.
;				   @Error 2 @Extended 3 Return 0 = Error Retrieving Created Paragraph Style Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error creating new Paragraph Style by Name.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. New paragraph Style successfully created. Returning Paragraph
;				   +												Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParStyleDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleCreate(ByRef $oDoc, $sParStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oParStyles, $oStyle, $oParStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$oParStyles = $oDoc.StyleFamilies().getByName("ParagraphStyles")
	If Not IsObj($oParStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If _LOWriter_ParStyleExists($oDoc, $sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyle = $oDoc.createInstance("com.sun.star.style.ParagraphStyle")
	If Not IsObj($oStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$oParStyles.insertByName($sParStyle, $oStyle)

	If Not $oParStyles.hasByName($sParStyle) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)

	$oParStyle = $oParStyles.getByName($sParStyle)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oParStyle)
EndFunc   ;==>_LOWriter_ParStyleCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleDelete
; Description ...: Delete a User-Created Paragraph Style from a Document.
; Syntax ........: _LOWriter_ParStyleDelete(Byref $oDoc, $oParStyle[, $bForceDelete = False[, $sReplacementStyle = "Default Paragraph Style"]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function. Must be a User-Created Style, not a built-in Style native
;				   +						to Libre-Office.
;                  $bForceDelete        - [optional] a boolean value. Default is False. If True Paragraph style will be deleted
;				   +						regardless of whether it is in use or not.
;                  $sReplacementStyle   - [optional] a string value. Default is "Default Paragraph Style". The Paragraph style
;				   +						to use instead of the one being deleted if the paragraph style being deleted was
;				   +						already applied to text in the document.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $bForceDelete not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $sReplacementStyle not a String.
;				   @Error 1 @Extended 6 Return 0 = $sReplacementStyle doesn't exist in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving "ParagraphStyles" Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Paragraph Style Name.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $sParStyle is not a User-Created Paragraph Style and cannot be deleted.
;				   @Error 3 @Extended 2 Return 0 = $sParStyle is in use and $bForceDelete is false.
;				   @Error 3 @Extended 3 Return 0 = $sParStyle still exists after deletion attempt.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Paragraph Style called in $sParStyle was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleDelete(ByRef $oDoc, ByRef $oParStyle, $bForceDelete = False, $sReplacementStyle = "Default Paragraph Style")
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oParStyles
	Local $sParStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bForceDelete) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsString($sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($sReplacementStyle <> "") And Not _LOWriter_ParStyleExists($oDoc, $sReplacementStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	$oParStyles = $oDoc.StyleFamilies().getByName("ParagraphStyles")
	If Not IsObj($oParStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$sParStyle = $oParStyle.Name()
	If Not IsString($sParStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	If Not $oParStyle.isUserDefined() Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
	If $oParStyle.isInUse() And Not ($bForceDelete) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ; If Style is in use return an error unless force delete is true.

	If ($oParStyle.getParentStyle() = Null) Or ($sReplacementStyle <> "Default Paragraph Style") Then $oParStyle.setParentStyle($sReplacementStyle)
	;If Parent style is blank set it to "Default Paragraph Style", Or if not but User has called a specific style set it to that.

	$oParStyles.removeByName($sParStyle)
	Return ($oParStyles.hasByName($sParStyle)) ? SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParStyleDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleDropCaps
; Description ...: Set or Retrieve DropCaps settings for a Paragraph style.
; Syntax ........: _LOWriter_ParStyleDropCaps(Byref $oDoc, $oParStyle[, $iNumChar = Null[, $iLines = Null[, $iSpcTxt = Null[, $bWholeWord = Null[, $sCharStyle = Null]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iNumChar            - [optional] an integer value. Default is Null. The number of characters to make into
;				   +									DropCaps. Min is 0, max is 9.
;                  $iLines              - [optional] an integer value. Default is Null. The number of lines to drop down, min is
;				   +								0, max is 9, cannot be 1.
;                  $iSpcTxt             - [optional] an integer value. Default is Null. The distance between the drop cap and the
;				   +								following text. in MicroMeters.
;                  $bWholeWord          - [optional] a boolean value. Default is Null. Whether to DropCap the whole first word.
;				   +									(Nullifys $iNumChars.)
;                  $sCharStyle          - [optional] a string value. Default is Null. The character style to use for the
;				   +							DropCaps. See Remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $sCharStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iNumChar not an integer, less than 0 or greater than 9.
;				   @Error 1 @Extended 7 Return 0 = $iLines not an Integer, less than 0, equal to 1 or greater than 9
;				   @Error 1 @Extended 8 Return 0 = $iSpaceTxt not an Integer, or less than 0.
;				   @Error 1 @Extended 9 Return 0 = $bWholeWord not a Boolean.
;				   @Error 1 @Extended 10 Return 0 = $sCharStyle not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving DropCap Format Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $iNumChar
;				   |								2 = Error setting $iLines
;				   |								4 = Error setting $iSpcTxt
;				   |								8 = Error setting $bWholeWord
;				   |								16 = Error setting $sCharStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Set $iNumChars, $iLines, $iSpcTxt to 0 to disable DropCaps.
;					I am unable to find a way to set Drop Caps character style to "None" as is available in the User Interface.
;					When it is set to "None" Libre returns a blank string ("") but setting it to a blank string throws a COM
;					error/Exception, even when attempting to set it to Libre's own return value without any in-between
;					variables, in case I was mistaken as to it being a blank string, but this still caused a COM error. So
;					consequently, you cannot set Character Style to "None", but you can still disable Drop Caps as noted above.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleDropCaps(ByRef $oDoc, ByRef $oParStyle, $iNumChar = Null, $iLines = Null, $iSpcTxt = Null, $bWholeWord = Null, $sCharStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($sCharStyle <> Null) And Not _LOWriter_CharStyleExists($oDoc, $sCharStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParDropCaps($oParStyle, $iNumChar, $iLines, $iSpcTxt, $bWholeWord, $sCharStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleDropCaps

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleEffect
; Description ...: Set or Retrieve the Font Effect settings for a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleEffect(Byref $oParStyle[, $iRelief = Null[, $iCase = Null[, $bHidden = Null[, $bOutline = Null[, $bShadow = Null]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iRelief             - [optional] an integer value. Default is Null. The Character Relief style. See Constants
;				   +									below.
;                  $iCase               - [optional] an integer value. Default is Null. The Character Case Style. See Constants
;				   +									below.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether the Characters are hidden or not.
;                  $bOutline            - [optional] a boolean value. Default is Null. Whether the characters have an outline
;				   +									around the outside.
;                  $bShadow             - [optional] a boolean value. Default is Null. Whether the characters have a shadow.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRelief not an integer or less than 0 or greater than 2. See Constants.
;				   @Error 1 @Extended 5 Return 0 = $iCase not an integer or less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 6 Return 0 = $bHidden not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bOutline not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bShadow not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8, 16
;				   |								1 = Error setting $iRelief
;				   |								2 = Error setting $iCase
;				   |								4 = Error setting $bHidden
;				   |								8 = Error setting $bOutline
;				   |								16 = Error setting $bShadow
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Relief Constants: $LOW_RELIEF_NONE(0); no relief is used.
;						$LOW_RELIEF_EMBOSSED(1); the font relief is embossed.
;						$LOW_RELIEF_ENGRAVED(2); the font relief is engraved.
; Case Constants : 	$LOW_CASEMAP_NONE(0); The case of the characters is unchanged.
;						$LOW_CASEMAP_UPPER(1); All characters are put in upper case.
;						$LOW_CASEMAP_LOWER(2); All characters are put in lower case.
;						$LOW_CASEMAP_TITLE(3); The first character of each word is put in upper case.
;						$LOW_CASEMAP_SM_CAPS(4); All characters are put in upper case, but with a smaller font height.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleEffect(ByRef $oParStyle, $iRelief = Null, $iCase = Null, $bHidden = Null, $bOutline = Null, $bShadow = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharEffect($oParStyle, $iRelief, $iCase, $bHidden, $bOutline, $bShadow)
	Return SetError(@error, @extended, $vReturn)

EndFunc   ;==>_LOWriter_ParStyleEffect

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleExists
; Description ...: Check whether a Document contains a specific Paragraph Style by name.
; Syntax ........: _LOWriter_ParStyleExists(Byref $oDoc, $sParStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParStyle           - a string value. The Paragraph Style Name to search for.
; Return values .: Success: Boolean
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sParStyle not a String.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Success. If the Document contains a Paragraph style matching the input
;				   +										name, True is returned, else False.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleExists(ByRef $oDoc, $sParStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If $oDoc.StyleFamilies.getByName("ParagraphStyles").hasByName($sParStyle) Then Return SetError($__LOW_STATUS_SUCCESS, 0, True)

	Return SetError($__LOW_STATUS_SUCCESS, 0, False)
EndFunc   ;==>_LOWriter_ParStyleExists

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleFont
; Description ...: Set and Retrieve the Font Settings for a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleFont(Byref $oDoc, Byref $oParStyle[, $sFontName = Null[, $nFontSize = Null[, $iPosture = Null[, $iWeight = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $sFontName           - [optional] a string value. Default is Null. The Font Name to change to.
;                  $nFontSize           - [optional] a general number value. Default is Null. The new Font size.
;                  $iPosture            - [optional] an integer value. Default is Null. Italic setting. See Constants below. Also
;				   +								see remarks.
;                  $iWeight             - [optional] an integer value. Default is Null. Bold settings see Constants below.
;				   +								Also see remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $sFontName not available in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $sFontName not a String.
;				   @Error 1 @Extended 7 Return 0 = $nFontSize not a Number.
;				   @Error 1 @Extended 8 Return 0 = $iPosture not an Integer, less than 0 or greater than 5. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $iWeight less than 50 and not 0, or more than 200. See Constants.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $sFontName
;				   |								2 = Error setting $nFontSize
;				   |								4 = Error setting $iPosture
;				   |								8 = Error setting $iWeight
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Not every font accepts Bold and Italic settings, and not all settings for bold and Italic are accepted,
;					such as oblique, ultra Bold etc. Libre Writer accepts only the predefined weight values, any other values
;					are changed automatically to an acceptable value, which could trigger a settings error.
; Weight Constants : $LOW_WEIGHT_DONT_KNOW(0); The font weight is not specified/known.
;						$LOW_WEIGHT_THIN(50); specifies a 50% font weight.
;						$LOW_WEIGHT_ULTRA_LIGHT(60); specifies a 60% font weight.
;						$LOW_WEIGHT_LIGHT(75); specifies a 75% font weight.
;						$LOW_WEIGHT_SEMI_LIGHT(90); specifies a 90% font weight.
;						$LOW_WEIGHT_NORMAL(100); specifies a normal font weight.
;						$LOW_WEIGHT_SEMI_BOLD(110); specifies a 110% font weight.
;						$LOW_WEIGHT_BOLD(150); specifies a 150% font weight.
;						$LOW_WEIGHT_ULTRA_BOLD(175); specifies a 175% font weight.
;						$LOW_WEIGHT_BLACK(200); specifies a 200% font weight.
; Slant/Posture Constants : $LOW_POSTURE_NONE(0); specifies a font without slant.
;							$LOW_POSTURE_OBLIQUE(1); specifies an oblique font (slant not designed into the font).
;							$LOW_POSTURE_ITALIC(2); specifies an italic font (slant designed into the font).
;							$LOW_POSTURE_DontKnow(3); specifies a font with an unknown slant.
;							$LOW_POSTURE_REV_OBLIQUE(4); specifies a reverse oblique font (slant not designed into the font).
;							$LOW_POSTURE_REV_ITALIC(5); specifies a reverse italic font (slant designed into the font).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_FontsList
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleFont(ByRef $oDoc, ByRef $oParStyle, $sFontName = Null, $nFontSize = Null, $iPosture = Null, $iWeight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If ($sFontName <> Null) And Not _LOWriter_FontExists($oDoc, $sFontName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_CharFont($oParStyle, $sFontName, $nFontSize, $iPosture, $iWeight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleFont

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleFontColor
; Description ...: Set or retrieve the font color, transparency and highlighting of a paragraph style.
; Syntax ........: _LOWriter_ParStyleFontColor(Byref $oParStyle[, $iFontColor = Null[, $iTransparency = Null[, $iHighlight = Null]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iFontColor          - [optional] an integer value. Default is Null. the desired Color value in Long Integer
;				   +								format, to make the font, can be one of the constants listed below or a
;				   +								custom value. Set to $LOW_COLOR_OFF(-1) for Auto color.
;                  $iTransparency       - [optional] an integer value. Default is Null. Transparency percentage. 0 is not
;				   +								visible, 100 is fully visible. Available for Libre Office 7.0 and up.
;                  $iHighlight          - [optional] an integer value. Default is Null. A Color value in Long Integer format,
;				   +								to highlight the text in, can be one of the constants listed below or a
;				   +								custom value. Set to $LOW_COLOR_OFF(-1) for No color.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iFontColor not an integer, less than -1 or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $iTransparency not an Integer, or less than 0 or greater than 100%.
;				   @Error 1 @Extended 6 Return 0 = $iHighlight not an integer, less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $FontColor
;				   |								2 = Error setting $iTransparency.
;				   |								4 = Error setting $iHighlight
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 7.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 or 3 Element Array with values in order of function
;				   +								parameters. If The current Libre Office version is below 7.0 the returned
;				   +								array will contain 2 elements, because $iTransparency is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: When setting transparency, the value of font color value is changed.
; Color Constants: $LOW_COLOR_OFF(-1)
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleFontColor(ByRef $oParStyle, $iFontColor = Null, $iTransparency = Null, $iHighlight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharFontColor($oParStyle, $iFontColor, $iTransparency, $iHighlight)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleFontColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleGetObj
; Description ...: Retrieve a Paragraph Style Object for use with other ParStyle functions.
; Syntax ........: _LOWriter_ParStyleGetObj(Byref $oDoc, $sParStyle)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sParStyle           - a string value. The Paragraph Style name to retrieve the Object for.
; Return values .: Success: Object
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sParStyle not a String.
;				   @Error 1 @Extended 3 Return 0 = Paragraph Style defined in $sParStyle not found in Document.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Paragraph Style Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Paragraph Style successfully retrieved, returning Paragraph
;				   +										Style Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleGetObj(ByRef $oDoc, $sParStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oParStyle

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_ParStyleExists($oDoc, $sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oParStyle = $oDoc.StyleFamilies().getByName("ParagraphStyles").getByName($sParStyle)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oParStyle)
EndFunc   ;==>_LOWriter_ParStyleGetObj

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleHyphenation
; Description ...: Set or Retrieve Hyphenation settings for a paragraph Style.
; Syntax ........: _LOWriter_ParStyleHyphenation(Byref $oParStyle[, $bAutoHyphen = Null[, $bHyphenNoCaps = Null[, $iMaxHyphens = Null[, $iMinLeadingChar = Null[, $iMinTrailingChar = Null]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bAutoHyphen         - [optional] a boolean value. Default is Null. Whether  automatic hyphenation is applied.
;                  $bHyphenNoCaps       - [optional] a boolean value. Default is Null. Setting to true will disable hyphenation
;				   +						of words written in CAPS for this paragraph. Libre 6.4 and up.
;                  $iMaxHyphens         - [optional] an integer value. Default is Null. The maximum number of consecutive
;				   +						hyphens. Min 0, Max 99.
;                  $iMinLeadingChar     - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain before the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
;                  $iMinTrailingChar    - [optional] an integer value. Default is Null. Specifies the minimum number of
;				   +						characters to remain after the hyphen character (when hyphenation is applied).
;				   +						Min 2, max 9.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoHyphen not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bHyphenNoCaps not  a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iMaxHyphens not an Integer, less than 0, or greater than 99.
;				   @Error 1 @Extended 7 Return 0 = $iMinLeadingChar not an Integer, less than 2 or greater than 9.
;				   @Error 1 @Extended 8 Return 0 = $iMinTrailingChar not an Integer, less than 2 or greater than 9.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $bAutoHyphen
;				   |								2 = Error setting $bHyphenNoCaps
;				   |								4 = Error setting $iMaxHyphens
;				   |								8 = Error setting $iMinLeadingChar
;				   |								16 = Error setting $iMinTrailingChar
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 6.4.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 or 5 Element Array with values in order of function
;				   +								parameters. If the current Libre Office Version is below 6.4, then the
;				   +								Array returned will contain 4 elements because $bHyphenNoCaps is not
;				   +								available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $bAutoHyphen set to True for the rest of the settings to be activated, but they will be still
;					successfully set regardless.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleHyphenation(ByRef $oParStyle, $bAutoHyphen = Null, $bHyphenNoCaps = Null, $iMaxHyphens = Null, $iMinLeadingChar = Null, $iMinTrailingChar = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParHyphenation($oParStyle, $bAutoHyphen, $bHyphenNoCaps, $iMaxHyphens, $iMinLeadingChar, $iMinTrailingChar)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleHyphenation

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleIndent
; Description ...: Set or Retrieve Indent settings for a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleIndent(Byref $oParStyle[, $iBeforeTxt = Null[, $iAfterTxt = Null[, $iFirstLine = Null[, $bAutoFirstLine = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iBeforeTxt          - [optional] an integer value. Default is Null. The amount of space that you want
;				   +						to indent the paragraph from the page margin. If you want the paragraph to extend
;				   +						into the page margin, enter a negative number. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094
;                  $iAfterTxt           - [optional] an integer value. Default is Null. The amount of space that you want to
;				   +						indent the paragraph from the page margin. If you want the paragraph to extend into
;				   +						the page margin, enter a negative number. Set in MicroMeters(uM) Min. -9998989,
;				   +						Max.17094
;                  $iFirstLine          - [optional] an integer value. Default is Null. Indents the first line of a paragraph by
;				   +						the amount that you enter. Set in MicroMeters(uM) Min. -57785, Max.17094.
;                  $bAutoFirstLine      - [optional] a boolean value. Default is Null. Whether the first line should be indented
;				   +						automatically.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iBeforeText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 5 Return 0 = $iAfterText not an integer, less than -9998989 or more than 17094 uM.
;				   @Error 1 @Extended 6 Return 0 = $iFirstLine not an integer, less than -57785 or more than 17094 uM.
;				   @Error 1 @Extended 7 Return 0 = $bAutoFirstLine not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iBeforeTxt
;				   |								2 = Error setting $iAfterTxt
;				   |								4 = Error setting $iFirstLine
;				   |								8 = Error setting $bAutoFirstLine
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iFirstLine Indent cannot be set if $bAutoFirstLine is set to True.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleIndent(ByRef $oParStyle, $iBeforeTxt = Null, $iAfterTxt = Null, $iFirstLine = Null, $bAutoFirstLine = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParIndent($oParStyle, $iBeforeTxt, $iAfterTxt, $iFirstLine, $bAutoFirstLine)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleIndent

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleOrganizer
; Description ...: Set or retrieve the Organizer settings of a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleOrganizer(Byref $oDoc, $oParStyle[, $sNewParStyleName = Null[, $sFollowStyle = Null[, $sParentStyle = Null[, $bAutoUpdate = Null[, $bHidden = Null]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $sNewParStyleName    - [optional] a string value. Default is Null. The new name to set $sParStyle paragraph
;				   +						style to.
;                  $sFollowStyle        - [optional] a string value. Default is Null. The name of the style that is applied to
;				   +						the next paragraph.
;                  $sParentStyle        - [optional] a string value. Default is Null. Set an existing  paragraph style
;				   +						(or an Empty String ("") = - None -) to apply its settings to the current style.
;				   +						Use the other settings to modify the inherited style settings.
;                  $bAutoUpdate         - [optional] a boolean value. Default is Null. If True, Updates the style when you
;				   +						apply direct formatting to a paragraph using this style in your document. The
;				   +						formatting of all paragraphs using this style is automatically updated.
;                  $bHidden             - [optional] a boolean value. Default is Null. Whether to hide the style in the UI. Libre
;				   +						4.0 and up Only.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $sNewParStyleName not a String.
;				   @Error 1 @Extended 5 Return 0 = $sNewParStyleName already exists in document.
;				   @Error 1 @Extended 6 Return 0 = $sFollowStyle not a String.
;				   @Error 1 @Extended 7 Return 0 = $sFollowStyle doesn't exist in this document.
;				   @Error 1 @Extended 8 Return 0 = $sParentStyle not a String.
;				   @Error 1 @Extended 9 Return 0 = $sParentStyle Doesn't exist in this Document.
;				   @Error 1 @Extended 10 Return 0 = $bAutoUpdate not a Boolean.
;				   @Error 1 @Extended 11 Return 0 = $bHidden not a Boolean.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16
;				   |								1 = Error setting $sNewParStyleName
;				   |								2 = Error setting $sFollowStyle
;				   |								4 = Error setting $sParentStyle
;				   |								8 = Error setting $bAutoUpdate
;				   |								16 = Error setting $bHidden
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 4.0.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 or 5 Element Array with values in order of function
;				   +								parameters. If the Libre Office version is below 4.0, the Array will contain
;				   +								4 elements because $bHidden is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleOrganizer(ByRef $oDoc, ByRef $oParStyle, $sNewParStyleName = Null, $sFollowStyle = Null, $sParentStyle = Null, $bAutoUpdate = Null, $bHidden = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avOrganizer[4]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	If __LOWriter_VarsAreNull($sNewParStyleName, $sParentStyle, $sFollowStyle, $bAutoUpdate, $bHidden) Then
		If __LOWriter_VersionCheck(4.0) Then
			__LOWriter_ArrayFill($avOrganizer, $oParStyle.Name(), __LOWriter_ParStyleNameToggle($oParStyle.getPropertyValue("FollowStyle"), True), _
					__LOWriter_ParStyleNameToggle($oParStyle.ParentStyle(), True), _
					$oParStyle.IsAutoUpdate(), $oParStyle.Hidden())
		Else
			__LOWriter_ArrayFill($avOrganizer, $oParStyle.Name(), __LOWriter_ParStyleNameToggle($oParStyle.getPropertyValue("FollowStyle"), True), _
					__LOWriter_ParStyleNameToggle($oParStyle.ParentStyle(), True), $oParStyle.IsAutoUpdate())
		EndIf
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avOrganizer)
	EndIf

	If ($sNewParStyleName <> Null) Then
		If Not IsString($sNewParStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If _LOWriter_ParStyleExists($oDoc, $sNewParStyleName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oParStyle.Name = $sNewParStyleName
		$iError = ($oParStyle.Name() = $sNewParStyleName) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sFollowStyle <> Null) Then
		If Not IsString($sFollowStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not _LOWriter_ParStyleExists($oDoc, $sFollowStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$sFollowStyle = __LOWriter_ParStyleNameToggle($sFollowStyle)
		$oParStyle.setPropertyValue("FollowStyle", $sFollowStyle)
		$iError = ($oParStyle.getPropertyValue("FollowStyle") = $sFollowStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sParentStyle <> Null) Then
		If Not IsString($sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If ($sParentStyle <> "") Then
			If Not _LOWriter_ParStyleExists($oDoc, $sParentStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
			$sParentStyle = __LOWriter_ParStyleNameToggle($sParentStyle)
		EndIf
		$oParStyle.ParentStyle = $sParentStyle
		$iError = ($oParStyle.ParentStyle() = $sParentStyle) ? $iError : BitOR($iError, 4)
	EndIf

	If ($bAutoUpdate <> Null) Then
		If Not IsBool($bAutoUpdate) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		$oParStyle.IsAutoUpdate = $bAutoUpdate
		$iError = ($oParStyle.IsAutoUpdate() = $bAutoUpdate) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bHidden <> Null) Then
		If Not IsBool($bHidden) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		If Not __LOWriter_VersionCheck(4.0) Then Return SetError($__LOW_STATUS_VER_ERROR, 1, 0)
		$oParStyle.Hidden = $bHidden
		$iError = ($oParStyle.Hidden() = $bHidden) ? $iError : BitOR($iError, 16)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_ParStyleOrganizer

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleOutLineAndList
; Description ...: Set and Retrieve the Outline and List settings for a paragraph style.
; Syntax ........: _LOWriter_ParStyleOutLineAndList(Byref $oDoc, $oParStyle[, $iOutline = Null[, $sNumStyle = Null[, $bParLineCount = Null[, $iLineCountVal = Null]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iOutline            - [optional] an integer value. Default is Null. The Outline Level, see Constants below.
;				   +							Min is 0, max is 10.
;                  $sNumStyle           - [optional] a string value. Default is Null. Specifies the name of the style for the
;				   +							Paragraph numbering. Set to "" for None.
;                  $bParLineCount       - [optional] a boolean value. Default is Null. Whether the paragraph is included in the
;				   +							line numbering.
;                  $iLineCountVal       - [optional] an integer value. Default is Null. The start value for numbering if a new
;				   +							numbering starts at this paragraph. Set to 0 for no line numbering restart.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $sNumStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iOutline not an integer, less than 0 or greater than 10.
;				   @Error 1 @Extended 7 Return 0 = $sNumStyle not a String.
;				   @Error 1 @Extended 8 Return 0 = $bParLineCount not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $iLineCountVal Not an Integer or less than 0.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iOutline
;				   |								2 = Error setting $sNumStyle
;				   |								4 = Error setting $bParLineCount
;				   |								8 = Error setting $iLineCountVal
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Outline Constants :$LOW_OUTLINE_BODY(0); Indicates that the paragraph belongs to the body text.
;					$LOW_OUTLINE_LEVEL_1(1), Indicates that the paragraph belongs to the corresponding outline level.
;					$LOW_OUTLINE_LEVEL_2(2),
;					$LOW_OUTLINE_LEVEL_3(3),
;					$LOW_OUTLINE_LEVEL_4(4),
;					$LOW_OUTLINE_LEVEL_5(5),
;					$LOW_OUTLINE_LEVEL_6(6),
;					$LOW_OUTLINE_LEVEL_7(7),
;					$LOW_OUTLINE_LEVEL_8(8),
;					$LOW_OUTLINE_LEVEL_9(9),
;					$LOW_OUTLINE_LEVEL_10(10)
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_NumStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleOutLineAndList(ByRef $oDoc, ByRef $oParStyle, $iOutline = Null, $sNumStyle = Null, $bParLineCount = Null, $iLineCountVal = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($sNumStyle <> Null) And ($sNumStyle <> "") And Not _LOWriter_NumStyleExists($oDoc, $sNumStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParOutLineAndList($oParStyle, $iOutline, $sNumStyle, $bParLineCount, $iLineCountVal)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleOutLineAndList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleOverLine
; Description ...: Set and retrieve the OverLine settings for a paragraph style.
; Syntax ........: _LOWriter_ParStyleOverLine(Byref $oParStyle[, $bWordOnly = Null[, $iOverLineStyle = Null[, $bOLHasColor = Null[, $iOLColor = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not Overlined.
;                  $iOverLineStyle      - [optional] an integer value. Default is Null. The style of the Overline line, see
;				   +									constants listed below. See Remarks.
;                  $bOLHasColor         - [optional] a boolean value. Default is Null. Whether the Overline is colored, must
;				   +						be set to true in order to set the Overline color.
;                  $iOLColor            - [optional] an integer value. Default is Null. The color of the Overline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iOverLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bOLHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iOLColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iOverLineStyle
;				   |								4 = Error setting $OLHasColor
;				   |								8 = Error setting $iOLColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: OverLine line style uses the same constants as underline style.
;				   Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: $bOLHasColor must be set to true in order to set the Overline color.
; OverLine line style Constants: $LOW_UNDERLINE_NONE(0),
;					$LOW_UNDERLINE_SINGLE(1),
;					$LOW_UNDERLINE_DOUBLE(2),
;					$LOW_UNDERLINE_DOTTED(3),
;					$LOW_UNDERLINE_DONT_KNOW(4),
;					$LOW_UNDERLINE_DASH(5),
;					$LOW_UNDERLINE_LONG_DASH(6),
;					$LOW_UNDERLINE_DASH_DOT(7),
;					$LOW_UNDERLINE_DASH_DOT_DOT(8),
;					$LOW_UNDERLINE_SML_WAVE(9),
;					$LOW_UNDERLINE_WAVE(10),
;					$LOW_UNDERLINE_DBL_WAVE(11),
;					$LOW_UNDERLINE_BOLD(12),
;					$LOW_UNDERLINE_BOLD_DOTTED(13),
;					$LOW_UNDERLINE_BOLD_DASH(14),
;					$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;					$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;					$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;					$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleOverLine(ByRef $oParStyle, $bWordOnly = Null, $iOverLineStyle = Null, $bOLHasColor = Null, $iOLColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharOverLine($oParStyle, $bWordOnly, $iOverLineStyle, $bOLHasColor, $iOLColor)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleOverLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStylePageBreak
; Description ...: Set or Retrieve Page Break Settings for a Paragraph Style.
; Syntax ........: _LOWriter_ParStylePageBreak(Byref $oDoc, $oParStyle[, $iBreakType = Null[, $iPgNumOffSet = Null[, $sPageStyle = Null]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iBreakType          - [optional] an integer value. Default is Null. The Page Break Type. See Constants below.
;                  $iPgNumOffSet        - [optional] an integer value. Default is Null. If a page break property is set at a
;				   +						paragraph, this property contains the new value for the page number.
;                  $sPageStyle          - [optional] a string value. Default is Null. Creates a page break before the paragraph
;				   +						it belongs to and assigns the value as the name of the new page style to use. Note:
;				   +						If you set this parameter, to remove the page break setting you must set this to "".
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $sPageStyle not found in current document.
;				   @Error 1 @Extended 5 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iBreakType not an integer, less than 0 or greater than 6.
;				   @Error 1 @Extended 7 Return 0 = $iPgNumOffSet not an Integer or less than 0.
;				   @Error 1 @Extended 8 Return 0 = $sPageStyle not a String.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iBreakType
;				   |								2 = Error setting $iPgNumOffSet
;				   |								4 = Error setting $sPageStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Break Type must be set before PageStyle will be able to be set, and page style needs set before
;					$iPgNumOffSet can be set.
;					Libre doesn't directly show in its User interface options for Break type constants #3 and #6 (Column both)
;							and (Page both), but  doesn't throw an error when being set to either one, so they are included
;							here, though I'm not sure if they will work correctly.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Break Constants : $LOW_BREAK_NONE(0) – No column or page break is applied.
;						$LOW_BREAK_COLUMN_BEFORE(1) – A column break is applied before the current Paragraph. The current
;							Paragraph, therefore, is the first in the column.
;						$LOW_BREAK_COLUMN_AFTER(2) – A column break is applied after the current Paragraph. The current
;							Paragraph, therefore, is the last in the column.
;						$LOW_BREAK_COLUMN_BOTH(3) – A column break is applied before and after the current Paragraph. The
;							current Paragraph, therefore, is the only Paragraph in the column.
;						$LOW_BREAK_PAGE_BEFORE(4) – A page break is applied before the current Paragraph. The current Paragraph,
;						therefore, is the first on the page.
;						$LOW_BREAK_PAGE_AFTER(5) – A page break is applied after the current Paragraph. The current Paragraph,
;						therefore, is the last on the page.
;						$LOW_BREAK_PAGE_BOTH(6) – A page break is applied before and after the current Paragraph. The current
;						Paragraph, therefore, is the only paragraph on the page.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStylePageBreak(ByRef $oDoc, ByRef $oParStyle, $iBreakType = Null, $iPgNumOffSet = Null, $sPageStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($sPageStyle <> Null) And ($sPageStyle <> "") And Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParPageBreak($oParStyle, $iBreakType, $iPgNumOffSet, $sPageStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStylePageBreak

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStylePosition
; Description ...: Set and retrieve settings related to Sub/Super Script and relative size.
; Syntax ........: _LOWriter_ParStylePosition(Byref $oParStyle[, $bAutoSuper = Null[, $iSuperScript = Null[, $bAutoSub = Null[, $iSubScript = Null[, $iRelativeSize = Null]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bAutoSuper          - [optional] a boolean value. Default is Null. Whether to active automatically sizing
;				   +									for SuperScript.
;                  $iSuperScript        - [optional] an integer value. Default is Null. SuperScript percentage value. See
;				   +									Remarks.
;                  $bAutoSub            - [optional] a boolean value. Default is Null. Whether to active automatically sizing
;				   +									for SubScript.
;                  $iSubScript          - [optional] an integer value. Default is Null. SubScript percentage value. See Remarks.
;                  $iRelativeSize       - [optional] an integer value. Default is Null. 1-100 percentage relative to current
;				   +									font size.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoSuper not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bAutoSub not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iSuperScript not an integer, or less than 0, higher than 100 and Not 14000.
;				   @Error 1 @Extended 7 Return 0 = $iSubScript not an integer, or less than -100, higher than 100 and Not 14000.
;				   @Error 1 @Extended 8 Return 0 = $iRelativeSize not an integer, or less than 1, higher than 100.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iSuperScript
;				   |								2 = Error setting $iSubScript
;				   |								4 = Error setting $iRelativeSize.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Set either $iSubScript or $iSuperScript to 0 to return it to Normal setting.
;					The way LibreOffice is set up Super/SubScript are set in the same setting, Super is a positive number from
;						1 to 100 (percentage), SubScript is a negative number set to 1 to 100 percentage. For the user's
;						convenience this function accepts both positive and negative numbers for SubScript, if a positive number
;						is called for SubScript, it is automatically set to a negative. Automatic Superscript has a integer
;						value of 14000, Auto SubScript has a integer value of -14000. There is no settable setting of Automatic
;						Super/Sub Script, though one exists, it is read-only in LibreOffice, consequently I have made two
;						separate parameters to be able to determine if the user wants to automatically set SuperScript or
;						SubScript. If you set both Auto SuperScript to True and Auto SubScript to True, or $iSuperScript
;						to an integer and $iSubScript to an integer, Subscript will be set as it is the last in the
;						line to be set in this function, and thus will over-write any SuperScript settings.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStylePosition(ByRef $oParStyle, $bAutoSuper = Null, $iSuperScript = Null, $bAutoSub = Null, $iSubScript = Null, $iRelativeSize = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharPosition($oParStyle, $bAutoSuper, $iSuperScript, $bAutoSub, $iSubScript, $iRelativeSize)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStylePosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleRotateScale
; Description ...: Set or retrieve the character rotational and Scale settings for a paragraph Style.
; Syntax ........: _LOWriter_ParStyleRotateScale(Byref $oParStyle[, $iRotation = Null[, $iScaleWidth = Null]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iRotation           - [optional] an integer value. Default is Null. Degrees to rotate the text. Accepts
;				   +								only 0, 90, and 270 degrees.
;                  $iScaleWidth         - [optional] an integer value. Default is Null. The percentage to  horizontally
;				   +					stretch or compress the text. Must be above 1. Max 100. 100 is normal sizing.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iRotation not an Integer or not equal to 0, 90 or 270 degrees.
;				   @Error 1 @Extended 5 Return 0 = $iScaleWidth not an Integer or less than 1% or greater than 100%.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iRotation
;				   |								2 = Error setting $iScaleWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleRotateScale(ByRef $oParStyle, $iRotation = Null, $iScaleWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharRotateScale($oParStyle, $iRotation, $iScaleWidth)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleRotateScale

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleSet
; Description ...: Set a Paragraph style for a paragraph by Cursor or paragraph Object.
; Syntax ........: _LOWriter_ParStyleSet(Byref $oDoc, Byref $oObj, $sParStyle)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oObj                - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions, Or A Paragraph Object returned from
;				   +						_LOWriter_ParObjCreateList function.
;                  $sParStyle           - a string value. The Paragraph Style name.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oObj not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oObj does not support Paragraph Properties Service.
;				   @Error 1 @Extended 4 Return 0 = $sParStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = Paragraph Style defined in $sParStyle doesn't exist in Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting Paragraph Style.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Paragraph Style successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor, _LOWriter_CellCreateTextCursor,
;					_LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor, _LOWriter_DocFooterGetTextCursor,
;					_LOWriter_EndnoteGetTextCursor, _LOWriter_FootnoteGetTextCursor, _LOWriter_ParStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleSet(ByRef $oDoc, ByRef $oObj, $sParStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oObj) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oObj.supportsService("com.sun.star.style.ParagraphProperties") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not _LOWriter_ParStyleExists($oDoc, $sParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	$sParStyle = __LOWriter_ParStyleNameToggle($sParStyle)
	$oObj.ParaStyleName = $sParStyle
	Return ($oObj.ParaStyleName() = $sParStyle) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_ParStyleSet

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStylesGetNames
; Description ...: Retrieve a list of all Paragraph Style names available for a document.
; Syntax ........: _LOWriter_ParStylesGetNames(Byref $oDoc[, $bUserOnly = False[, $bAppliedOnly = False]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bUserOnly           - [optional] a boolean value. Default is False. If True only User-Created Paragraph
;				   +						Styles are returned.
;                  $bAppliedOnly        - [optional] a boolean value. Default is False. If True only Applied paragraph Styles
;				   +						are returned.
; Return values .: Success: Integer or Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bUserOnly not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bAppliedOnly not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Paragraph Styles Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return 0 = Success. No Paragraph Styles found according to parameters.
;				   @Error 0 @Extended ? Return Array = Success. An Array containing all Paragraph Styles matching the
;				   +		input parameters. @Extended contains the count of results returned. If Only a Document object is
;				   +		input, all available Paragraph styles will be returned. Else if $bUserOnly is set to True, only
;				   +		User-Created Paragraph Styles are returned. Else, only Applied paragraph Styles are returned. If
;				   +		Both are true then only User-Created paragraph styles that are applied are returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Two paragraph styles have two separate names, Default Paragraph Style is also internally called
;					"Standard" and Complimentary Close, which is internally called "Salutation". Either name works when setting
;					a Paragraph Style, but on certain functions that return a Paragraph Style Name, you may see one of these
;					alternative names.
; Related .......: _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStylesGetNames(ByRef $oDoc, $bUserOnly = False, $bAppliedOnly = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oStyles
	Local $aStyles[0]
	Local $iCount = 0
	Local $sExecute = ""

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsBool($bUserOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bAppliedOnly) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	$oStyles = $oDoc.StyleFamilies.getByName("ParagraphStyles")
	If Not IsObj($oStyles) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	ReDim $aStyles[$oStyles.getCount()]

	If Not $bUserOnly And Not $bAppliedOnly Then
		For $i = 0 To $oStyles.getCount() - 1
			$aStyles[$i] = $oStyles.getByIndex($i).DisplayName()
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
		Return SetError($__LOW_STATUS_SUCCESS, $i, $aStyles)
	EndIf

	$sExecute = ($bUserOnly) ? "($oStyles.getByIndex($i).isUserDefined())" : $sExecute
	$sExecute = ($bUserOnly And $bAppliedOnly) ? ($sExecute & " And ") : $sExecute
	$sExecute = ($bAppliedOnly) ? ($sExecute & "($oStyles.getByIndex($i).isInUse())") : $sExecute

	For $i = 0 To $oStyles.getCount() - 1
		If Execute($sExecute) Then
			$aStyles[$iCount] = $oStyles.getByIndex($i).DisplayName
			$iCount += 1
		EndIf
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	ReDim $aStyles[$iCount]

	Return ($iCount = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_SUCCESS, $iCount, $aStyles)
EndFunc   ;==>_LOWriter_ParStylesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleShadow
; Description ...: Set or Retrieve the Shadow settings for a Paragraph style.
; Syntax ........: _LOWriter_ParStyleShadow(Byref $oParStyle[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iWidth              - [optional] an integer value. Default is Null. The width of the shadow set in
;				   +							Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The color of the shadow, set in Long
;				   +						Integer format. Can be one of the below constants or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether or not the shadow is transparent.
;                  $iLocation           - [optional] an integer value. Default is Null. The location of the shadow compared to
;				   +								the paragraph. See Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iWidth not an integer or less than 0.
;				   @Error 1 @Extended 5 Return 0 = $iColor not an integer, less than 0 or greater than 16777215.
;				   @Error 1 @Extended 6 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Shadow Format Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Shadow Format Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleShadow(ByRef $oParStyle, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParShadow($oParStyle, $iWidth, $iColor, $bTransparent, $iLocation)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleSpace
; Description ...: Set and Retrieve Line Spacing settings for a paragraph style.
; Syntax ........: _LOWriter_ParStyleSpace(Byref $oParStyle[, $iAbovePar = Null[, $iBelowPar = Null[, $bAddSpace = Null[, $iLineSpcMode = Null[, $iLineSpcHeight = Null[, $bPageLineSpc = Null]]]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iAbovePar           - [optional] an integer value. Default is Null. The Space above a paragraph, in
;				   +									Micrometers. Min 0 Micrometers (uM) Max 10,008 uM.
;                  $iBelowPar           - [optional] an integer value. Default is Null. The Space Below a paragraph, in
;				   +									Micrometers. Min 0 Micrometers (uM) Max 10,008 uM.
;                  $bAddSpace           - [optional] a boolean value. Default is Null. If true, the top and bottom margins
;				   +									of the paragraph should not be applied when the previous and next
;				   +									paragraphs have the same style. Libre Office Version 3.6 and Up.
;                  $iLineSpcMode        - [optional] an integer value. Default is Null. The type of the line spacing of a
;				   +									paragraph. See Constants below, also notice min and max values for each.
;                  $iLineSpcHeight      - [optional] an integer value. Default is Null. This value specifies the spacing
;				   +						of the lines. See Remarks for Minimum and Max values.
;                  $bPageLineSpc        - [optional] a boolean value. Default is Null. Determines if the register mode is applied
;				   +						to a paragraph. See Remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $iAbovePar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 5 Return 0 = $iBelowPar not an integer, less than 0 or more than 10008 uM.
;				   @Error 1 @Extended 6 Return 0 = $bAddSpc not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iLineSpcMode Not an integer, less than 0 or greater than 3. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iLineSpcHeight not an Integer.
;				   @Error 1 @Extended 9 Return 0 = $iLineSpcMode set to 0(Proportional) and $iLineSpcHeight less than 6(%)
;				   +									or greater than 65535(%).
;				   @Error 1 @Extended 10 Return 0 = $iLineSpcMode set to 1 or 2(Minimum, or Leading) and $iLineSpcHeight less
;				   +								than 0 uM or greater than 10008 uM
;				   @Error 1 @Extended 11 Return 0 = $iLineSpcMode set to 3(Fixed) and $iLineSpcHeight less than 51 uM
;				   +									or greater than 10008 uM.
;				   @Error 1 @Extended 12 Return 0 = $bPageLineSpc not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaLineSpacing Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32
;				   |								1 = Error setting $iAbovePar
;				   |								2 = Error setting $iBelowPar
;				   |								4 = Error setting $bAddSpace
;				   |								8 = Error setting $iLineSpcMode
;				   |								16 = Error setting $iLineSpcHeight
;				   |								32 = Error setting bPageLineSpc
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 or 6 Element Array with values in order of function
;				   +								parameters. If the current Libre Office version is less than 3.6, the
;				   +								returned Array will contain 5 elements, because $bAddSpace is not available.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note:  $bPageLineSpc(Register mode) is only used if the register mode property of the page style is switched
;						on. $bPageLineSpc(Register Mode) Aligns the baseline of each line of text to a vertical document grid,
;						so that each line is the same height.
;					Note: The settings in Libre Office, (Single,1.15, 1.5, Double,) Use the Proportional mode, and are just
;						varying percentages. e.g Single = 100, 1.15 = 115%, 1.5 = 150%, Double = 200%.
;					$iLineSpcHeight depends on the $iLineSpcMode used, see constants for accepted Input values.
;					Note: $iAbovePar, $iBelowPar, $iLineSpcHeight may change +/- 1 MicroMeter once set.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Spacing Constants :$LOW_LINE_SPC_MODE_PROP(0); This specifies the height value as a proportional value. Min 6% Max 65,535%.
;						(without percentage sign)
;						$LOW_LINE_SPC_MODE_MIN(1); (Minimum/At least) This specifies the height as the minimum line height.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_LEADING(2); This specifies the height value as the distance to the previous line.
;							Min 0, Max 10008 MicroMeters (uM)
;						$LOW_LINE_SPC_MODE_FIX(3); This specifies the height value as a fixed line height. Min 51 MicroMeters,
;							Max 10008 MicroMeters (uM)
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleSpace(ByRef $oParStyle, $iAbovePar = Null, $iBelowPar = Null, $bAddSpace = Null, $iLineSpcMode = Null, $iLineSpcHeight = Null, $bPageLineSpc = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParSpace($oParStyle, $iAbovePar, $iBelowPar, $bAddSpace, $iLineSpcMode, $iLineSpcHeight, $bPageLineSpc)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleSpace

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleSpacing
; Description ...: Set and retrieve the spacing between characters (Kerning) for a Paragraph style.
; Syntax ........: _LOWriter_ParStyleSpacing(Byref $oParStyle[, $bAutoKerning = Null[, $nKerning = Null]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bAutoKerning        - [optional] a boolean value. Default is Null. True applies a spacing in between
;				   +						certain pairs of characters. False = disabled.
;                  $nKerning            - [optional] a general number value. Default is Null. The kerning value of the
;				   +								characters. Min is -2 Pt. Max is 928.8 Pt. See Remarks. Values are in
;				   +								Printer's Points as set in the Libre Office UI.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bAutoKerning not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $nKerning not a number, or less than -2 or greater than 928.8 Points.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $bAutoKerning
;				   |								2 = Error setting $nKerning.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					When setting Kerning values in LibreOffice, the measurement is listed in Pt (Printer's Points) in the User
;						Display, however the internal setting is measured in MicroMeters. They will be automatically converted
;						from Points to MicroMeters and back for retrieval of settings.
;						The acceptable values are from -2 Pt to  928.8 Pt. the figures can be directly converted easily,
;						however, for an unknown reason to myself, LibreOffice begins counting backwards and in negative
;						MicroMeters internally from 928.9 up to 1000 Pt (Max setting). For example, 928.8Pt is the last
;						correct value, which equals 32766 uM (MicroMeters), after this LibreOffice reports the following:
;						;928.9 Pt = -32766 uM; 929 Pt = -32763 uM; 929.1 = -32759; 1000 pt = -30258. Attempting to set Libre's
;						kerning value to anything over 32768 uM causes a COM exception, and attempting to set the kerning to any
;						of these negative numbers sets the User viewable kerning value to -2.0 Pt. For these reasons the
;						max settable kerning is -2.0 Pt  to 928.8 Pt.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleSpacing(ByRef $oParStyle, $bAutoKerning = Null, $nKerning = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharSpacing($oParStyle, $bAutoKerning, $nKerning)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleSpacing

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleStrikeOut
; Description ...: Set or Retrieve the StrikeOut settings for a Paragraph style.
; Syntax ........: _LOWriter_ParStyleStrikeOut(Byref $oParStyle[, $bWordOnly = Null[, $bStrikeOut = Null[, $iStrikeLineStyle = Null]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. Whether to strike out words only and skip
;				   +							whitespaces. True = skip whitespaces.
;                  $bStrikeOut          - [optional] a boolean value. Default is Null. True = strikeout, False = no strikeout.
;                  $iStrikeLineStyle    - [optional] an integer value. Default is Null. The Strikeout Line Style, see constants
;				   +								below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bStrikeOut not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iStrikeLineStyle not an Integer, or less than 0 or greater than 8. Check
;				   +									the Constants list.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $bStrikeOut
;				   |								4 = Error setting $iStrikeLineStyle
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note Strikeout converted to single line in Ms word document format.
; Strikeout Line Style Constants : $LOW_STRIKEOUT_NONE(0); specifies not to strike out the characters.
;					$LOW_STRIKEOUT_SINGLE(1); specifies to strike out the characters with a single line
;					$LOW_STRIKEOUT_DOUBLE(2); specifies to strike out the characters with a double line.
;					$LOW_STRIKEOUT_DONT_KNOW(3); The strikeout mode is not specified.
;					$LOW_STRIKEOUT_BOLD(4); specifies to strike out the characters with a bold line.
;					$LOW_STRIKEOUT_SLASH(5); specifies to strike out the characters with slashes.
;					$LOW_STRIKEOUT_X(6); specifies to strike out the characters with X's.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleStrikeOut(ByRef $oParStyle, $bWordOnly = Null, $bStrikeOut = Null, $iStrikeLineStyle = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharStrikeOut($oParStyle, $bWordOnly, $bStrikeOut, $iStrikeLineStyle)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleStrikeOut

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleTabStopCreate
; Description ...: Create a new TabStop for a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleTabStopCreate(Byref $oParStyle, $iPosition[, $iAlignment = Null[, $iFillChar = Null[, $iDecChar = Null]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iPosition           - an integer value. The TabStop position/length to set the new TabStop to. Set in
;				   +						Micrometers (uM). See Remarks.
;                  $iAlignment          - [optional] an integer value. Default is Null. The Asc (see autoit function) value of
;				   +						any character (except 0/Null) you want to act as a Tab Fill character. See remarks.
;                  $iFillChar           - [optional] an integer value. Default is Null. The position of where the end of a Tab
;				   +						is aligned to compared to the text. See Constants.
;                  $iDecChar            - [optional] an integer value. Default is Null. Enter a character(in Asc Value(See
;				   +						Autoit Function)) that you want the decimal tab to use as a decimal separator. Can
;				   +						only be set if $iAlignment is set to $LOW_TAB_ALIGN_DECIMAL.
; Return values .:  Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = $iPosition not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iPosition Already exists in this ParStyle.
;				   @Error 1 @Extended 5 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iFillChar not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iAlignment not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 8 Return 0 = $iDecChar not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Array Object.
;				   @Error 2 @Extended 2 Return 0 = Error creating "com.sun.star.style.TabStop" Object.
;				   @Error 2 @Extended 3 Return 0 = Error retrieving list of TabStop Positions.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to identify the new Tabstop once inserted. in $iPosition.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return Integer = Some settings were not successfully set. Use BitAND to test
;				   +							@Extended for the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iPosition
;				   |								2 = Error setting $iFillChar
;				   |								4 = Error setting $iAlignment
;				   |								8 = Error setting $iDecChar
;				   |						Note: $iNewTabStop position is still returned as even though some settings weren't
;				   +						successfully set, the new TabStop was still created.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer = Success. Settings were successfully set. New TabStop position
;				   +								is returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iPosition once set can vary +/- 1 uM. To ensure you can identify the tabstop to modify it again,
;						This function returns the new TabStop position in @Extended when $iPosition is set, return value will
;						be set to 2. See Return Values.
;					Note: Since $iPosition can fluctuate +/- 1 uM when it is inserted into LibreOffice, it is possible to
;						accidentally overwrite an already existing TabStop.
;					Note: $iFillChar, Libre's Default value, "None" is in reality a space character which is Asc value 32.
;						The other values offered by Libre are: Period (ASC 46), Dash (ASC 45) and Underscore (ASC 95). You can
;						also enter a custom ASC value. See ASC Autoit Func. and "ASCII Character Codes" in the Autoit help file.
;					Call any optional parameter with Null keyword to skip it.
; Tab Alignment Constants: $LOW_TAB_ALIGN_LEFT(0); Aligns the left edge of the text to the tab stop and extends the text to the
;								right.
;							$LOW_TAB_ALIGN_CENTER(1); Aligns the center of the text to the tab stop
;							$LOW_TAB_ALIGN_RIGHT(2); Aligns the right edge of the text to the tab stop and extends the text to
;								the left of the tab stop.
;							$LOW_TAB_ALIGN_DECIMAL(3); Aligns the decimal separator of a number to the center of the tab stop
;								and text to the left of the tab
;							$LOW_TAB_ALIGN_DEFAULT(4);4 = This setting is the default, setting when no TabStops are present.
;								Setting and Tabstop to this constant will make it disappear from the TabStop list. It is
;								therefore only listed here for property reading purposes.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer, _LOWriter_ParStyleTabStopDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleTabStopCreate(ByRef $oParStyle, $iPosition, $iFillChar = Null, $iAlignment = Null, $iDecChar = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iPosition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If __LOWriter_ParHasTabStop($oParStyle, $iPosition) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$iPosition = __LOWriter_ParTabStopCreate($oParStyle, $iPosition, $iAlignment, $iFillChar, $iDecChar)
	Return SetError(@error, @extended, $iPosition)
EndFunc   ;==>_LOWriter_ParStyleTabStopCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleTabStopDelete
; Description ...: Delete a TabStop from a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleTabStopDelete(Byref $oDoc, $oParStyle, $iTabStop)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iTabStop            - an integer value. The Tab position of the TabStop to modify. See Remarks.
; Return values .: Success: Boolean.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 4 Return 0 = $iTabStop not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $iTabStop not found in this ParStyle.
;				   @Error 1 @Extended 6 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 7 Return 0 = Passed Document Object to internal function not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to identify and delete TabStop in Paragraph.
;				   --Success--
;				   @Error 0 @Extended 0 Return Boolean = Returns true if TabStop was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iTabStop refers to the position, or essential the "length" of a TabStop from the edge of a page margin.
;						This is the only reliable way to identify a Tabstop to be able to interact with it, as there can only be
;						one of a certain length per document.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStyleTabStopList,
;					_LOWriter_ParStyleTabStopCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleTabStopDelete(ByRef $oDoc, ByRef $oParStyle, $iTabStop)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not __LOWriter_ParHasTabStop($oParStyle, $iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	$vReturn = __LOWriter_ParTabStopDelete($oParStyle, $oDoc, $iTabStop)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleTabStopDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleTabStopList
; Description ...: Retrieve a List of TabStops available in a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleTabStopList(Byref $oParStyle)
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
; Return values .: Success: Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. An Array of TabStops. @Extended set to number of results.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStyleTabStopMod,
;					_LOWriter_ParStyleTabStopDelete
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleTabStopList(ByRef $oParStyle)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $aiTabList

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$aiTabList = __LOWriter_ParTabStopList($oParStyle)

	Return SetError(@error, @extended, $aiTabList)
EndFunc   ;==>_LOWriter_ParStyleTabStopList

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleTabStopMod
; Description ...: Modify or retrieve the properties of an existing TabStop in a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleTabStopMod(Byref $oParStyle, $iTabStop[, $iPosition = Null[, $iFillChar = Null[, $iAlignment = Null[, $iDecChar = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $iTabStop            - an integer value. The Tab position of the TabStop to modify. See Remarks.
;                  $iPosition           - [optional] an integer value. Default is Null. The New position to set the input
;				   +						position to. Set in Micrometers (uM). See Remarks.
;                  $iFillChar           - [optional] an integer value. Default is Null. The Asc (see autoit function) value of
;				   +						any character (except 0/Null) you want to act as a Tab Fill character. See remarks.
;                  $iAlignment          - [optional] an integer value. Default is Null. The position of where the end of a Tab is
;				   +						aligned to compared to the text. See Constants.
;                  $iDecChar            - [optional] an integer value. Default is Null. Enter a character(in Asc Value(See
;				   +						Autoit Function)) that you want the decimal tab to use as a decimal separator. Can
;				   +						only be set if $iAlignment is set to $LOW_TAB_ALIGN_DECIMAL.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = $iTabStop not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iTabStop not found in this ParStyle.
;				   @Error 1 @Extended 5 Return 0 = Passed Object to internal function not an Object.
;				   @Error 1 @Extended 6 Return 0 = $iPosition not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iFillChar not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iAlignment not an Integer, less than 0 or greater than 4. See Constants.
;				   @Error 1 @Extended 9 Return 0 = $iDecChar not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ParaTabStops Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Requested TabStop Object.
;				   @Error 2 @Extended 3 Return 0 = Error retrieving list of TabStop Positions.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Paragraph style already contains a TabStop at the length/Position specified
;				   +		in $iPosition.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iPosition
;				   |								2 = Error setting $iFillChar
;				   |								4 = Error setting $iAlignment
;				   |								8 = Error setting $iDecChar
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
;				   @Error 0 @Extended ? Return 2 = Success. Settings were successfully set. New TabStop position
;				   +								is returned in @Extended.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: $iTabStop refers to the position, or essential the "length" of a TabStop from the edge of a page margin.
;						This is the only reliable way to identify a Tabstop to be able to interact with it, as there can only be
;						one of a certain length per document.
;					Note: $iPosition once set can vary +/- 1 uM. To ensure you can identify the tabstop to modify it again,
;						This function returns the new TabStop position in @Extended when $iPosition is set, return value will
;						be set to 2. See Return Values.
;					Note: Since $iPosition can fluctuate +/- 1 uM when it is inserted into LibreOffice, it is possible to
;						accidentally overwrite an already existing TabStop.
;					Note: $iFillChar, Libre's Default value, "None" is in reality a space character which is Asc value 32.
;						The other values offered by Libre are: Period (ASC 46), Dash (ASC 45) and Underscore (ASC 95). You can
;						also enter a custom ASC value. See ASC Autoit Func. and "ASCII Character Codes" in the Autoit help file.
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Tab Alignment Constants: $LOW_TAB_ALIGN_LEFT(0); Aligns the left edge of the text to the tab stop and extends the text to the
;								right.
;							$LOW_TAB_ALIGN_CENTER(1); Aligns the center of the text to the tab stop
;							$LOW_TAB_ALIGN_RIGHT(2); Aligns the right edge of the text to the tab stop and extends the text to
;								the left of the tab stop.
;							$LOW_TAB_ALIGN_DECIMAL(3); Aligns the decimal separator of a number to the center of the tab stop
;								and text to the left of the tab
;							$LOW_TAB_ALIGN_DEFAULT(4);4 = This setting is the default, setting when no TabStops are present.
;								Setting and Tabstop to this constant will make it disappear from the TabStop list. It is
;								therefore only listed here for property reading purposes.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ParStyleTabStopCreate,
;					_LOWriter_ParStyleTabStopList, _LOWriter_ConvertFromMicrometer,	_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleTabStopMod(ByRef $oParStyle, $iTabStop, $iPosition = Null, $iFillChar = Null, $iAlignment = Null, $iDecChar = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_ParHasTabStop($oParStyle, $iTabStop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$vReturn = __LOWriter_ParTabStopMod($oParStyle, $iTabStop, $iPosition, $iFillChar, $iAlignment, $iDecChar)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleTabStopMod

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleTxtFlowOpt
; Description ...: Set and Retrieve Text Flow settings for a Paragraph Style.
; Syntax ........: _LOWriter_ParStyleTxtFlowOpt(Byref $oParStyle[, $bParSplit = Null[, $bKeepTogether = Null[, $iParOrphans = Null[, $iParWidows = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bParSplit           - [optional] a boolean value. Default is Null. FALSE prevents the paragraph from
;				   +						getting split into two pages or columns
;                  $bKeepTogether       - [optional] a boolean value. Default is Null. TRUE prevents page or column breaks
;				   +						between this and the following paragraph
;                  $iParOrphans         - [optional] an integer value. Default is Null. Specifies the minimum number of lines
;				   +							of the paragraph that have to be at bottom of a page if the paragraph is spread
;				   +							over more than one page. Min is 0 (disabled), and cannot be 1. Max is 9.
;                  $iParWidows          - [optional] an integer value. Default is Null. Specifies the minimum number of lines
;				   +						of the paragraph that have to be at top of a page if the paragraph is spread over
;				   +						more than one page. Min is 0 (disabled), and cannot be 1. Max is 9.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bParSplit not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bKeepTogether not  a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iParOrphans not an Integer, less than 0, equal to 1, or greater than 9.
;				   @Error 1 @Extended 7 Return 0 = $iParWidows not an Integer, less than 0, equal to 1, or greater than 9.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bParSplit
;				   |								2 = Error setting $bKeepTogether
;				   |								4 = Error setting $iParOrphans
;				   |								8 = Error setting $iParWidows
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: If you do not set ParSplit to True, the rest of the settings will still show to have been set but will
;					not become active until $bParSplit is set to true.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleTxtFlowOpt(ByRef $oParStyle, $bParSplit = Null, $bKeepTogether = Null, $iParOrphans = Null, $iParWidows = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_ParTxtFlowOpt($oParStyle, $bParSplit, $bKeepTogether, $iParOrphans, $iParWidows)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleTxtFlowOpt

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ParStyleUnderLine
; Description ...: Set and retrieve the UnderLine settings for a paragraph style.
; Syntax ........: _LOWriter_ParStyleUnderLine(Byref $oParStyle[, $bWordOnly = Null[, $iUnderLineStyle = Null[, $bULHasColor = Null[, $iULColor = Null]]]])
; Parameters ....: $oParStyle           - [in/out] an object. A Paragraph Style object returned by previous ParStyle Create or
;				   +						Object Retrieval function.
;                  $bWordOnly           - [optional] a boolean value. Default is Null. If true, white spaces are not underlined.
;                  $iUnderLineStyle     - [optional] an integer value. Default is Null. The style of the Underline line, see
;				   +									constants listed below.
;                  $bULHasColor         - [optional] a boolean value. Default is Null. Whether the underline is colored, must
;				   +						be set to true in order to set the underline color.
;                  $iULColor            - [optional] an integer value. Default is Null. The color of the underline, set in Long
;				   +						integer format. Can be one of the constants below or a custom value. Set to
;				   +						$LOW_COLOR_OFF(-1) for automatic color mode.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oParStyle not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oParStyle not a Paragraph Object.
;				   @Error 1 @Extended 3 Return 0 = Passed Object for internal function not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bWordOnly not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iUnderLineStyle not an Integer, or less than 0 or greater than 18. Check
;				   +									the Constants list.
;				   @Error 1 @Extended 6 Return 0 = $bULHasColor not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $iULColor not an Integer, or less than -1 or greater than 16777215.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $bWordOnly
;				   |								2 = Error setting $iUnderLineStyle
;				   |								4 = Error setting $ULHasColor
;				   |								8 = Error setting $iULColor
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: $bULHasColor must be set to true in order to set the underline color.
; UnderLine line style Constants: $LOW_UNDERLINE_NONE(0),
;									$LOW_UNDERLINE_SINGLE(1),
;									$LOW_UNDERLINE_DOUBLE(2),
;									$LOW_UNDERLINE_DOTTED(3),
;									$LOW_UNDERLINE_DONT_KNOW(4),
;									$LOW_UNDERLINE_DASH(5),
;									$LOW_UNDERLINE_LONG_DASH(6),
;									$LOW_UNDERLINE_DASH_DOT(7),
;									$LOW_UNDERLINE_DASH_DOT_DOT(8),
;									$LOW_UNDERLINE_SML_WAVE(9),
;									$LOW_UNDERLINE_WAVE(10),
;									$LOW_UNDERLINE_DBL_WAVE(11),
;									$LOW_UNDERLINE_BOLD(12),
;									$LOW_UNDERLINE_BOLD_DOTTED(13),
;									$LOW_UNDERLINE_BOLD_DASH(14),
;									$LOW_UNDERLINE_BOLD_LONG_DASH(15),
;									$LOW_UNDERLINE_BOLD_DASH_DOT(16),
;									$LOW_UNDERLINE_BOLD_DASH_DOT_DOT(17),
;									$LOW_UNDERLINE_BOLD_WAVE(18)
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_ParStyleCreate, _LOWriter_ParStyleGetObj, _LOWriter_ConvertColorFromLong,
;					_LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ParStyleUnderLine(ByRef $oParStyle, $bWordOnly = Null, $iUnderLineStyle = Null, $bULHasColor = Null, $iULColor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn

	If Not IsObj($oParStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oParStyle.supportsService("com.sun.star.style.ParagraphStyle") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$vReturn = __LOWriter_CharUnderLine($oParStyle, $bWordOnly, $iUnderLineStyle, $bULHasColor, $iULColor)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_ParStyleUnderLine

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_PathConvert
; Description ...: Converts the input path to or from a LibreOffice URL notation path.
; Syntax ........: _LOWriter_PathConvert($sFilePath[, $iReturnMode = $LOW_PATHCONV_AUTO_RETURN])
; Parameters ....: $sFilePath           - a string value. Full path to convert in String format.
;                  $iReturnMode         - [optional] an integer value. Default is $__g_iAutoReturn. Designates what format of
;				   +									path to return. See Constants.
; Return values .: Success: String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $sFilePath is not a string
;				   @Error 1 @Extended 2 Return 0 = $iReturnMode Not a Integer, less than 0 or greater than 2, see constants.
;				   --Success--
;				   @Error 0 @Extended 1 Return String = Returning converted File Path from Libre Office URL.
;				   @Error 0 @Extended 2 Return String = Returning converted path from File Path to Libre Office URL.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: LibeOffice URL notation is based on the Internet Standard RFC 1738, which means only [0-9],[a-zA-Z] are
;					allowed in paths, most other characters need to be converted into ISO 8859-1 (ISO Latin) such as is found
;					in internet URL's (spaces become %20). See: StarOfficeTM 6.0 Office SuiteA SunTM ONE Software Offering,
;					Basic Programmer's Guide; Page 74
;					The user generally should not even need this function, as I have endeavored to convert any URLs to the
;						appropriate computer path format and any input computer paths to a Libre Office URL.
;Path Return Constants: ; $LOW_PATHCONV_AUTO_RETURN(0) = Automatically returns the opposite of the input path, determined by
;										StringinStr search for either "File:///"(L.O.Office URL) or "[A-Z]:\" (Windows File
;										Path).
;							$LOW_PATHCONV_OFFICE_RETURN(1) = Returns L.O Office URL, even if the input is already in that
;										format.
;							$LOW_PATHCONV_PCPATH_RETURN(2) = Returns Windows File Path, even if the input is already in that
;										format.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_PathConvert($sFilePath, $iReturnMode = $LOW_PATHCONV_AUTO_RETURN)
	Local Const $STR_STRIPLEADING = 1
	Local $asURLReplace[9][2] = [["%", "%25"], [" ", "%20"], ["\", "/"], [";", "%3B"], ["#", "%23"], ["^", "%5E"], ["{", "%7B"], _
			["}", "%7D"], ["`", "%60"]]
	Local $iPathSearch, $iFileSearch, $iPartialPCPath, $iPartialFilePath

	If Not IsString($sFilePath) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IntIsBetween($iReturnMode, $LOW_PATHCONV_AUTO_RETURN, $LOW_PATHCONV_PCPATH_RETURN) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$sFilePath = StringStripWS($sFilePath, $STR_STRIPLEADING)

	$iPathSearch = StringRegExp($sFilePath, "[A-Z]\:\\") ; Search For a Computer Path, as in C:\ etc.
	$iPartialPCPath = StringInStr($sFilePath, "\") ; Search for partial computer Path containing a backslash.
	$iFileSearch = StringInStr($sFilePath, "file:///", 0, 1, 1, 9) ;Search for a full Libre path, which begins with File:///
	$iPartialFilePath = StringInStr($sFilePath, "/") ;Search For a Partial Libre path containing forward slash

	If ($iReturnMode = $LOW_PATHCONV_AUTO_RETURN) Then

		If ($iPathSearch > 0) Or ($iPartialPCPath > 0) Then ; if file path contains partial or full PC path, set to convert to Libre URL.
			$iReturnMode = $LOW_PATHCONV_OFFICE_RETURN
		ElseIf ($iFileSearch > 0) Or ($iPartialFilePath > 0) Then ; if file path contains partial or full Libre URL, set to convert to PC Path.
			$iReturnMode = $LOW_PATHCONV_PCPATH_RETURN
		Else ; If file path contains neither above. convert to Libre URL
			$iReturnMode = $LOW_PATHCONV_OFFICE_RETURN
		EndIf
	EndIf

	Switch $iReturnMode

		Case $LOW_PATHCONV_OFFICE_RETURN
			If $iFileSearch > 0 Then Return SetError($__LOW_STATUS_SUCCESS, 2, $sFilePath)
			If ($iPathSearch > 0) Then $sFilePath = "file:///" & $sFilePath

			For $i = 0 To (UBound($asURLReplace) - 1)
				$sFilePath = StringReplace($sFilePath, $asURLReplace[$i][0], $asURLReplace[$i][1])
				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
			Next
			Return SetError($__LOW_STATUS_SUCCESS, 2, $sFilePath)

		Case $LOW_PATHCONV_PCPATH_RETURN
			If ($iPathSearch > 0) Then Return SetError($__LOW_STATUS_SUCCESS, 1, $sFilePath)
			If ($iFileSearch > 0) Then $sFilePath = StringReplace($sFilePath, "file:///", Null)

			For $i = 0 To (UBound($asURLReplace) - 1)
				$sFilePath = StringReplace($sFilePath, $asURLReplace[$i][1], $asURLReplace[$i][0])
				Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
			Next
			Return SetError($__LOW_STATUS_SUCCESS, 1, $sFilePath)

	EndSwitch

EndFunc   ;==>_LOWriter_PathConvert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_SearchDescriptorCreate
; Description ...: Create a Search Descriptor for searching a document.
; Syntax ........: _LOWriter_SearchDescriptorCreate(Byref $oDoc[, $bBackwards = False[, $bMatchCase = False[, $bWholeWord = False[, $bRegExp = False[, $bStyles = False[, $bSearchPropValues = False]]]]]])
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $bBackwards          - [optional] a boolean value. Default is False. If True, the document is searched
;				   +						backwards.
;                  $bMatchCase          - [optional] a boolean value. Default is False. If True, the case of the letters is
;				   +						important for the Search.
;                  $bWholeWord          - [optional] a boolean value. Default is False. If True, only complete words will be
;				   +						found.
;                  $bRegExp             - [optional] a boolean value. Default is False. If True, the search string is evaluated
;				   +						as a regular expression.
;                  $bStyles             - [optional] a boolean value. Default is False. If True, the string is considered a
;				   +						Paragraph Style name, and the search will return any paragraph utilizing the
;				   +						specified name, EXCEPT if you input Format properties to search for, then setting
;				   +						this to True causes the search to search both for direct formatting matching those
;				   +						properties and also Paragraph/Character styles that contain matching properties.
;                  $bSearchPropValues   - [optional] a boolean value. Default is False. If True, any formatting properties
;				   +						searched for are matched based on their value, else if false, the search only looks
;				   +						for their existence. See Remarks.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $bBackwards not a Boolean.
;				   @Error 1 @Extended 3 Return 0 = $bMatchCase not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bWholeWord not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bRegExp not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bStyles not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bSearchPropValues not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to create Search Descriptor.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success. Returns a Search Descriptor Object for setting Search options.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: $bSearchPropValues is equivalent to the difference in selecting "Format" options in Libre Office's search
;						box and "Attributes". Setting $bSearchPropValues to True, means that the search will look for matches
;						using the specified property AND having the specified value, such as Character Weight, Bold, only
;						matches that have Character weight of Bold will be returned, whereas if $bSearchPropValues is set to
;						false, the search only looks for matches that have the specified property, regardless of its value. Such
;						as Character weight, would match Bold, Semi-Bold, etc. From my understanding, the search is based on
;						anything directly formatted unless $bStyles is also true.
;					Note: The returned Search Descriptor is only good for the Document it was created by, it WILL NOT work for
;						other documents.
; Related .......: _LOWriter_SearchDescriptorModify, _LOWriter_SearchDescriptorSimilarityModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_SearchDescriptorCreate(ByRef $oDoc, $bBackwards = False, $bMatchCase = False, $bWholeWord = False, $bRegExp = False, $bStyles = False, $bSearchPropValues = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oSrchDescript

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If Not IsBool($bBackwards) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsBool($bMatchCase) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bWholeWord) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bRegExp) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not IsBool($bStyles) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If Not IsBool($bSearchPropValues) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)

	$oSrchDescript = $oDoc.createSearchDescriptor()
	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	With $oSrchDescript
		.SearchBackwards = $bBackwards
		.SearchCaseSensitive = $bMatchCase
		.SearchWords = $bWholeWord
		.SearchRegularExpression = $bRegExp
		.SearchStyles = $bStyles
		.ValueSearch = $bSearchPropValues
	EndWith

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oSrchDescript)
EndFunc   ;==>_LOWriter_SearchDescriptorCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_SearchDescriptorModify
; Description ...: Modify Search Descriptor settings of an existing Search Descriptor Object.
; Syntax ........: _LOWriter_SearchDescriptorModify(Byref $oSrchDescript[, $bBackwards = Null[, $bMatchCase = Null[, $bWholeWord = Null[, $bRegExp = Null[, $bStyles = Null[, $bSearchPropValues = Null]]]]]])
; Parameters ....: $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $bBackwards          - [optional] a boolean value. Default is False. If True, the document is searched
;				   +						backwards.
;                  $bMatchCase          - [optional] a boolean value. Default is False. If True, the case of the letters is
;				   +						important for the Search.
;                  $bWholeWord          - [optional] a boolean value. Default is False. If True, only complete words will be
;				   +						found.
;                  $bRegExp             - [optional] a boolean value. Default is False. If True, the search string is evaluated
;				   +						as a regular expression. Cannot be set to True if Similarity Search is set to True.
;                  $bStyles             - [optional] a boolean value. Default is False. If True, the string is considered a
;				   +						Paragraph Style name, and the search will return any paragraph utilizing the
;				   +						specified name, EXCEPT if you input Format properties to search for, then setting
;				   +						this to True causes the search to search both for direct formatting matching those
;				   +						properties and also Paragraph/Character styles that contain matching properties.
;                  $bSearchPropValues   - [optional] a boolean value. Default is False. If True, any formatting properties
;				   +						searched for are matched based on their value, else if false, the search only looks
;				   +						for their existence. See Remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript Object not a Search Descriptor Object.
;				   @Error 1 @Extended 3 Return 0 = $bBackwards not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bMatchCase not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $bWholeWord not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bRegExp not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $bStyles not a Boolean.
;				   @Error 1 @Extended 8 Return 0 = $bSearchPropValues not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $bRegExp is set to True while Similarity Search is also set to True.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Returns 1 after directly modifying Search Descriptor Object.
;;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: $bSearchPropValues is equivalent to the difference in selecting "Format" options in Libre Office's search
;						box and "Attributes". Setting $bSearchPropValues to True, means that the search will look for matches
;						using the specified property AND having the specified value, such as Character Weight, Bold, only
;						matches that have Character weight of Bold will be returned, whereas if $bSearchPropValues is set to
;						false, the search only looks for matches that have the specified property, regardless of its value. Such
;						as Character weight, would match Bold, Semi-Bold, etc. From my understanding, the search is based on
;						anything directly formatted unless $bStyles is also true.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings.
;						Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_SearchDescriptorCreate, _LOWriter_SearchDescriptorSimilarityModify
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_SearchDescriptorModify(ByRef $oSrchDescript, $bBackwards = Null, $bMatchCase = Null, $bWholeWord = Null, $bRegExp = Null, $bStyles = Null, $bSearchPropValues = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $avSrchDescript[6]

	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bBackwards, $bMatchCase, $bWholeWord, $bRegExp, $bStyles, $bSearchPropValues) Then
		__LOWriter_ArrayFill($avSrchDescript, $oSrchDescript.SearchBackwards(), $oSrchDescript.SearchCaseSensitive(), $oSrchDescript.SearchWords(), _
				$oSrchDescript.SearchRegularExpression(), $oSrchDescript.SearchStyles(), $oSrchDescript.getValueSearch())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avSrchDescript)
	EndIf

	If ($bBackwards <> Null) Then
		If Not IsBool($bBackwards) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oSrchDescript.SearchBackwards = $bBackwards
	EndIf

	If ($bMatchCase <> Null) Then
		If Not IsBool($bMatchCase) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSrchDescript.SearchCaseSensitive = $bMatchCase
	EndIf

	If ($bWholeWord <> Null) Then
		If Not IsBool($bWholeWord) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oSrchDescript.SearchWords = $bWholeWord
	EndIf

	If ($bRegExp <> Null) Then
		If Not IsBool($bRegExp) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If ($bRegExp = True) And ($oSrchDescript.SearchSimilarity = True) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$oSrchDescript.SearchRegularExpression = $bRegExp
	EndIf

	If ($bStyles <> Null) Then
		If Not IsBool($bStyles) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		$oSrchDescript.SearchStyles = $bStyles
	EndIf

	If ($bSearchPropValues <> Null) Then
		If Not IsBool($bSearchPropValues) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		$oSrchDescript.ValueSearch = $bSearchPropValues
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_SearchDescriptorModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_SearchDescriptorSimilarityModify
; Description ...: Modify Similarity Search Settings for an existing Search Descriptor Object.
; Syntax ........: _LOWriter_SearchDescriptorSimilarityModify(Byref $oSrchDescript[, $bSimilarity = Null[, $bCombine = Null[, $iRemove = Null[, $iAdd = Null[, $iExchange = Null]]]]])
; Parameters ....: $oSrchDescript       - [in/out] an object. A Search Descriptor Object returned from
;				   +						_LOWriter_SearchDescriptorCreate function.
;                  $bSimilarity         - [optional] a boolean value. Default is Null. If True, a "similarity search" is
;				   +						performed.
;                  $bCombine            - [optional] a boolean value. Default is Null. If True, all similarity rules ($iRemove,
;				   +						$iAdd, and $iExchange) are applied together.
;                  $iRemove             - [optional] an integer value. Default is Null. Specifies the number of characters that
;				   +						may be ignored to match the search pattern.
;                  $iAdd                - [optional] an integer value. Default is Null. Specifies the number of characters that
;				   +						must be added to match the search pattern.
;                  $iExchange           - [optional] an integer value. Default is Null. Specifies the number of characters that
;				   +						must be replaced to match the search pattern.
; Return values .:  Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oSrchDescript not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oSrchDescript Object not a Search Descriptor Object.
;				   @Error 1 @Extended 3 Return 0 = $bSimilarity not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $bCombine not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iRemove, $iAdd, or $iExchange set to a value, but $bSimilarity not set to
;				   +									True.
;				   @Error 1 @Extended 6 Return 0 = $iRemove not an Integer.
;				   @Error 1 @Extended 7 Return 0 = $iAdd not an Integer.
;				   @Error 1 @Extended 8 Return 0 = $iExchange not an Integer.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = $bSimilarity is set to True while Regular Expression Search is also set to
;				   +									True.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Returns 1 after directly modifying Search Descriptor Object.
;;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 5 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;						get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_SearchDescriptorCreate
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_SearchDescriptorSimilarityModify(ByRef $oSrchDescript, $bSimilarity = Null, $bCombine = Null, $iRemove = Null, $iAdd = Null, $iExchange = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $avSrchDescript[5]

	If Not IsObj($oSrchDescript) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not $oSrchDescript.supportsService("com.sun.star.util.SearchDescriptor") Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($bSimilarity, $bCombine, $iRemove, $iAdd, $iExchange) Then
		__LOWriter_ArrayFill($avSrchDescript, $oSrchDescript.SearchSimilarity(), $oSrchDescript.SearchSimilarityRelax(), _
				$oSrchDescript.SearchSimilarityRemove(), $oSrchDescript.SearchSimilarityAdd(), $oSrchDescript.SearchSimilarityExchange())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avSrchDescript)
	EndIf

	If ($bSimilarity <> Null) Then
		If Not IsBool($bSimilarity) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If ($bSimilarity = True) And ($oSrchDescript.SearchRegularExpression = True) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$oSrchDescript.SearchSimilarity = $bSimilarity
	EndIf

	If ($bCombine <> Null) Then
		If Not IsBool($bCombine) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oSrchDescript.SearchSimilarityRelax = $bCombine
	EndIf

	If Not __LOWriter_VarsAreNull($iRemove, $iAdd, $iExchange) Then
		If ($oSrchDescript.SearchSimilarity() = False) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If ($iRemove <> Null) Then
			If Not IsInt($iRemove) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
			$oSrchDescript.SearchSimilarityRemove = $iRemove
		EndIf

		If ($iAdd <> Null) Then
			If Not IsInt($iAdd) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
			$oSrchDescript.SearchSimilarityAdd = $iAdd
		EndIf

		If ($iExchange <> Null) Then
			If Not IsInt($iExchange) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
			$oSrchDescript.SearchSimilarityExchange = $iExchange
		EndIf
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_SearchDescriptorSimilarityModify

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_ShapesGetNames
; Description ...: Return a list of Shape names contained in a document.
; Syntax ........: _LOWriter_ShapesGetNames(Byref $oDoc)
; Parameters ....: $oDoc                - [in/out] an object.  A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: 2D Array
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving Shapes Object.
;				   --Success--
;				   @Error 0 @Extended ? Return Array = Success. Returning 2D Array containing a list of Shape names contained
;				   +									contained in a document, the first column ($aArray[0][0] contains the
;				   +									shape name, the second column ($aArray[0][1] contains the shape's
;				   +									Implementation name. See Remarks.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The Implementation name identifies what type of shape object it is, as there can be multiple things counted
;						as "Shapes", such as Text Frames etc.
;						I have found the three Implementation names being returned, SwXTextFrame, indicating the shape
;						is actually a Text Frame, SwXShape, is a regular shape such as a line, circle etc. And
;						"SwXTextGraphicObject", which is an image / picture. There may be other return types I haven't found
;						yet. Images inserted into the document are also listed as TextFrames in the shapes category. There isn't
;						and easy way to differentiate between them yet, see _LOWriter_FramesGetNames, to search for Frames in
;						the shapes category.
; Related .......:
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_ShapesGetNames(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asShapeNames[0][2]
	Local $oShapes

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oShapes = $oDoc.DrawPage()
	If Not IsObj($oShapes) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If $oShapes.hasElements() Then
		ReDim $asShapeNames[$oShapes.getCount()][2]
		For $i = 0 To $oShapes.getCount() - 1
			$asShapeNames[$i][0] = $oShapes.getByIndex($i).Name()
			If $oShapes.getByIndex($i).supportsService("com.sun.star.drawing.Text") Then
				; If Supports Text Method, then get that impl. name, else just te regular impl. name.
				$asShapeNames[$i][1] = $oShapes.getByIndex($i).Text.ImplementationName()
			Else
				$asShapeNames[$i][1] = $oShapes.getByIndex($i).ImplementationName()
			EndIf

			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
		Next
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, UBound($asShapeNames), $asShapeNames)
EndFunc   ;==>_LOWriter_ShapesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableBorderColor
; Description ...: Set and Retrieve the Table Border Line Color. Libre Office Version 3.6 and Up.
; Syntax ........: _LOWriter_TableBorderColor(Byref $oTable[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $iVert = Null[, $iHori = Null]]]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Color of the
;				   +						Table in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Color of the
;				   +						Table in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Color of the
;				   +						Table in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Color of the
;				   +						Table in Long Color code format. One of the predefined constants listed below can be
;				   +						used, or a custom value.
;                  $iVert               - [optional] an integer value. Default is Null. Sets the Vertical Border Line Color of
;				   +						the Table in Long Color code format. One of the predefined constants listed below
;				   +						can be used, or a custom value.
;                  $iHori               - [optional] an integer value. Default is Null. Sets the Horizontal Border Line Color of
;				   +						the Table in Long Color code format. One of the predefined constants listed below
;				   +						can be used, or a custom value.
; Internal Remarks : Error values for Initialization and Processing, are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								 set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								 set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or higher than 16,777,215 or
;				   +								 not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iVert not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								 set to Null.
;				   @Error 1 @Extended 7 Return 0 = $iHori not an integer, or set to less than 0 or higher than 16,777,215 or not
;				   +								 set to Null.
;				   @Error 1 @Extended 8 Return 0 = $oTable references a Table that has not been inserted into the document yet.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Object "TableBorder2".
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Color when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Color when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Color when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Color when Border width not set.
;				   @Error 4 @Extended 5 Return 0 = Cannot set Vertical Border Color when Border width not set.
;				   @Error 4 @Extended 6 Return 0 = Cannot set Horizontal Border Color when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_TableBorderWidth,
;					_LOWriter_TableBorderStyle, _LOWriter_TableBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableBorderColor(ByRef $oTable, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $iVert = Null, $iHori = Null)
	Local $vReturn

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iVert <> Null) And Not __LOWriter_IntIsBetween($iVert, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If ($iHori <> Null) And Not __LOWriter_IntIsBetween($iHori, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0) ;Table not in document.

	$vReturn = __LOWriter_TableBorder($oTable, False, False, True, $iTop, $iBottom, $iLeft, $iRight, $iVert, $iHori)
	Return SetError(@error, @extended, $vReturn)

EndFunc   ;==>_LOWriter_TableBorderColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableBorderPadding
; Description ...: Set or retrieve the Border Padding (spacing between the Table text and border) settings.
; Syntax ........: _LOWriter_TableBorderPadding(Byref $oTable[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Set the Top Distance between the Border
;				   +						and Table text in Micrometers(uM).
;                  $iBottom             - [optional] an integer value. Default is Null. Set the Bottom Distance between the
;				   +						Border and Table text in Micrometers(uM).
;                  $iLeft               - [optional] an integer value. Default is Null. Set the Left Distance between the Border
;				   +						and Table text in Micrometers(uM).
;                  $iRight              - [optional] an integer value. Default is Null. Set the Right Distance between the Border
;				   +						and Table text in Micrometers(uM).
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable not inserted in Document.
;				   @Error 1 @Extended 3 Return 0 = $iTop not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iBottom not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $Left not an Integer.
;				   @Error 1 @Extended 6 Return 0 = $iRight not an Integer.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving TableBorderDistances Object.
;				   @Error 2 @Extended 2 Return 0 = Error retrieving TableBorderDistances Object for Error checking.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iTop border distance
;				   |								2 = Error setting $iBottom border distance
;				   |								4 = Error setting $iLeft border distance
;				   |								8 = Error setting $iRight border distance
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_TableBorderWidth,
;					_LOWriter_TableBorderStyle, _LOWriter_TableBorderColor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableBorderPadding(ByRef $oTable, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $tBD
	Local $aiBPadding[4]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iTop, $iBottom, $iLeft, $iRight) Then
		__LOWriter_ArrayFill($aiBPadding, $oTable.TableBorderDistances.TopDistance(), $oTable.TableBorderDistances.BottomDistance(), _
				$oTable.TableBorderDistances.LeftDistance(), $oTable.TableBorderDistances.RightDistance())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $aiBPadding)
	EndIf

	$tBD = $oTable.TableBorderDistances()
	If Not IsObj($tBD) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If ($iTop <> Null) Then
		If Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tBD.TopDistance = $iTop
	EndIf

	If ($iBottom <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tBD.BottomDistance = $iBottom
	EndIf

	If ($iLeft <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$tBD.LeftDistance = $iLeft
	EndIf

	If ($iRight <> Null) Then
		If Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tBD.RightDistance = $iRight
	EndIf

	$oTable.TableBorderDistances = $tBD
	;Error Checking.
	$tBD = $oTable.TableBorderDistances()
	If Not IsObj($tBD) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)

	$iError = ($iTop = Null) ? $iError : (__LOWriter_IntIsBetween($tBD.TopDistance(), $iTop - 1, $iTop + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iBottom = Null) ? $iError : (__LOWriter_IntIsBetween($tBD.BottomDistance(), $iBottom - 1, $iBottom + 1)) ? $iError : BitOR($iError, 2)
	$iError = ($iLeft = Null) ? $iError : (__LOWriter_IntIsBetween($tBD.LeftDistance(), $iLeft - 1, $iLeft + 1)) ? $iError : BitOR($iError, 4)
	$iError = ($iRight = Null) ? $iError : (__LOWriter_IntIsBetween($tBD.RightDistance(), $iRight - 1, $iRight + 1)) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableBorderPadding

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableBorderStyle
; Description ...: Set and Retrieve the Table Border Line style.  Libre Office Version 3.6 and Up.
; Syntax ........: _LOWriter_TableBorderStyle(Byref $oTable[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $iVert = Null[, $iHori = Null]]]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line Style of the
;				   +							Table using one of the line style constants, See below for list.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Style of the
;				   +							Table using one of the line style constants, See below for list.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line Style of the
;				   +							Table using one of the line style constants, See below for list.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Style of the
;				   +							Table using one of the line style constants, See below for list.
;                  $iVert               - [optional] an integer value. Default is Null. Sets the internal Vertical Border Line
;				   +							Styles of the Table using one of the line style constants, See below for list.
;                  $iHori               - [optional] an integer value. Default is Null. Sets the internal Horizontal Border Line
;				   +							Styles of the Table using one of the line style constants, See below for list.
; Internal Remarks : Error values for Initialization and Processing are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iTop is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to higher than 17 and not equal to
;				   +								0x7FFF, Or $iBottom is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to higher than 17 and not equal to 0x7FFF,
;				   +									Or $iLeft is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iVert not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 7 Return 0 = $iHori not an integer, or set to higher than 17 and not equal to
;				   +									0x7FFF, Or $iRight is set to less than 0 or not set to Null.
;				   @Error 1 @Extended 8 Return 0 = $oTable references a Table that has not been inserted into the document yet.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Object "TableBorder2".
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Cannot set Top Border Style when Border width not set.
;				   @Error 4 @Extended 2 Return 0 = Cannot set Bottom Border Style when Border width not set.
;				   @Error 4 @Extended 3 Return 0 = Cannot set Left Border Style when Border width not set.
;				   @Error 4 @Extended 4 Return 0 = Cannot set Right Border Style when Border width not set.
;				   @Error 4 @Extended 5 Return 0 = Cannot set Vertical Border Style when Border width not set.
;				   @Error 4 @Extended 6 Return 0 = Cannot set Horizontal Border Style when Border width not set.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Border Width must be set first to be able to set Border Style and Color.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Style Constants: $LOW_BORDERSTYLE_NONE(0x7FFF) No border line,
;					$LOW_BORDERSTYLE_SOLID(0) Solid border line,
;					$LOW_BORDERSTYLE_DOTTED(1) Dotted border line,
;					$LOW_BORDERSTYLE_DASHED(2) Dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE(3) Double border line,
;					$LOW_BORDERSTYLE_THINTHICK_SMALLGAP(4) Double border line with a thin line outside and a thick line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THINTHICK_MEDIUMGAP(5) Double border line with a thin line outside and a thick line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THINTHICK_LARGEGAP(6) Double border line with a thin line outside and a thick line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_THICKTHIN_SMALLGAP(7) Double border line with a thick line outside and a thin line inside
;						separated by a small gap,
;					$LOW_BORDERSTYLE_THICKTHIN_MEDIUMGAP(8) Double border line with a thick line outside and a thin line inside
;						separated by a medium gap,
;					$LOW_BORDERSTYLE_THICKTHIN_LARGEGAP(9) Double border line with a thick line outside and a thin line inside
;						separated by a large gap,
;					$LOW_BORDERSTYLE_EMBOSSED(10) 3D embossed border line,
;					$LOW_BORDERSTYLE_ENGRAVED(11) 3D engraved border line,
;					$LOW_BORDERSTYLE_OUTSET(12) Outset border line,
;					$LOW_BORDERSTYLE_INSET(13) Inset border line,
;					$LOW_BORDERSTYLE_FINE_DASHED(14) Finely dashed border line,
;					$LOW_BORDERSTYLE_DOUBLE_THIN(15) Double border line consisting of two fixed thin lines separated by a
;						variable gap,
;					$LOW_BORDERSTYLE_DASH_DOT(16) Line consisting of a repetition of one dash and one dot,
;					$LOW_BORDERSTYLE_DASH_DOT_DOT(17) Line consisting of a repetition of one dash and 2 dots.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableBorderWidth,	_LOWriter_TableBorderColor, _LOWriter_TableBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableBorderStyle(ByRef $oTable, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $iVert = Null, $iHori = Null)
	Local $vReturn

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iVert <> Null) And Not __LOWriter_IntIsBetween($iVert, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If ($iHori <> Null) And Not __LOWriter_IntIsBetween($iHori, $LOW_BORDERSTYLE_SOLID, $LOW_BORDERSTYLE_DASH_DOT_DOT, "", $LOW_BORDERSTYLE_NONE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0) ;Table not in document.

	$vReturn = __LOWriter_TableBorder($oTable, False, True, False, $iTop, $iBottom, $iLeft, $iRight, $iVert, $iHori)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_TableBorderStyle

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableBorderWidth
; Description ...: Set and Retrieve the Table Border Line Width. Libre Office Version 3.6 and Up.
; Syntax ........: _LOWriter_TableBorderWidth(Byref $oTable[, $iTop = Null[, $iBottom = Null[, $iLeft = Null[, $iRight = Null[, $iVert = Null[, $iHori = Null]]]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTop                - [optional] an integer value. Default is Null. Sets the Top Border Line width of the
;				   +						Table in MicroMeters. One of the predefined constants listed below can be used.
;                  $iBottom             - [optional] an integer value. Default is Null. Sets the Bottom Border Line Width of the
;				   +							Table in MicroMeters. One of the predefined constants listed below can be used.
;                  $iLeft               - [optional] an integer value. Default is Null. Sets the Left Border Line width of the
;				   +							Table in MicroMeters. One of the predefined constants listed below can be used.
;                  $iRight              - [optional] an integer value. Default is Null. Sets the Right Border Line Width of the
;				   +							Table in MicroMeters. One of the predefined constants listed below can be used.
;                  $iVert               - [optional] an integer value. Default is Null. Sets the Internal Vertical Border Line
;				   +							width of the Table in MicroMeters. One of the predefined constants listed below
;				   +							can be used.
;                  $iHori               - [optional] an integer value. Default is Null. Sets the Internal Horizontal Border Line
;				   +							width of the Table in MicroMeters. One of the predefined constants listed below
;				   +							can be used.
; Internal Remark: Error values for Initialization and Processing, are passed from the internal border setting function.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable Variable not Object type variable.
;				   @Error 1 @Extended 2 Return 0 = $iTop not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iBottom not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 4 Return 0 = $iLeft not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iRight not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 6 Return 0 = $iVert not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 7 Return 0 = $iHori not an integer, or set to less than 0 or not set to Null.
;				   @Error 1 @Extended 8 Return 0 = $oTable references a Table that has not been inserted into the document yet.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error Creating Object "com.sun.star.table.BorderLine2"
;				   @Error 2 @Extended 2 Return 0 = Error retrieving Object "TableBorder2".
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Internal command error. More than one set to True. UDF Must be fixed.
;				   --Version Related Errors--
;				   @Error 7 @Extended 1 Return 0 = Current Libre Office version lower than 3.6.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 6 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: To "Turn Off" Borders, set them to 0
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Width Constants:  $LOW_BORDERWIDTH_HAIRLINE(2),
;					$LOW_BORDERWIDTH_VERY_THIN(18),
;					$LOW_BORDERWIDTH_THIN(26),
;					$LOW_BORDERWIDTH_MEDIUM(53),
;					$LOW_BORDERWIDTH_THICK(79),
;					$LOW_BORDERWIDTH_EXTRA_THICK(159)
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer, _LOWriter_TableBorderStyle,
;					_LOWriter_TableBorderColor,	_LOWriter_TableBorderPadding
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableBorderWidth(ByRef $oTable, $iTop = Null, $iBottom = Null, $iLeft = Null, $iRight = Null, $iVert = Null, $iHori = Null)
	Local $vReturn

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If ($iTop <> Null) And Not __LOWriter_IntIsBetween($iTop, 0, $iTop) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iBottom <> Null) And Not __LOWriter_IntIsBetween($iBottom, 0, $iBottom) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($iLeft <> Null) And Not __LOWriter_IntIsBetween($iLeft, 0, $iLeft) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If ($iRight <> Null) And Not __LOWriter_IntIsBetween($iRight, 0, $iRight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If ($iVert <> Null) And Not __LOWriter_IntIsBetween($iVert, 0, $iVert) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
	If ($iHori <> Null) And Not __LOWriter_IntIsBetween($iHori, 0, $iHori) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0) ;Table not in document.

	$vReturn = __LOWriter_TableBorder($oTable, True, False, False, $iTop, $iBottom, $iLeft, $iRight, $iVert, $iHori)
	Return SetError(@error, @extended, $vReturn)
EndFunc   ;==>_LOWriter_TableBorderWidth

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableBreak
; Description ...: Set or retrieve the Paragraph break settings for before or after the Table.
; Syntax ........: _LOWriter_TableBreak(Byref $oDoc, Byref $oTable[, $iBreakType = Null[, $sPageStyle = Null[, $iPgNumOffSet = Null]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iBreakType          - [optional] an integer value. Default is Null. The Type of break to insert, see
;				   +						constants below.
;                  $sPageStyle          - [optional] a string value. Default is Null. The New Page Style to begin with after the
;				   +						paragraph break. If Set, to remove the break you must set this to "".
;                  $iPgNumOffSet        - [optional] an integer value. Default is Null. If a page break property is set at the
;				   +						table, this property contains the new value for the page number.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable not an Object
;				   @Error 1 @Extended 3 Return 0 = $iBreakType not an Integer, less than 0 or Greater than 6. See Constants.
;				   @Error 1 @Extended 4 Return 0 = $sPageStyle not a String.
;				   @Error 1 @Extended 5 Return 0 = $sPageStyle not found in current document.
;				   @Error 1 @Extended 6 Return 0 = $iPgNumOffSet not an Integer or less than 0.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iBreakType
;				   |								2 = Error setting $sPageStyle
;				   |								4 = Error setting $iPgNumOffSet
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  Note: Break Type must be set before PageStyle will be able to be set, and page style needs set before
;					$iPgNumOffSet can be set.
;					Libre doesn't directly show in its User interface options for Break type constants #3 and #6 (Column both)
;						and (Page both), but  doesn't throw an error when being set to either one, so they are included here,
;						though I'm not sure if they will work correctly.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;Break Constants : $LOW_BREAK_NONE(0) – No column or page break is applied.
;						$LOW_BREAK_COLUMN_BEFORE(1) – A column break is applied before the Table. The current Paragraph,
;							therefore, is the first in the column.
;						$LOW_BREAK_COLUMN_AFTER(2) – A column break is applied after the Table. The current Paragraph,
;							therefore, is the last in the column.
;						$LOW_BREAK_COLUMN_BOTH(3) – A column break is applied before and after the Table. The current
;							Paragraph, therefore, is the only Paragraph in the column.
;						$LOW_BREAK_PAGE_BEFORE(4) – A page break is applied before the Table. The current Paragraph,
;						therefore, is the first on the page.
;						$LOW_BREAK_PAGE_AFTER(5) – A page break is applied after the Table. The current Paragraph,
;						therefore, is the last on the page.
;						$LOW_BREAK_PAGE_BOTH(6) – A page break is applied before and after the Table. The current
;						Paragraph, therefore, is the only paragraph on the page.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_PageStylesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableBreak(ByRef $oDoc, ByRef $oTable, $iBreakType = Null, $sPageStyle = Null, $iPgNumOffSet = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avBreaks[3]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If __LOWriter_VarsAreNull($iBreakType, $sPageStyle, $iPgNumOffSet) Then
		__LOWriter_ArrayFill($avBreaks, $oTable.BreakType(), $oTable.PageDescName(), $oTable.PageNumberOffset())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avBreaks)
	EndIf

	If ($iBreakType <> Null) Then
		If Not __LOWriter_IntIsBetween($iBreakType, 0, 6) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTable.BreakType = $iBreakType
		$iError = ($oTable.BreakType() = $iBreakType) ? $iError : BitOR($iError, 1)
	EndIf

	If ($sPageStyle <> Null) Then
		If Not IsString($sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If ($sPageStyle <> "") And Not _LOWriter_PageStyleExists($oDoc, $sPageStyle) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTable.PageDescName = $sPageStyle
		$iError = ($oTable.PageDescName() = $sPageStyle) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iPgNumOffSet <> Null) Then
		If Not __LOWriter_IntIsBetween($iPgNumOffSet, 0, $iPgNumOffSet) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTable.PageNumberOffset = $iPgNumOffSet
		$iError = ($oTable.PageNumberOffset() = $iPgNumOffSet) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) ;error setting Properties.
EndFunc   ;==>_LOWriter_TableBreak

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableColor
; Description ...: Set and retrieve the Background color settings of a Table.
; Syntax ........: _LOWriter_TableColor(Byref $oTable[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iBackColor              - [optional] an integer value. Default is Null.; Specify the Table background color
;				   +						 as a Long Integer. See Remarks, and see Constants below. Set to $LOW_COLOR_OFF(-1)
;				   +						 for no background color.
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. If True, the background color is
;				   +						transparent.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iBackColor not an Integer, Or set to less than -1 or higher than 16777215,
;				   +									or not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $bBackTransparent not a Boolean and not set to Null.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$iBackColor is set using Long integer. See _LOWriter_ConvertColorToLong, _LOWriter_ConvertColorFromLong.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableColor(ByRef $oTable, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avColor[2]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oTable.BackColor(), $oTable.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oTable.BackColor = $iBackColor
		$iError = ($oTable.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1) ;Error setting color.
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTable.BackTransparent = $bBackTransparent
		$iError = ($oTable.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2) ;Error setting BackTransparent.
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableColumnDelete
; Description ...: Delete a column from a TextTable.
; Syntax ........: _LOWriter_TableColumnDelete(Byref $oTable, $iColumn[, $iCount = 1])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iColumn             - an integer value. The Column to delete.
;                  $iCount              - [optional] an integer value. Default is 1. Number of columns to delete starting at
;				   +						$iColumn and moving right.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iColumn variable not an integer or set to less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iCount variable not an Integer or set to less than 1.
;				   @Error 1 @Extended 5 Return 0 = Requested column higher than number of columns contained in table.
;				   --Success--
;				   @Error 0 @Extended $iCount Return 1: Full amount of columns deleted.
;				   @Error 0 @Extended $iCount Return 2: $iCount higher than amount of columns contained in Table; deleted all
;				   +										columns from $iColumn over. @Extended set to total columns deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: LibreOffice counts columns and Rows starting at 0. So to delete the first column in a Table you would set
;					$iColumn to 0. If you attempt to delete more columns than are present all columns from $iColumn over will be
;					deleted. If you delete all columns starting from column 0, the entire Table is deleted.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableColumnGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableColumnDelete(ByRef $oTable, $iColumn, $iCount = 1)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iColumnCount, $iReturn = 0

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't delete columns if Table not in doc.
	If Not IsInt($iColumn) Or ($iColumn < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iCount) Or ($iCount < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iColumnCount = $oTable.getColumns.getCount()
	If ($iColumnCount <= $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Requested column out of bounds.
	$iCount = ($iCount > ($iColumnCount - $iColumn)) ? ($iColumnCount - $iColumn) : $iCount
	$iReturn = ($iCount > ($iColumnCount - $iColumn)) ? 2 : 1 ;Return 1 if full amount deleted else 2 if only partial.
	$oTable.getColumns.removeByIndex($iColumn, $iCount)
	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $iReturn)
EndFunc   ;==>_LOWriter_TableColumnDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableColumnGetCount
; Description ...: Retrieves the number of Columns in a table.
; Syntax ........: _LOWriter_TableColumnGetCount(Byref $oTable)
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
; Return values .: Success: Integer
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table Object not inserted into document yet.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Column count.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer. Returning Column Count as an Integer.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableColumnGetCount(ByRef $oTable)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iColumnSize = 0

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0) ;Not an Object.
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't get columns/rows if Table not in doc.
	$iColumnSize = $oTable.getColumns.getCount()
	If ($iColumnSize = 0) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;Failed to retrieve column count.
	Return $iColumnSize
EndFunc   ;==>_LOWriter_TableColumnGetCount

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableColumnInsert
; Description ...: Insert a column into a TextTable
; Syntax ........: _LOWriter_TableColumnInsert(Byref $oTable, $iCount[, $iColumn = -1])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iCount              - an integer value. Number of columns to insert.
;                  $iColumn             - [optional] an integer value. Default is -1. See Remarks.
; Return values .: Success: 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iCount variable not an Integer or set to less than 1.
;				   @Error 1 @Extended 4 Return 0 = $iColumn variable not an integer or set to less than -1.
;				   @Error 1 @Extended 5 Return 0 = Requested column higher than number of columns contained in table.
;				    --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to insert columns.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1. Successfully inserted the number of desired columns.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If you do not set $iColumn, the new columns will be placed at the end of the Table. Note, LibreOffice counts
;					the Table columns/Rows starting at 0. The columns are placed behind the desired column when inserted. To
;					insert a column at the left most of the Table you would set $iColumn to 0. To insert columns at the Right
;					of a table you would set $iColumn to one higher than the last column. e.g. a Table containing 3 columns,
;					would be numbered as follows: 0(first-Column), 1(second-Column), 2(third-Column), to insert columns
;					at the very Right of the columns, you would set $iColumn to 3.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableColumnGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableColumnInsert(ByRef $oTable, $iCount, $iColumn = -1)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iColumnCount

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't insert columns if Table not in doc.
	If Not IsInt($iCount) Or ($iCount < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iColumn) Or ($iColumn < -1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iColumnCount = $oTable.getColumns.getCount()
	If ($iColumnCount < $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Requested column out of bounds.
	$iColumn = ($iColumn <= -1) ? $iColumnCount : $iColumn
	$oTable.getColumns.insertByIndex($iColumn, $iCount)
	Return ($oTable.getColumns.getCount() = ($iColumnCount + $iCount)) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_TableColumnInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableCreate
; Description ...: Create a TextTable to insert into a document.
; Syntax ........: _LOWriter_TableCreate(Byref $oDoc[, $iRows = 3[, $iColumns = 2[, $bSplit = Null[, $iBackColor = Null[, $sTableName = ""]]]]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $iRows               - [optional] an integer value. Default is 3. Number of rows
;                  $iColumns            - [optional] an integer value. Default is 2. Number of columns
;                  $bSplit              - [optional] a boolean value. Default is Null. If False, the table will not split across
;				   +						two pages.
;                  $iBackColor          - [optional] an integer value. Default is Null. Specify the Table background color as
;				   +						a Long Integer. See Constants and Remarks. Set to $LOW_COLOR_OFF (-1) for no
;				   +						background color
;                  $sTableName          - [optional] a string value. Default is "". Set the table name. See Remarks.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iRows not an integer, or less than 1.
;				   @Error 1 @Extended 3 Return 0 = $iColumns not an integer, or less than 1.
;				   @Error 1 @Extended 4 Return 0 = $bSplit not a Boolean, or not set to Null.
;				   @Error 1 @Extended 5 Return 0 = $iBackColor not an integer, Or set to less than -1 or higher than
;				   +									16777215, or not set to Null
;				   @Error 1 @Extended 6 Return 0 = $sTableName not a String.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure Creating Object com.sun.star.text.TextTable.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. Successfully created a Table Object. The Object is returned for later
;				   +									insertion into the document.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: NOTE: This function only creates a Table Object. You must insert it into the document using
;					_LOWriter_TableInsert. You can preset some properties using _LOWriter_TableProperties, before inserting, or
;						set them after inserting. Note: some properties can only be set on already inserted Tables.
;						To skip any of the optional parameters. Use the "Null" keyword.
;						Background color is set using Long integer. See _LOWriter_ConvertColorToLong,
;					_LOWriter_ConvertColorFromLong. There are also preset colors, listed below.
;						The TableName may change upon inserting it into the document if there is a table already named the
;					same, (e.g. TableName becomes TableName1).
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableInsert, _LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableCreate(ByRef $oDoc, $iRows = 3, $iColumns = 2, $bSplit = Null, $iBackColor = Null, $sTableName = "")
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTable

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iRows) Or ($iRows < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iColumns) Or ($iColumns < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	$oTable = $oDoc.createInstance("com.sun.star.text.TextTable")

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	$oTable.initialize($iRows, $iColumns)

	If ($bSplit <> Null) Then
		If Not IsBool($bSplit) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oTable.Split = $bSplit
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTable.BackColor = $iBackColor
		$oTable.BackTransparent = False
	EndIf

	If ($sTableName <> "") Then
		If Not IsString($sTableName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oTable.setName($sTableName)
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTable)

EndFunc   ;==>_LOWriter_TableCreate

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableCreateCursor
; Description ...: Retrieve a Table Cursor for modifying Text-Table properties.
; Syntax ........: _LOWriter_TableCreateCursor(Byref $oDoc, Byref $oTable[, $sCellName = ""[, $oCursor = Null]])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions. See remarks.
;                  $sCellName           - [optional] a string value. Default is "". The name of the Table Cell to create a Text
;				   +						Table Cursor in. See Remarks.
;                  $oCursor             - [optional] an object. A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. Default is Null. See Remarks.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable and $oCursor variables not Objects.
;				   @Error 1 @Extended 3 Return 0 = $oTable and $oCursor variables both Objects.
;				   @Error 1 @Extended 4 Return 0 = $sCellName not a String.
;				   @Error 1 @Extended 5 Return 0 = $oCursor in wrong Data Type/ Not in a Table.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failure retrieving Table by Table Name from Cursor.
;				   @Error 3 @Extended 2 Return 0 = Failure retrieving list of Table Cell Names.
;				   @Error 3 @Extended 3 Return 0 = Failure retrieving Cell by Cell Name or by first Cell name in Table.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success, TableCursor object was created successfully. Returns
;				   +				TextTable Object for further Table manipulation functions.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:  $oTable can be either set to a Table object, or Null Keyword with $oCursor set to a Cursor object,
;					$oCursor can be either set to a cursor object currently located in a Table (such as a ViewCursor)/ or a
;					Text-TableCursor (Not a TableCursor, but a TextCursor already in a Table). $sCellName can be left blank,
;					which will place the TextTableCursor at the first cell (Typically "A1") if $oTable is called with an Object,
;					else if $oCursor is used, the cell the cursor is currently located in is used.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableGetCellNames, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableCreateCursor(ByRef $oDoc, ByRef $oTable, $sCellName = "", $oCursor = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTableCursor
	Local $asCells

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oTable) And Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If IsObj($oTable) And IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsString($sCellName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	If IsObj($oCursor) Then
		Switch __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)
			Case $LOW_CURDATA_CELL ; Transform to TextTableCursor
				$oTable = $oDoc.TextTables.getByName($oCursor.TextTable.Name)
				If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
				$sCellName = ($sCellName = "") ? $oCursor.Cell.CellName : $sCellName
			Case Else
				Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Wrong Cursor Data Type
		EndSwitch
	EndIf

	If ($sCellName = "") Then ;If cell name undefined, get first cell.
		$asCells = $oTable.getCellNames()
		If Not IsArray($asCells) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ;no cells
		$sCellName = $asCells[0]
	EndIf

	$oTableCursor = $oTable.createCursorByCellName($sCellName)
	If Not IsObj($oTableCursor) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0)
	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTableCursor)
EndFunc   ;==>_LOWriter_TableCreateCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableCursor
; Description ...: Commands related to a Table Cursor.
; Syntax ........: _LOWriter_TableCursor(Byref $oCursor[, $sGoToCellByName = Null[, $bSelect = False[, $bMergeRange = Null[, $iSplitRangeInto = Null[, $bSplitRangeHori = False]]]]])
; Parameters ....: $oCursor             - [in/out] an object. A Table Cursor Object returned from _LOWriter_TableCreateCursor
;				   +						function.
;                  $sGoToCellByName     - [optional] a string value. Default is Null. Move the cursor to the cell with the
;				   +						specified name, Case Sensitive; See also $bSelect.
;                  $bSelect             - [optional] a boolean value. Default is False. If True, selection is expanded when
;				   +						moving to a specific cell with $sGoToCellByName.
;                  $bMergeRange         - [optional] a boolean value. Default is Null. Merge the selected range of cells.
;                  $iSplitRangeInto     - [optional] an integer value. Default is Null. Create i (an integer) new cells in each
;				   +						cell selected by the cursor. See also $bSplitRangeHori.
;                  $bSplitRangeHori     - [optional] a boolean value. Default is False. If True, splits the selected cell or
;				   +						cell range  horizontally, else, False for vertically.
; Return values .: Success: 1
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not a Table Cursor.
;				   @Error 1 @Extended 3 Return 0 = $sGoToCellByName not a String.
;				   @Error 1 @Extended 4 Return 0 = $bSelect not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $iSplitRangeInto not an Integer or less than 1.
;				   @Error 1 @Extended 6 Return 0 = $bSplitRangeHori not a Boolean.
;				   --Processing Errors--
;				   @Error 3 @Extended ? Return 0 = Some commands were not successfully completed. Use BitAND to test
;				   +								@Extended for thefollowing values: 1, 2, 4
;				   |								1 = Processing $sGoToCellByName command was unsuccessful.
;				   |								2 = Processing $bMergeRange command was unsuccessful.
;				   |								4 = Processing $iSplitRangeInto command was unsuccessful.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Command was successfully completed.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableCreateCursor, _LOWriter_CursorMove, _LOWriter_TableGetCellNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableCursor(ByRef $oCursor, $sGoToCellByName = Null, $bSelect = False, $bMergeRange = Null, $iSplitRangeInto = Null, $bSplitRangeHori = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $vReturn
	Local $iError = 0

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If ((__LOWriter_Internal_CursorGetType($oCursor)) <> $LOW_CURTYPE_TABLE_CURSOR) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	If ($sGoToCellByName <> Null) Then
		If Not IsString($sGoToCellByName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		If Not IsBool($bSelect) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$vReturn = $oCursor.gotoCellByName($sGoToCellByName, $bSelect)
		$iError = ($vReturn = True) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bMergeRange = True) Then
		$vReturn = $oCursor.mergeRange()
		$iError = ($vReturn = True) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iSplitRangeInto <> Null) Then
		If Not __LOWriter_IntIsBetween($iSplitRangeInto, 1, $iSplitRangeInto) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not IsBool($bSplitRangeHori) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$vReturn = $oCursor.splitRange($iSplitRangeInto, $bSplitRangeHori)
		$iError = ($vReturn = True) ? $iError : BitOR($iError, 4, 0)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROCESSING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableDelete
; Description ...: Delete a table from the document.
; Syntax ........: _LOWriter_TableDelete(Byref $oDoc, Byref $oTable)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
; Return values .: Success: 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable variable not an Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Table not found in the document.
;				   @Error 3 @Extended 2 Return 0 = Table by same name still contained in the document. Delete failed.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1. Table was successfully deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableDelete(ByRef $oDoc, ByRef $oTable)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $sTableName

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	$sTableName = $oTable.getName()
	If Not ($oDoc.TextTables.hasByName($sTableName)) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Document doesn't contain Table named this yet.
	$oTable.dispose()
	If ($oDoc.TextTables.hasByName($sTableName)) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ;Document still contains Table named the same.
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetCellNames
; Description ...: Retrieve an array list of Cell names from a Table.
; Syntax ........: _LOWriter_TableGetCellNames(Byref $oTable)
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
; Return values .: Success: Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Array of Cell Names.
;				   --Success--
;				   @Error 0 @Extended ? Return Array. Array of Cell names. @Extended set to number of Cell names contained in
;				   +									the array.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetCellNames(ByRef $oTable)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $asCellNames

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0) ;Not an Object.
	$asCellNames = $oTable.getCellNames()
	If Not IsArray($asCellNames) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;failed to get array of names.
	Return SetError($__LOW_STATUS_SUCCESS, UBound($asCellNames), $asCellNames)
EndFunc   ;==>_LOWriter_TableGetCellNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetCellObjByCursor
; Description ...: Retrieve a single Cell Object or a Cell Range by Cursor.
; Syntax ........: _LOWriter_TableGetCellObjByCursor(Byref $oDoc, Byref $oTable, Byref $oCursor)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $oCursor             - [in/out] an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor variable not an Object.
;				   @Error 1 @Extended 4 Return 0 = $oTable object references a Table not currently inserted in the document.
;				   @Error 1 @Extended 5 Return 0 = TextCursor or ViewCursor are not currently located inside of a Table Cell.
;				   @Error 1 @Extended 6 Return 0 = $oCursor unknown cursor type.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure Retrieving Cell Object
;				   --Success--
;				   @Error 0 @Extended 0 Return Object.  A Cell object or a CellRange.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function will accept a Table Cursor, a ViewCursor, or a Text Cursor. A TableCursor and ViewCursor can
;					retrieve the single cell they are located in, or a range of cells that have been selected by them. A
;					TextCursor can only retrieve the single cell it is located in.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName, _LOWriter_DocGetViewCursor,
;					_LOWriter_DocCreateTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetCellObjByCursor(ByRef $oDoc, ByRef $oTable, ByRef $oCursor)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCursorType, $iCursorDataType
	Local $oCell, $oSelection
	Local $sCellRange

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$iCursorType = __LOWriter_Internal_CursorGetType($oCursor)

	Switch $iCursorType

		Case $LOW_CURTYPE_TABLE_CURSOR
			$sCellRange = $oCursor.getRangeName()
			$oCell = (StringInStr($sCellRange, ":")) ? $oTable.getCellRangeByName($sCellRange) : $oTable.getCellByName($sCellRange)
		Case $LOW_CURTYPE_TEXT_CURSOR
			$iCursorDataType = __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)
			If Not ($iCursorDataType = $LOW_CURDATA_CELL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Cursor not in a Table cell.
			$oCell = $oTable.getCellByName($oCursor.Cell.CellName)
		Case $LOW_CURTYPE_VIEW_CURSOR
			$oSelection = $oDoc.CurrentSelection()
			If ($oSelection.ImplementationName() = "SwXTextTableCursor") Then
				$oCell = $oTable.getCellRangeByName($oSelection.getRangeName())
			Else
				$iCursorDataType = __LOWriter_Internal_CursorGetDataType($oDoc, $oCursor)
				If Not ($iCursorDataType = $LOW_CURDATA_CELL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Cursor not in a Table cell.
				$oCell = $oTable.getCellByName($oCursor.Cell.CellName)
			EndIf
		Case Else
			Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Unknown cursor type.
	EndSwitch

	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	Return $oCell

EndFunc   ;==>_LOWriter_TableGetCellObjByCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetCellObjByName
; Description ...: Retrieve a Cell Object or a Cell range by Cell name.
; Syntax ........: _LOWriter_TableGetCellObjByName(Byref $oTable, $sCellName[, $sToCellName = $sCellName])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $sCellName           - a string value. A Cell Name. Note: Case Sensitive. See remarks.
;                  $sToCellName         - [optional] a string value. Default is $sCellName. The Cell name to end the CellRange.
;				   +						Note: Case Sensitive.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable is not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sCellName not a String.
;				   @Error 1 @Extended 3 Return 0 = $sToCellName not a String.
;				   @Error 1 @Extended 4 Return 0 = $oTable object references a Table not currently inserted in the document.
;				   @Error 1 @Extended 5 Return 0 = Table does not contain a Requested Cell name  as in called in $sCellName.
;				   @Error 1 @Extended 6 Return 0 = Table does not contain a Requested Cell name as in called in $sToCellName.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Cell Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object.  = Success. A Cell object or a CellRange Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Cell names are Case Sensitive. LibreOffice first goes from A to Z, and then a to z and then AA to ZZ etc.
;					$sCellName can contain a Cell name that is located after $sToCellName in the Table.
;					If $sToCellName is left blank, a cell object is returned instead of a Cell Range.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName, _LOWriter_TableGetCellNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetCellObjByName(ByRef $oTable, $sCellName, $sToCellName = $sCellName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local Const $STR_STRIPALL = 8
	Local $oCell

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sCellName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsString($sToCellName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	$sCellName = StringStripWS($sCellName, $STR_STRIPALL)
	$sToCellName = StringStripWS($sToCellName, $STR_STRIPALL)

	If Not __LOWriter_TableHasCellName($oTable, $sCellName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;CellName not contained in Table
	If Not __LOWriter_TableHasCellName($oTable, $sToCellName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;ToCellName not contained in Table

	$oCell = ($sCellName = $sToCellName) ? $oTable.getCellByName($sCellName) : $oTable.getCellRangeByName($sCellName & ":" & $sToCellName)
	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	Return $oCell
EndFunc   ;==>_LOWriter_TableGetCellObjByName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetCellObjByPosition
; Description ...: Retrieve a Cell object or Cell Range by position in a Table. See Remarks
; Syntax ........: _LOWriter_TableGetCellObjByPosition(Byref $oTable, $iColumn, $iRow[, $iToColumn = $iColumn [, $iToRow = $iRow]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iColumn             - an integer value. The column the desired cell is located in, or where to start the
;				   +						the cell range from.
;                  $iRow                - an integer value. The row the desired cell is located in, or where to start the
;				   +						the cell range from.
;                  $iToColumn           - [optional] an integer value. Default is $iColumn . The column constaining the cell
;				   +						where to end the the cell range. Can be the same as $iRow or higher. If left blank
;				   +						$iToColumn will be the same as $iColumn.
;                  $iToRow              - [optional] an integer value. Default is $iRow. The row constaining the cell where to
;				   +						end the the cell range. Can be the same as $iRow or higher. If left blank $iToRow
;				   +						will be the same as $iRow.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable is not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iColumn not an integer or less than 0.
;				   @Error 1 @Extended 3 Return 0 = $iRow not an integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iToColumn not an integer or less than 0.
;				   @Error 1 @Extended 5 Return 0 = $iToRow not an integer or less than 0.
;				   @Error 1 @Extended 6 Return 0 = $oTable object references a Table not currently inserted in the document.
;				   @Error 1 @Extended 7 Return 0 = Table does not contain sufficient number of columns for column called in
;				   +								$iColumn.
;				   @Error 1 @Extended 8 Return 0 = Table does not contain sufficient number of columns for column called in
;				   +								$iToColumn.
;				   @Error 1 @Extended 9 Return 0 = Table does not contain sufficient number of Row for Row called in
;				   +								$iRow.
;				   @Error 1 @Extended 10 Return 0 = Table does not contain sufficient number of Row for Row called in
;				   +								$iToRow.
;				   @Error 1 @Extended 11 Return 0 = $iToColumn lower integer than $iColumn.
;				   @Error 1 @Extended 12 Return 0 = $iToRow lower integer than $iRow.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Cell Object.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object.  = Success. A Cell object or a CellRange.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function can fail with complex Tables. Complex tables are tables that contain cells that have been split
;					or joined.
;						If Both $iToColumn and $iToRow are uncalled, a single cell will be returned.
;						Rows and Columns in a Table are 0 based, meaning they start their count at 0. the first cell is row 0
;					column 0. To retrieve a single cell, only call the $iColumn and $iRow parameters. To retrieve a cell range,
;					call $iColumn with the lowest integer value column and then $iToColumn with the highest integer value column
;					desired. Same for $iRow and $iToRow. You may request the same row in both $iRow and $iToRow, but neither
;					$iToRow or $iToColumn may be a lower integer value than $iRow and $iColumn respectively.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableColumnGetCount, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetCellObjByPosition(ByRef $oTable, $iColumn, $iRow, $iToColumn = $iColumn, $iToRow = $iRow)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oCell

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iColumn) Or ($iColumn < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsInt($iRow) Or ($iRow < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iToColumn) Or ($iToColumn < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsInt($iToRow) Or ($iToRow < 0) And ($iToRow <> Null) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)

	If Not __LOWriter_TableHasColumnRange($oTable, $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
	If Not __LOWriter_TableHasColumnRange($oTable, $iToColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
	If Not __LOWriter_TableHasRowRange($oTable, $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
	If Not __LOWriter_TableHasRowRange($oTable, $iToRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)

	If ($iToColumn < $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0) ;ToColumn Lower than begining column.
	If ($iToRow < $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 12, 0) ;ToRow Lower than begining Row.

	$oCell = (($iColumn = $iToColumn) And ($iRow = $iToRow)) ? $oTable.getCellByPosition($iColumn, $iRow) : $oTable.getCellRangeByPosition($iColumn, $iRow, $iToColumn, $iToRow)
	If Not IsObj($oCell) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	Return $oCell

EndFunc   ;==>_LOWriter_TableGetCellObjByPosition

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetData
; Description ...: Retrieve current text of a TextTable.
; Syntax ........: _LOWriter_TableGetData(Byref $oTable[, $iRow = -1[, $iColumn = -1]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iRow                - [optional] an integer value. Default is -1. The desired Row, See Remarks.
;                  $iColumn             - [optional] an integer value. Default is -1. The desired Column, See Remarks.
; Return values .: Success: Array or String.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iRow variable not an Integer.
;				   @Error 1 @Extended 4 Return 0 = $iColumn variable not an Integer.
;				   @Error 1 @Extended 5 Return 0 = Requested $iRow higher than contained rows in Table.
;				   @Error 1 @Extended 6 Return 0 = Requested $iColumn higher than contained Columns in Table.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Array of Table data.
;				   --Success--
;				   @Error 0 @Extended ? Return Array or String. Array of Table data unless both Row and Column are specified.
;				   +							@Extended set to 1 if returning the full Table of Data in an array, Else 2 if
;				   +							returning a specific row of data, else 3 if returning a specific column of data,
;				   +							else 4 if returning a specific cell of data.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: If only a Table object is called, an Array of Arrays is returned, The main array will have the same number
;					of elements as there are rows. Each internal array will have the same number of elements as there are
;						columns.
;					If You input a specific Row, a Array will be returned with the data from that specific row, one element
;						per column.
;					If You input a Row and a column, a String will be returned with the specified Cell's data.
;					If you want only a certain column, set $iRow to -1 and $iColumn to the desired column.
;					Note, LibreOffice sees Tables as starting at 0, so to get the first Row/Column, you would set $iRow or
;						$iColumn to 0.
;					This function can fail if the Table is "complex", meaning it has joined or split cells.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_TableColumnGetCount, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetData(ByRef $oTable, $iRow = -1, $iColumn = -1)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $avTableDataReturn, $avTableData, $avTempArray
	Local $iExtended

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't get data if Table not in doc.
	If Not IsInt($iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$avTableData = $oTable.getDataArray() ;Will fail if Columns are joined
	If Not IsArray($avTableData) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	;LibreOffice uses @CR and @LF, whereas Autoit uses @CRLF, I need to convert @CRLF back to @CR. So cycle through all Table
	;Data and replace @CRLF with @CR
	For $k = 0 To UBound($avTableData) - 1
		$avTempArray = $avTableData[$k]
		For $j = 0 To UBound($avTempArray) - 1
			$avTempArray[$j] = StringReplace($avTempArray[$j], @CRLF, @CR)
		Next
		$avTableData[$k] = $avTempArray
		Sleep((IsInt($k / $__LOWCONST_SLEEP_DIV)) ? 10 : 0)
	Next

	If (UBound($avTableData) <= $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Requested Row higher than number of contained Rows.
	$avTableDataReturn = ($iRow > -1) ? $avTableData[$iRow] : $avTableData
	$iExtended = ($iRow > -1) ? 2 : 1 ;set Extended to 1 If retrieving the full Table Data, else 2 if getting a specific row.

	If ($iRow = -1) And ($iColumn <> -1) Then ; getting only a specific column of Data
		If (UBound($avTableData[0]) <= $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Requested Column higher than number of contained columns.
		ReDim $avTableDataReturn[UBound($avTableData)]
		For $i = 0 To UBound($avTableData) - 1
			$avTableDataReturn[$i] = ($avTableData[$i])[$iColumn]
		Next
		$iExtended = 3 ;set extended to 3 if retrieving a Specific column
	ElseIf ($iRow <> -1) And ($iColumn <> -1) Then ;
		If (UBound($avTableDataReturn) <= $iColumn) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;Requested Column higher than number of contained columns.
		$avTableDataReturn = $avTableDataReturn[$iColumn]
		$iExtended = 4 ; set Extended to 4 if retrieiving a specific cell of Data
	EndIf
	Return SetError($__LOW_STATUS_SUCCESS, $iExtended, $avTableDataReturn)
EndFunc   ;==>_LOWriter_TableGetData

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetObjByCursor
; Description ...: Returns a Table Object, for later Table related functions.
; Syntax ........: _LOWriter_TableGetObjByCursor(Byref $oDoc, Byref $oCursor)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - [in/out] an object.  A Cursor Object returned from any Cursor Object creation
;				   +						Or retrieval functions. Cursor object must be located in a Table.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor not an Object.
;				   @Error 1 @Extended 3 Return 0 = $oCursor not located in a Table.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success, Returns an Object for the Table.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableGetObjByName, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetObjByCursor(ByRef $oDoc, ByRef $oCursor)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If (__LOWriter_Internal_CursorGetDataType($oDoc, $oCursor) <> $LOW_CURDATA_CELL) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Cursor not in Table

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.TextTables.getByName($oCursor.TextTable.Name))
EndFunc   ;==>_LOWriter_TableGetObjByCursor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableGetObjByName
; Description ...: Returns a Table Object, for later Table related functions.
; Syntax ........: _LOWriter_TableGetObjByName(Byref $oDoc, $sTableName)
; Parameters ....: $oDoc                - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $sTableName          - a string value. Name of Table to retrieve an Object for.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc not an Object.
;				   @Error 1 @Extended 2 Return 0 = $sTableName not a String.
;				   @Error 1 @Extended 3 Return 0 = No table matching $sTableName found in Document.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object = Success, Returns an Object for the requested Table.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableGetObjByCursor, _LOWriter_TablesGetNames
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableGetObjByName(ByRef $oDoc, $sTableName)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsString($sTableName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not _LOWriter_DocHasTableName($oDoc, $sTableName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oDoc.TextTables.getByName($sTableName))
EndFunc   ;==>_LOWriter_TableGetObjByName

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableInsert
; Description ...:  Inserts the Table Object into a document.
; Syntax ........: _LOWriter_TableInsert(Byref $oDoc, Byref $oCursor, Byref $oTable[, $bHeading = False])
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
;                  $oCursor             - an object. A Cursor Object returned from any Cursor Object creation
;				   +						or retrieval functions. See Remarks.
;                  $oTable              - [in/out] an object. The Table Object created by _LOWriter_TableCreate to Insert.
;                  $bHeading            - [optional] a boolean value. Default is False. Whether to set the first row of a Table
;				   +								to the "Table Heading" paragraph style. See Remarks.
; Return values .: Success: Object.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oCursor variable not an Object. And not set to Default
;				   @Error 1 @Extended 3 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 4 Return 0 = $bHeading variable not a Boolean.
;				   @Error 1 @Extended 5 Return 0 = $oCursor Object located in a Foot/EndNote.
;				   @Error 1 @Extended 6 Return 0 = $oCursor Object located in unknown data type.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure retrieving insertion point.
;				   @Error 2 @Extended 2 Return 0 = Failure Creating Text Object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Error getting Text Object from Cursor.
;				   @Error 3 @Extended 2 Return 0 = Error inserting Table into Document.
;				   --Property Setting Errors--
;				   @Error 4 @Extended 1 Return 0 = Error setting First Table Row to "Table Heading" Paragraph style.
;				   @Error 4 @Extended 2 Return 0 = Error setting First Table Row to "Table Contents" Paragraph style.
;				   --Success--
;				   @Error 0 @Extended 0 Return Object. = Success. Table was successfully inserted, returning Table Object.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: This function inserts a Table previously created by _LOWriter_TableCreate, into a document.
;					TextTables cannot be inserted into Foot/Endnotes. And it is not best to place them into other tables, though
;					it is possible. You can set the $oCursor parameter  to either a ViewCursor or a Text cursor currently in an
;					acceptable data type, the table will be inserted at the cursor position. Or set $oCursor to Default, the
;					Table will be inserted at the very end of a document.
;						$bHeading only applies when a Table is created with more than 1 Row. For an unknown reason to myself,
;					when creating a TextTable with more than 1 row the "Table Heading" paragraph style is applied to the first
;					row. Setting $bHeading to False (Default) will return the paragraph style to "Table Contents" as normal. If
;					you set $bHeading to True, "Table Heading" Paragraph Style will be applied. If these styles are not present
;					a Property setting error will result, however the Table will still have been successfully inserted into the
;					document.
; Related .......: _LOWriter_TableCreate, _LOWriter_DocGetViewCursor, _LOWriter_DocCreateTextCursor,
;					_LOWriter_CellCreateTextCursor, _LOWriter_FrameCreateTextCursor, _LOWriter_DocHeaderGetTextCursor,
;					_LOWriter_DocFooterGetTextCursor
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableInsert(ByRef $oDoc, $oCursor, ByRef $oTable, $bHeading = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oText, $oInsertPoint, $oTextCursor
	Local $iCursorDataType

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsObj($oCursor) And ($oCursor <> Default) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsBool($bHeading) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)

	If IsObj($oCursor) Then
		$oText = __LOWriter_CursorGetText($oDoc, $oCursor)
		If @error Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
		$iCursorDataType = @extended

		Switch $iCursorDataType
			Case $LOW_CURDATA_FOOTNOTE, $LOW_CURDATA_ENDNOTE
				Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Unable to insert tables in footnotes/ EndNotes
			Case $LOW_CURDATA_BODY_TEXT, $LOW_CURDATA_CELL, $LOW_CURDATA_FRAME, $LOW_CURDATA_HEADER_FOOTER
				$oInsertPoint = $oCursor
			Case Else
				Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;unknown Cursor type
		EndSwitch
	Else
		$oInsertPoint = $oDoc.Text.getEnd()
		$oText = $oInsertPoint.getText()
	EndIf
	If Not IsObj($oInsertPoint) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If Not IsObj($oText) Then Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0)
	$oText.insertTextContent($oInsertPoint, $oTable, False)

	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)

	If $bHeading Then
		For $i = 0 To $oTable.getColumns.getCount() - 1
			$oTextCursor = $oTable.getCellByPosition($i, 0).Text.createTextCursor()
			_LOWriter_ParStyleSet($oDoc, $oTextCursor, "Table Heading")
			If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 1, 0)
		Next
	ElseIf Not $bHeading Then
		For $i = 0 To $oTable.getColumns.getCount() - 1
			$oTextCursor = $oTable.getCellByPosition($i, 0).Text.createTextCursor()
			_LOWriter_ParStyleSet($oDoc, $oTextCursor, "Table Contents")
			If @error Then Return SetError($__LOW_STATUS_PROP_SETTING_ERROR, 2, 0)
		Next
	EndIf

	Return SetError($__LOW_STATUS_SUCCESS, 0, $oTable)
EndFunc   ;==>_LOWriter_TableInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableMargin
; Description ...: Set and retrieve the Table Margins.
; Syntax ........: _LOWriter_TableMargin(Byref $oTable[, $iTopMargin = Null[, $iBottomMargin = Null[, $iLeftMargin = Null[, $iRightMargin = Null]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTopMargin          - [optional] an integer value. Default is Null. Specify the top table margin in
;				   +								Micrometers.
;                  $iBottomMargin       - [optional] an integer value. Default is Null. Specify the Bottom table margin in
;				   +								Micrometers.
;                  $iLeftMargin         - [optional] an integer value. Default is Null. Specify the Left table margin in
;				   +								Micrometers. See Remarks
;                  $iRightMargin        - [optional] an integer value. Default is Null. Specify the Right table margin in
;				   +								Micrometers. See Remarks.
; Return values .: Success: Integer or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTopMargin Not an Integer, less than 0 or greater than 100,000.
;				   @Error 1 @Extended 3 Return 0 = $iBottomMargin Not an Integer, less than 0 or greater than 100,000
;				   @Error 1 @Extended 4 Return 0 = $iLeftMargin Not an Integer or less than -100,000.
;				   @Error 1 @Extended 5 Return 0 = $iRightMargin Not an Integer or less than -100,000.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Cannot set margins unless Table is located in the document.
;				   @Error 3 @Extended 2 Return 0 = Unable to set Left Margin with orientation set to $LOW_ORIENT_HORI_FULL(6)
;				   +									Or $LOW_ORIENT_HORI_LEFT(3).
;				   @Error 3 @Extended 3 Return 0 = Unable to set Right Margin with orientation set to other than
;				   +								$LOW_ORIENT_HORI_NONE(0) Or $LOW_ORIENT_HORI_LEFT(3).
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8
;				   |								1 = Error setting $iTopMargin
;				   |								2 = Error setting $iBottomMargin
;				   |								4 = Error setting $iLeftMargin
;				   |								8 = Error setting $iRightMargin
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:Left Margin cannot be set unless Table Orientation is set to other than $LOW_ORIENT_HORI_FULL(6), or
;					$LOW_ORIENT_HORI_LEFT(3). Right Margin cannot be set unless the table orientation is set to
;					$LOW_ORIENT_HORI_NONE(0), or $LOW_ORIENT_HORI_LEFT(3).
;					 Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableMargin(ByRef $oTable, $iTopMargin = Null, $iBottomMargin = Null, $iLeftMargin = Null, $iRightMargin = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $aiMargins[4]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;These settings don't work unless Table is inserted.

	If __LOWriter_VarsAreNull($iTopMargin, $iBottomMargin, $iLeftMargin, $iRightMargin) Then
		__LOWriter_ArrayFill($aiMargins, $oTable.TopMargin(), $oTable.BottomMargin(), $oTable.LeftMargin(), $oTable.RightMargin())
		Return SetError($__LOW_STATUS_SUCCESS, 0, $aiMargins)
	EndIf

	If ($iTopMargin <> Null) Then
		If Not __LOWriter_IntIsBetween($iTopMargin, 0, 100000) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oTable.TopMargin = $iTopMargin
		$iError = (__LOWriter_IntIsBetween($oTable.TopMargin(), $iTopMargin - 1, $iTopMargin + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iBottomMargin <> Null) Then
		If Not __LOWriter_IntIsBetween($iBottomMargin, 0, 100000) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTable.BottomMargin = $iBottomMargin
		$iError = (__LOWriter_IntIsBetween($oTable.BottomMargin(), $iBottomMargin - 1, $iBottomMargin + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	If ($iLeftMargin <> Null) Then
		If Not __LOWriter_IntIsBetween($iLeftMargin, -100000, $iLeftMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		If (($oTable.HoriOrient() = $LOW_ORIENT_HORI_FULL) Or ($oTable.HoriOrient() = $LOW_ORIENT_HORI_LEFT)) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ;Can't set Left Margin with orientation set to Auto(6/Full) Or Left (3)
		$oTable.LeftMargin = $iLeftMargin
		$iError = (__LOWriter_IntIsBetween($oTable.LeftMargin(), $iLeftMargin - 1, $iLeftMargin + 1)) ? $iError : BitOR($iError, 4)
	EndIf

	If ($iRightMargin <> Null) Then
		If Not __LOWriter_IntIsBetween($iRightMargin, -100000, $iRightMargin) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		If Not (($oTable.HoriOrient() = $LOW_ORIENT_HORI_LEFT) Or ($oTable.HoriOrient() = $LOW_ORIENT_HORI_NONE)) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) ;Can't set Right Margin with orientation set to other than Manual(0/None) Or Left (3)
		$oTable.RightMargin = $iRightMargin
		$iError = (__LOWriter_IntIsBetween($oTable.RightMargin(), $iRightMargin - 1, $iRightMargin + 1)) ? $iError : BitOR($iError, 8)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableMargin

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableProperties
; Description ...: Set and retrieve Table properties.
; Syntax ........: _LOWriter_TableProperties(Byref $oTable[, $iTableAlign = Null[, $bKeepTogether = Null[, $sTableName = Null[, $bSplit = Null[, $bSplitRows = Null[, $bRepeatHeading = Null[, $iHeaderRows = Null]]]]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iTableAlign        - [optional] an integer value. Default is Null. Specify the horizontal alignment of
;				   +						the Table. See Constants. Libre Office Default is $LOW_ORIENT_HORI_FULL.
;                  $bKeepTogether       - [optional] a boolean value. Default is Null. If True, prevents page or column breaks
;				   +						between this table and the following paragraph or text table.
;                  $sTableName          - [optional] a string value. Default is Null. Set the table name. See Remarks.
;                  $bSplit              - [optional] a boolean value. Default is Null. If False, the table will not split across
;				   +						two pages.
;                  $bSplitRows          - [optional] a boolean value. Default is Null. If True, the content in a Table row is
;				   +						allowed to split at page splits, else if False, Content is not allowed to split
;				   +						across pages.
;                  $bRepeatHeading     - [optional] a boolean value. Default is Null. If True, the first row of the table is
;				   +						repeated on every new page.
;                  $iHeaderRows         - [optional] an integer value. Default is Null. The number of rows to include in the
;				   +						heading.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iTableAlign not an Integer, less than 0 or greater than 7. See Constants.
;				   @Error 1 @Extended 3 Return 0 = $bKeepTogether not a Boolean.
;				   @Error 1 @Extended 4 Return 0 = $sTableName not a String.
;				   @Error 1 @Extended 5 Return 0 = $bSplit not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bSplitRows not a Boolean.
;				   @Error 1 @Extended 7 Return 0 = $oTable not inserted in Document, cannot set $bSplitRows.
;				   @Error 1 @Extended 8 Return 0 = $bRepeatHeading not a Boolean.
;				   @Error 1 @Extended 9 Return 0 = $oTable not inserted in Document, cannot set $bRepeatHeading.
;				   @Error 1 @Extended 10 Return 0 = $iHeaderRows not an integer, less than 0 or greater than number of rows in
;				   +								table.
;				   @Error 1 @Extended 11 Return 0 = $oTable not inserted in Document, cannot set $iHeaderRows.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4, 8, 16, 32, 64
;				   |								1 = Error setting $iTableAlign
;				   |								2 = Error setting $bKeepTogether
;				   |								4 = Error setting $sTableName -- Table with same name already present
;				   |								8 = Error setting $bSplit
;				   |								16 = Error setting $bSplitRows
;				   |								32 = Error setting $bRepeatHeading
;				   |								64 = Error setting $bRepeatHeading
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, If the Table is NOT
;				   +								already inserted into the document, returning current settings in a 4
;				   +								 Element Array with values in order of function parameters.
;				   @Error 0 @Extended 2 Return Array = Success. All optional parameters were set to Null, If the Table is
;				   +								already inserted into the document, returning current settings in a 7
;				   +								 Element Array with values in order of function parameters.
;				   +								$bSplitRows, $RepeatHeadline, and $iHeaderRows will be returned in the
;				   +								5th, 6th, and 7th elements, respectively, as the Table is inserted into
;				   +								the Document.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$bSplitRows and $bRepeatHeading can only be set for Tables currently in the document, not for Tables
;						Created with _LOWriter_TableCreate, and not inserted.
;					$bSplitRows will return 0 instead of a boolean if the Table's rows have different settings for $bSplitRows.
; Horizontal Orientation Constants: $LOW_ORIENT_HORI_NONE = 0 – No alignment is applied.
;						$LOW_ORIENT_HORI_RIGHT = 1 – The Table is aligned at the right side.
;						$LOW_ORIENT_HORI_CENTER = 2 – The table is aligned at the middle.
;						$LOW_ORIENT_HORI_LEFT = 3 – The table is aligned at the left side.
;						$LOW_ORIENT_HORI_FULL = 6 – The table uses the full space (for text tables only).
;						$LOW_ORIENT_HORI_LEFT_AND_WIDTH = 7 – The left offset and the width of the table are defined.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableProperties(ByRef $oTable, $iTableAlign = Null, $bKeepTogether = Null, $sTableName = Null, $bSplit = Null, $bSplitRows = Null, $bRepeatHeading = Null, $iHeaderRows = Null)
	Local $iError = 0
	Local $oComError = ObjEvent("AutoIt.Error", "__LOWriter_InternalComErrorHandler")
	Local $avProperties[4]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iTableAlign, $bKeepTogether, $sTableName, $bSplit, $bSplitRows, $bRepeatHeading, $iHeaderRows) Then

		If (__LOWriter_IsTableInDoc($oTable) = True) Then
			__LOWriter_ArrayFill($avProperties, $oTable.HoriOrient(), $oTable.KeepTogether(), $oTable.getName(), $oTable.Split(), _
					__LOWriter_TableRowSplitToggle($oTable), $oTable.RepeatHeadline(), $oTable.HeaderRowCount())
			Return SetError($__LOW_STATUS_SUCCESS, 1, $avProperties)
		Else
			__LOWriter_ArrayFill($avProperties, $oTable.HoriOrient(), $oTable.KeepTogether(), $oTable.getName(), $oTable.Split())
			Return SetError($__LOW_STATUS_SUCCESS, 2, $avProperties)
		EndIf

	EndIf

	If ($iTableAlign <> Null) Then
		If Not __LOWriter_IntIsBetween($iTableAlign, $LOW_ORIENT_HORI_NONE, $LOW_ORIENT_HORI_LEFT_AND_WIDTH) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
		$oTable.HoriOrient = $iTableAlign
		$iError = ($oTable.HoriOrient() = $iTableAlign) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bKeepTogether <> Null) Then
		If Not IsBool($bKeepTogether) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$oTable.KeepTogether = $bKeepTogether
		$iError = ($oTable.KeepTogether() = $bKeepTogether) ? $iError : BitOR($iError, 2)
	EndIf

	If ($sTableName <> Null) Then
		If Not IsString($sTableName) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$oTable.setName($sTableName)
		$iError = (($oComError.Number = -2147352567)) ? BitOR($iError, 4) : $iError ;Table with same name already present.
	EndIf

	If ($bSplit <> Null) Then
		If Not IsBool($bSplit) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oTable.Split = $bSplit
		$iError = ($oTable.Split() = $bSplit) ? $iError : BitOR($iError, 8)
	EndIf

	If ($bSplitRows <> Null) Then
		If Not IsBool($bSplitRows) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 7, 0)
		__LOWriter_TableRowSplitToggle($oTable, $bSplitRows)
		$iError = (__LOWriter_TableRowSplitToggle($oTable) = $bSplitRows) ? $iError : BitOR($iError, 16)
	EndIf

	If ($bRepeatHeading <> Null) Then
		If Not IsBool($bRepeatHeading) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 8, 0)
		If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 9, 0)
		$oTable.RepeatHeadline = $bRepeatHeading
		$iError = ($oTable.RepeatHeadline() = $bRepeatHeading) ? $iError : BitOR($iError, 32)
	EndIf

	If ($iHeaderRows <> Null) Then
		If Not __LOWriter_IntIsBetween($iHeaderRows, 0, $oTable.getRows.getCount()) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 10, 0)
		If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 11, 0)
		$oTable.HeaderRowCount = $iHeaderRows
		$iError = ($oTable.HeaderRowCount() = $iHeaderRows) ? $iError : BitOR($iError, 64)
	EndIf

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) ;error setting Properties.
EndFunc   ;==>_LOWriter_TableProperties

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableRowColor
; Description ...: Set the background color of an entire Table row.
; Syntax ........: _LOWriter_TableRowColor(Byref $oTable, $iRow[, $iBackColor = Null[, $bBackTransparent = Null]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iRow                - an integer value.
;                  $iBackColor              - [optional] an integer value. Default is Null. Specify the Table background color as
;				   +						a Long Integer. See Remarks. Set to $LOW_COLOR_OFF(-1) to disable background color.
;                  $bBackTransparent    - [optional] a boolean value. Default is Null. If True, the background color is
;				   +						transparent.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iRow variable not an integer or set to less than 0.
;				   @Error 1 @Extended 4 Return 0 = Requested row out higher than number of rows contained in Table.
;				   @Error 1 @Extended 5 Return 0 = $iBackColor not an Integer Or less than -1 or greater than 16777215.
;				   @Error 1 @Extended 6 Return 0 = $bBackTransparent not set to Null and not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure retrieving specified Row object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iBackColor
;				   |								2 = Error setting $bBackTransparent
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 2 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					$iBackColor is set using Long integer. See _LOWriter_ConvertColorToLong,
;						_LOWriter_ConvertColorFromLong. There are also preset colors, listed below.
; Color Constants: $LOW_COLOR_OFF(-1),
;					$LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertColorFromLong, _LOWriter_ConvertColorToLong, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableRowColor(ByRef $oTable, $iRow, $iBackColor = Null, $bBackTransparent = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $oRow
	Local $avColor[2]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't set Row color if Table not in doc.
	If Not IsInt($iRow) Or ($iRow < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If ($oTable.getRows.getCount() < $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;Requested Row out of bounds.
	$oRow = $oTable.getRows.getByIndex($iRow)
	If Not IsObj($oRow) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iBackColor, $bBackTransparent) Then
		__LOWriter_ArrayFill($avColor, $oRow.BackColor(), $oRow.BackTransparent())
		Return SetError($__LOW_STATUS_SUCCESS, 0, $avColor)
	EndIf

	If ($iBackColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iBackColor, $LOW_COLOR_OFF, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)
		$oRow.BackColor = $iBackColor
		If ($iBackColor = $LOW_COLOR_OFF) Then $oRow.BackTransparent = True
		$iError = ($oRow.BackColor() = $iBackColor) ? $iError : BitOR($iError, 1) ;Error setting color.
	EndIf

	If ($bBackTransparent <> Null) Then
		If Not IsBool($bBackTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$oRow.BackTransparent = $bBackTransparent
		$iError = ($oRow.BackTransparent() = $bBackTransparent) ? $iError : BitOR($iError, 2) ;Error setting BackTransparent.
	EndIf

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0)
EndFunc   ;==>_LOWriter_TableRowColor

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableRowDelete
; Description ...: Delete a row from a TextTable.
; Syntax ........: _LOWriter_TableRowDelete(Byref $oTable, $iRow[, $iCount = 1])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iRow                - an integer value.
;                  $iCount              - [optional] an integer value. Default is 1. Number of rows to delete starting at
;				   +						$iRow and moving down.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iRow variable not an integer or set to less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iCount variable not an Integer or set to less than 1.
;				   @Error 1 @Extended 5 Return 0 = Requested row higher than number of rows contained in table.
;				   --Success--
;				   @Error 0 @Extended $iCount Return 1: Full amount of Rows deleted.
;				   @Error 0 @Extended $iCount Return 2: $iCount higher than amount of rows contained in Table; deleted all
;				   +								rows from $iRow over. @Extended set to total rows deleted.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: LibreOffice counts Rows starting at 0. So to delete the first Row in a Table you would set
;					$iRow to 0. If you attempt to delete more rows than are present, all rows from $iRow over will be deleted.
;					If you delete all Rows starting from Row 0, the entire Table is deleted.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableRowDelete(ByRef $oTable, $iRow, $iCount = 1)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iRowCount, $iReturn = 0

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't delete Rows if Table not in doc.
	If Not IsInt($iRow) Or ($iRow < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iCount) Or ($iCount < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iRowCount = $oTable.getRows.getCount()
	If ($iRowCount <= $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Requested Row out of bounds.
	$iCount = ($iCount > ($iRowCount - $iRow)) ? ($iRowCount - $iRow) : $iCount
	$iReturn = ($iCount > ($iRowCount - $iRow)) ? 2 : 1 ;Return 1 if full amount deleted else 2 if only partial.
	$oTable.getRows.removeByIndex($iRow, $iCount)
	Return SetError($__LOW_STATUS_SUCCESS, $iCount, $iReturn)
EndFunc   ;==>_LOWriter_TableRowDelete

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableRowGetCount
; Description ...: Retrieves the number of Rows in a table.
; Syntax ........: _LOWriter_TableRowGetCount(Byref $oTable)
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
; Return values .: Success: Integer.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table Object not inserted into document yet.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failed to retrieve Row count.
;				   --Success--
;				   @Error 0 @Extended 0 Return Integer. Returning Row count as an Integer.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableRowGetCount(ByRef $oTable)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iRowSize = 0

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0) ;Not an Object.
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't get columns/rows if Table not in doc.
	$iRowSize = $oTable.getRows.getCount()
	If ($iRowSize = 0) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0) ;Failed to retrieve Row count.
	Return $iRowSize
EndFunc   ;==>_LOWriter_TableRowGetCount

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableRowInsert
; Description ...: Insert a row into a TextTable
; Syntax ........: _LOWriter_TableRowInsert(Byref $oTable, $iCount[, $iRow = -1])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iCount              - an integer value.
;                  $iRow                - [optional] an integer value. Default is -1.
; Return values .: Success: 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $iCount variable not an Integer or set to less than 1.
;				   @Error 1 @Extended 4 Return 0 = $iRow variable not an integer or set to less than -1.
;				   @Error 1 @Extended 5 Return 0 = Requested Row higher than number of Rows contained in table.
;				    --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Failed to insert Rows.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1. Successfully inserted requested number of rows.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:If you do not set $iRow, the new Rows will be placed at the Bottom of the Table. Note, LibreOffice counts
;					the Table Rows starting at 0. The Rows are placed above the desired Row when inserted. To
;					insert a Row at the top most of the Table you would set $iRow to 0. To insert rows at the bottom of a table
;					you would set $iRow to one higher than the last row. e.g. a Table containing 3 rows, would be numbered as
;					follows: 0(first-row), 1(second-row), 2(third-row), to insert rows at the very bottom of the rows, I would
;					set $iRow to 3.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableRowInsert(ByRef $oTable, $iCount, $iRow = -1)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iRowCount

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't insert Rows if Table not in doc.
	If Not IsInt($iCount) Or ($iCount < 1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iRow) Or ($iRow < -1) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	$iRowCount = $oTable.getRows.getCount()
	If ($iRowCount < $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;Requested Row out of bounds.
	$iRow = ($iRow <= -1) ? $iRowCount : $iRow
	$oTable.getRows.insertByIndex($iRow, $iCount)
	Return ($oTable.getRows.getCount() = ($iRowCount + $iCount)) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0)
EndFunc   ;==>_LOWriter_TableRowInsert

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableRowProperty
; Description ...: Set or Retrieve properties for a TextTable.
; Syntax ........: _LOWriter_TableRowProperty(Byref $oTable, $iRow[, $iHeight = Null[, $bIsAutoHeight = Null[, $bIsSplitAllowed = Null]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iRow                - an integer value. The Row to set the properties.
;                  $iHeight             - [optional] an integer value. Default is Null. Set the row height.
;                  $bIsAutoHeight       - [optional] a boolean value. Default is Null. If  true the rows height is automatically
;				   +						adjusted.
;                  $bIsSplitAllowed     - [optional] a boolean value. Default is Null. If false the row can not be split at a
;				   +						page boundary.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iRow variable not an Integer or less than 0.
;				   @Error 1 @Extended 3 Return 0 = Requested row out higher than number of rows contained in Table.
;				   @Error 1 @Extended 4 Return 0 = $iHeight not set to Null and not an Integer.
;				   @Error 1 @Extended 5 Return 0 = $bIsAutoHeight not set to Null and not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $bIsSplitAllowed not set to Null and not a Boolean.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure retrieving specified Row object.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Table not inserted into document already.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4
;				   |								1 = Error setting $iHeight
;				   |								2 = Error setting $bIsAutoHeight
;				   |								4 = Error setting $bIsSplitAllowed
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The First row in a table is 0. None of these properties can be set if the Table is not inserted yet.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName, _LOWriter_TableRowGetCount
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableRowProperty(ByRef $oTable, $iRow, $iHeight = Null, $bIsAutoHeight = Null, $bIsSplitAllowed = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oRow
	Local $iError = 0
	Local $avProperties[3]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;Table not already inserted into document.
	If Not IsInt($iRow) Or ($iRow < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($oTable.getRows.getCount() <= $iRow) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;Requested Row out of bounds.
	$oRow = $oTable.getRows.getByIndex($iRow)
	If Not IsObj($oRow) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iHeight, $bIsAutoHeight, $bIsSplitAllowed) Then
		__LOWriter_ArrayFill($avProperties, $oRow.Height(), $oRow.IsAutoHeight(), $oRow.IsSplitAllowed())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avProperties)
	EndIf

	If ($iHeight <> Null) Then
		If Not IsInt($iHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;not an integer
		$oRow.Height = $iHeight
		$iError = (__LOWriter_IntIsBetween($oRow.Height(), $iHeight - 1, $iHeight + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($bIsAutoHeight <> Null) Then
		If Not IsBool($bIsAutoHeight) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0) ;not a Boolean
		$oRow.IsAutoHeight = $bIsAutoHeight
		$iError = ($oRow.IsAutoHeight() = $bIsAutoHeight) ? $iError : BitOR($iError, 2)
	EndIf

	If ($bIsSplitAllowed <> Null) Then
		If Not IsBool($bIsSplitAllowed) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0) ;not a Boolean
		$oRow.IsSplitAllowed = $bIsSplitAllowed
		$iError = ($oRow.IsSplitAllowed() = $bIsSplitAllowed) ? $iError : BitOR($iError, 4)
	EndIf

	Return ($iError = 0) ? SetError($__LOW_STATUS_SUCCESS, 0, 1) : SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0)

EndFunc   ;==>_LOWriter_TableRowProperty

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableSetData
; Description ...: Fill a TextTable with Data.
; Syntax ........: _LOWriter_TableSetData(Byref $oTable, Byref $avData)
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $avData              - [in/out] an array of variants. See Remarks.
; Return values .: Success: 1.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = Table not inserted into Document yet.
;				   @Error 1 @Extended 3 Return 0 = $avData variable not an Array.
;				   @Error 1 @Extended 4 Return 0 = $avData Array does not contain the same number of elements as Rows in the
;				   +									Table.
;				   @Error 1 @Extended 5 Return ? = $avData sub arrays do not contain enough elements to match columns contained
;				   +									in Table. Return set to element # in main array containing faulty array.
;				   --Success--
;				   @Error 0 @Extended 0 Return 1. Table data was successfully set.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: The array must be an array of Arrays. The Main Array must contain the same number of elements as there are
;					rows, and each sub Array must have the same number of Elements as there are columns. To skip a Cell, just
;					leave the sub array element blank you want to skip. This will replace all previous data in the Table. The
;					Array will not be modified.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableSetData(ByRef $oTable, ByRef $avData)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iColumns

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;can't set data if Table not in doc.
	If Not IsArray($avData) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If (UBound($avData) <> $oTable.getRows.getCount()) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0) ;Array doesn't contain enough elements to match Table.
	$iColumns = $oTable.getColumns.getCount()
	For $i = 0 To UBound($avData) - 1
		If (UBound($avData[$i]) <> $iColumns) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, $i) ;Array contains too short of array for Table column count.
		Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
	Next
	$oTable.setDataArray($avData)
	Return SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableSetData

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TablesGetNames
; Description ...: List the names of all tables contained in a document.
; Syntax ........: _LOWriter_TablesGetNames(Byref $oDoc)
; Parameters ....: $oDoc           - [in/out] an object. A Document object returned by previous DocOpen, DocConnect, or
;				   +					DocCreate function.
; Return values .: Success: Array of Strings.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oDoc variable not an Object.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Failure retrieving Table objects.
;				   @Error 2 @Extended 2 Return 0 = Document contains no Tables.
;				   --Success--
;				   @Error 0 @Extended ? Return Array. Returning Array of Table Names. @Extended set to number of Names returned.
; Author ........: donnyh13
; Modified ......:
; Remarks .......:
; Related .......:_LOWriter_TableGetObjByName
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TablesGetNames(ByRef $oDoc)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $oTable, $oTables
	Local $asTableNames[0]

	If Not IsObj($oDoc) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	$oTables = $oDoc.TextTables()
	If Not IsObj($oTables) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)
	If $oTables.hasElements() Then
		ReDim $asTableNames[$oTables.getCount()]
		For $i = 0 To $oTables.getCount() - 1
			$oTable = $oTables.getByIndex($i)
			$asTableNames[$i] = $oTable.Name
			Sleep((IsInt($i / $__LOWCONST_SLEEP_DIV) ? 10 : 0)) ;Sleep every x cycles.
		Next
		Return SetError($__LOW_STATUS_SUCCESS, UBound($asTableNames), $asTableNames)
	Else
		Return SetError($__LOW_STATUS_INIT_ERROR, 2, 0) ; No tables.
	EndIf

EndFunc   ;==>_LOWriter_TablesGetNames

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableShadow
; Description ...: Set or Retrieve the shadow settings for a Table Border.
; Syntax ........: _LOWriter_TableShadow(Byref $oTable[, $iWidth = Null[, $iColor = Null[, $bTransparent = Null[, $iLocation = Null]]]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iWidth              - [optional] an integer value. Default is Null. The Width of the Table Shadow set in
;				   +						Micrometers.
;                  $iColor              - [optional] an integer value. Default is Null. The Color of the Table shadow, set in
;				   +						Long Integer format, can be one of the constants below or a custom value.
;                  $bTransparent        - [optional] a boolean value. Default is Null. Whether the Table Shadow is transparent
;				   +						or not.
;                  $iLocation           - [optional] an integer value. Default is Null. The Location of the Table Shadow, must
;				   +						be one of the Constants below.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable parameter not an Object.
;				   @Error 1 @Extended 2 Return 0 = $oTable not inserted into the Document.
;				   @Error 1 @Extended 3 Return 0 = $iWidth not an Integer or less than 0.
;				   @Error 1 @Extended 4 Return 0 = $iColor not an Integer, less than 0, or greater than 16777215.
;				   @Error 1 @Extended 5 Return 0 = $bTransparent not a Boolean.
;				   @Error 1 @Extended 6 Return 0 = $iLocation not an Integer, less than 0 or greater than 4. See Constants.
;				   --Initialization Errors--
;				   @Error 2 @Extended 1 Return 0 = Error retrieving ShadowFormat Object.
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2, 4,8
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iColor
;				   |								4 = Error setting $bTransparent
;				   |								8 = Error setting $iLocation
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 4 Element Array with values in order of function parameters.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
;					Note: LibreOffice may change the shadow width +/- a Micrometer.
; Shadow Location Constants: $LOW_SHADOW_NONE(0) = No shadow.
;							$LOW_SHADOW_TOP_LEFT(1) = Shadow is located along the upper and left sides.
;							$LOW_SHADOW_TOP_RIGHT(2) = Shadow is located along the upper and right sides.
;							$LOW_SHADOW_BOTTOM_LEFT(3) = Shadow is located along the lower and left sides.
;							$LOW_SHADOW_BOTTOM_RIGHT(4) = Shadow is located along the lower and right sides.
; Color Constants: $LOW_COLOR_BLACK(0),
;					$LOW_COLOR_WHITE(16777215),
;					$LOW_COLOR_LGRAY(11711154),
;					$LOW_COLOR_GRAY(8421504),
;					$LOW_COLOR_DKGRAY(3355443),
;					$LOW_COLOR_YELLOW(16776960),
;					$LOW_COLOR_GOLD(16760576),
;					$LOW_COLOR_ORANGE(16744448),
;					$LOW_COLOR_BRICK(16728064),
;					$LOW_COLOR_RED(16711680),
;					$LOW_COLOR_MAGENTA(12517441),
;					$LOW_COLOR_PURPLE(8388736),
;					$LOW_COLOR_INDIGO(5582989),
;					$LOW_COLOR_BLUE(2777241),
;					$LOW_COLOR_TEAL(1410150),
;					$LOW_COLOR_GREEN(43315),
;					$LOW_COLOR_LIME(8508442),
;					$LOW_COLOR_BROWN(9127187).
; Related .......:  _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertColorFromLong,	_LOWriter_ConvertColorToLong,  _LOWriter_ConvertFromMicrometer,
;					_LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableShadow(ByRef $oTable, $iWidth = Null, $iColor = Null, $bTransparent = Null, $iLocation = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $tShdwFrmt
	Local $avShadow[4]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)

	$tShdwFrmt = $oTable.ShadowFormat()
	If Not IsObj($tShdwFrmt) Then Return SetError($__LOW_STATUS_INIT_ERROR, 1, 0)

	If __LOWriter_VarsAreNull($iWidth, $iColor, $bTransparent, $iLocation) Then
		__LOWriter_ArrayFill($avShadow, $tShdwFrmt.ShadowWidth(), $tShdwFrmt.Color(), $tShdwFrmt.IsTransparent(), $tShdwFrmt.Location())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avShadow)
	EndIf

	If ($iWidth <> Null) Then
		If Not __LOWriter_IntIsBetween($iWidth, 0, $iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
		$tShdwFrmt.ShadowWidth = $iWidth
	EndIf

	If ($iColor <> Null) Then
		If Not __LOWriter_IntIsBetween($iColor, $LOW_COLOR_BLACK, $LOW_COLOR_WHITE) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
		$tShdwFrmt.Color = $iColor
	EndIf

	If ($bTransparent <> Null) Then
		If Not IsBool($bTransparent) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5)
		$tShdwFrmt.IsTransparent = $bTransparent
	EndIf

	If ($iLocation <> Null) Then
		If Not __LOWriter_IntIsBetween($iLocation, $LOW_SHADOW_NONE, $LOW_SHADOW_BOTTOM_RIGHT) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 6, 0)
		$tShdwFrmt.Location = $iLocation
	EndIf

	$oTable.ShadowFormat = $tShdwFrmt

	$iError = ($iWidth = Null) ? $iError : (__LOWriter_IntIsBetween($oTable.ShadowFormat.ShadowWidth(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	$iError = ($iColor = Null) ? $iError : ($oTable.ShadowFormat.Color() = $iColor) ? $iError : BitOR($iError, 2)
	$iError = ($bTransparent = Null) ? $iError : ($oTable.ShadowFormat.IsTransparent() = $bTransparent) ? $iError : BitOR($iError, 4)
	$iError = ($iLocation = Null) ? $iError : ($oTable.ShadowFormat.Location() = $iLocation) ? $iError : BitOR($iError, 8)

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)
EndFunc   ;==>_LOWriter_TableShadow

; #FUNCTION# ====================================================================================================================
; Name ..........: _LOWriter_TableWidth
; Description ...: Set and retrieve the Width of a inserted table.
; Syntax ........: _LOWriter_TableWidth(Byref $oTable[, $iWidth = Null[, $iRelativeWidth = Null]])
; Parameters ....: $oTable              - [in/out] an object. A Table Object returned from any Table Object creation
;				   +						Or retrieval functions.
;                  $iWidth              - [optional] an integer value. Default is Null. Specify the absolute table width in
;				   +									Micrometers. See Remarks.
;                  $iRelativeWidth      - [optional] an integer value. Default is Null. Specify the width of the table relative
;				   +						to its environment, in percentage, without a percent sign. See Remarks.
; Return values .: Success: 1 or Array.
;				   Failure: 0 and sets the @Error and @Extended flags to non-zero.
;				   --Input Errors--
;				   @Error 1 @Extended 1 Return 0 = $oTable variable not an Object.
;				   @Error 1 @Extended 2 Return 0 = $iWidth not an Integer and not set to Null.
;				   @Error 1 @Extended 3 Return 0 = $iRelativeWidth not an Integer and not set to Null.
;				   --Processing Errors--
;				   @Error 3 @Extended 1 Return 0 = Cannot set Width unless Table is located in the document.
;				   @Error 3 @Extended 2 Return 0 = Unable to set Width with Table orientation set to $LOW_ORIENT_HORI_FULL(6)
;				   @Error 3 @Extended 3 Return 0 = Unable to set RelativeWidth with orientation set to $LOW_ORIENT_HORI_FULL(6)
;				   --Property Setting Errors--
;				   @Error 4 @Extended ? Return 0 = Some settings were not successfully set. Use BitAND to test @Extended for
;				   +								the following values: 1, 2
;				   |								1 = Error setting $iWidth
;				   |								2 = Error setting $iRelativeWidth
;				   --Success--
;				   @Error 0 @Extended 0 Return 1 = Success. Settings were successfully set.
;				   @Error 0 @Extended 1 Return Array = Success. All optional parameters were set to Null, returning current
;				   +								settings in a 3 Element Array with values in order of function parameters,
;				   +								the third element is a Boolean, If True, the relative width is used,
;				   +								else false means "plain" Width is used.
; Author ........: donnyh13
; Modified ......:
; Remarks .......: Note: Relative Width and Width cannot be set until the Table Horizontal orientation is set to other than
;					$LOW_ORIENT_HORI_FULL(6), which is LibeOffice's default setting. Note: Width may change +/- 1
;					Micrometer once set due to Libre Office.
;					Call this function with only the required parameters (or with all other parameters set to Null keyword), to
;					get the current settings.
;					Call any optional parameter with Null keyword to skip it.
; Related .......: _LOWriter_TableInsert, _LOWriter_TableGetObjByCursor, _LOWriter_TableGetObjByName,
;					_LOWriter_ConvertFromMicrometer, _LOWriter_ConvertToMicrometer
; Link ..........:
; Example .......: Yes
; ===============================================================================================================================
Func _LOWriter_TableWidth(ByRef $oTable, $iWidth = Null, $iRelativeWidth = Null)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iError = 0
	Local $avWidthProps[3]

	If Not IsObj($oTable) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not __LOWriter_IsTableInDoc($oTable) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 1, 0) ;These settings don't work unless Table is inserted.

	If __LOWriter_VarsAreNull($iWidth, $iRelativeWidth) Then
		__LOWriter_ArrayFill($avWidthProps, $oTable.Width(), $oTable.RelativeWidth(), $oTable.IsWidthRelative())
		Return SetError($__LOW_STATUS_SUCCESS, 1, $avWidthProps)
	EndIf

	If ($iWidth <> Null) Then
		If Not IsInt($iWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0) ;not an integer
		If ($oTable.HoriOrient() = $LOW_ORIENT_HORI_FULL) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0) ;Can't set Width/ Relative width with orientation set to Auto(6/Full)
		$oTable.Width = $iWidth
		$iError = (__LOWriter_IntIsBetween($oTable.Width(), $iWidth - 1, $iWidth + 1)) ? $iError : BitOR($iError, 1)
	EndIf

	If ($iRelativeWidth <> Null) Then
		If Not IsInt($iRelativeWidth) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0) ;not an integer
		If ($oTable.HoriOrient() = $LOW_ORIENT_HORI_FULL) Then Return SetError($__LOW_STATUS_PROCESSING_ERROR, 3, 0) ;Can't set Width/ Relative width with orientation set to Auto(6/Full)
		$oTable.RelativeWidth = $iRelativeWidth
		$iError = (__LOWriter_IntIsBetween($oTable.RelativeWidth(), $iRelativeWidth - 1, $iRelativeWidth + 1)) ? $iError : BitOR($iError, 2)
	EndIf

	Return ($iError > 0) ? SetError($__LOW_STATUS_PROP_SETTING_ERROR, $iError, 0) : SetError($__LOW_STATUS_SUCCESS, 0, 1)

EndFunc   ;==>_LOWriter_TableWidth

Func __LOWriter_ViewCursorMove(ByRef $oCursor, $iMove, $iCount, $bSelect = False)
	Local $oCOM_ErrorHandler = ObjEvent("AutoIt.Error", __LOWriter_InternalComErrorHandler)
	#forceref $oCOM_ErrorHandler

	Local $iCounted = 0
	Local $bMoved = False
	Local $asMoves[17]

	$asMoves[$LOW_VIEWCUR_GO_DOWN] = "goDown"
	$asMoves[$LOW_VIEWCUR_GO_UP] = "goUp"
	$asMoves[$LOW_VIEWCUR_GO_LEFT] = "goLeft"
	$asMoves[$LOW_VIEWCUR_GO_RIGHT] = "goRight"
	$asMoves[$LOW_VIEWCUR_GOTO_END_OF_LINE] = "gotoEndOfLine"
	$asMoves[$LOW_VIEWCUR_GOTO_START_OF_LINE] = "gotoStartOfLine"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_FIRST_PAGE] = "jumpToFirstPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_LAST_PAGE] = "jumpToLastPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_PAGE] = "jumpToPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_NEXT_PAGE] = "jumpToNextPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_PREV_PAGE] = "jumpToPreviousPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_END_OF_PAGE] = "jumpToEndOfPage"
	$asMoves[$LOW_VIEWCUR_JUMP_TO_START_OF_PAGE] = "jumpToStartOfPage"
	$asMoves[$LOW_VIEWCUR_SCREEN_DOWN] = "screenDown"
	$asMoves[$LOW_VIEWCUR_SCREEN_UP] = "screenUp"
	$asMoves[$LOW_VIEWCUR_GOTO_START] = "gotoStart"
	$asMoves[$LOW_VIEWCUR_GOTO_END] = "gotoEnd"

	If Not IsObj($oCursor) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 1, 0)
	If Not IsInt($iMove) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 2, 0)
	If ($iMove >= UBound($asMoves)) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 3, 0)
	If Not IsInt($iCount) Or ($iCount < 0) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 4, 0)
	If Not IsBool($bSelect) Then Return SetError($__LOW_STATUS_INPUT_ERROR, 5, 0)

	Switch $iMove
		Case $LOW_VIEWCUR_GO_DOWN, $LOW_VIEWCUR_GO_UP, $LOW_VIEWCUR_GO_LEFT, $LOW_VIEWCUR_GO_RIGHT
			$bMoved = Execute("$oCursor." & $asMoves[$iMove] & "(" & $iCount & "," & $bSelect & ")")
			$iCounted = ($bMoved) ? $iCount : 0
			Return SetError($__LOW_STATUS_SUCCESS, $iCounted, $bMoved)

		Case $LOW_VIEWCUR_GOTO_END_OF_LINE, $LOW_VIEWCUR_GOTO_START_OF_LINE, $LOW_VIEWCUR_GOTO_START, $LOW_VIEWCUR_GOTO_END
			$bMoved = Execute("$oCursor." & $asMoves[$iMove] & "(" & $bSelect & ")")
			$iCounted = ($bMoved) ? 1 : 0
			Return SetError($__LOW_STATUS_SUCCESS, $iCounted, $bMoved)

		Case $LOW_VIEWCUR_JUMP_TO_PAGE
			$bMoved = Execute("$oCursor." & $asMoves[$iMove] & "(" & $iCount & ")")
			Return SetError($__LOW_STATUS_SUCCESS, $oCursor.getPage(), $bMoved)

		Case $LOW_VIEWCUR_JUMP_TO_NEXT_PAGE, $LOW_VIEWCUR_JUMP_TO_PREV_PAGE, $LOW_VIEWCUR_SCREEN_DOWN, $LOW_VIEWCUR_SCREEN_UP
			Do
				$bMoved = Execute("$oCursor." & $asMoves[$iMove] & "()")
				$iCounted += ($bMoved) ? 1 : 0
				Sleep((IsInt($iCounted / $__LOWCONST_SLEEP_DIV) ? 10 : 0))
			Until ($iCounted >= $iCount) Or ($bMoved = False)
			Return SetError($__LOW_STATUS_SUCCESS, $iCounted, $bMoved)

		Case $LOW_VIEWCUR_JUMP_TO_FIRST_PAGE, $LOW_VIEWCUR_JUMP_TO_LAST_PAGE, $LOW_VIEWCUR_JUMP_TO_END_OF_PAGE, _
				$LOW_VIEWCUR_JUMP_TO_START_OF_PAGE
			$bMoved = Execute("$oCursor." & $asMoves[$iMove] & "()")
			$iCounted = ($bMoved) ? 1 : 0
			Return SetError($__LOW_STATUS_SUCCESS, $iCounted, $bMoved)
		Case Else
			Return SetError($__LOW_STATUS_PROCESSING_ERROR, 2, 0)
	EndSwitch
EndFunc   ;==>__LOWriter_ViewCursorMove
